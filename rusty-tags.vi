!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AccessError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct AccessError {$/;"	s
AlreadyConsumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    AlreadyConsumed,$/;"	e	enum:MapError
Append	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^trait Append<T> {$/;"	i
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^impl ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^impl AsRef<[u8]> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^impl AsRef<str> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^pub struct ArcStr(Arc<str>);$/;"	s
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum AxisScale {$/;"	g
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^impl AxisScale {$/;"	c
Baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Baseline {$/;"	g
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Bencher {$/;"	c
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Bencher {$/;"	s
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl BenchmarkDefinition for Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct Benchmark {$/;"	s
BenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct BenchmarkConfig {$/;"	s
BenchmarkDefinition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub trait BenchmarkDefinition: Sized {$/;"	i
BenchmarkId	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct BenchmarkId {$/;"	s
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl IntoIterator for BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMask(pub BitMaskWord);$/;"	s
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl Iterator for BitMaskIter {$/;"	c
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMaskIter(BitMask);$/;"	s
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub type BitMaskWord = GroupWord;$/;"	t
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub type BitMaskWord = u16;$/;"	t
Both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct Bucket<T> {$/;"	s
Buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Bytes(u32),$/;"	e	enum:Throughput
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Bytes,$/;"	e	enum:ValueType
COMPARISON_COLORS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^static COMPARISON_COLORS: [Color; NUM_COLORS] = [$/;"	v
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct CliReport {$/;"	s
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone, F: Clone> Clone for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Coalesce<I, F>$/;"	s
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> CoalesceCore<I>$/;"	c
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct CoalesceCore<I>$/;"	s
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
Command	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Routine<()> for Command {$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> Routine<T> for CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct CommandFactory<F, T>$/;"	s
Compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Compare,$/;"	e	enum:Baseline
Comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Comparison {$/;"	s
ComparisonData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct ComparisonData {$/;"	s
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^enum ComparisonResult {$/;"	g
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^enum ComparisonResult {$/;"	g
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct ConfidenceInterval {$/;"	s
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct ConfidenceInterval {$/;"	s
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Context {$/;"	s
Continue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
CopyError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct CopyError {$/;"	s
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Criterion {$/;"	s
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl<W: Write> CsvReportWriter<W> {$/;"	c
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvReportWriter<W: Write> {$/;"	s
CsvRow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvRow<'a> {$/;"	s
DEFAULT_FONT	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone> Clone for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> fmt::Debug for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Dedup<I>$/;"	s
Diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Difference<'a, T, S> {$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Difference<'a, T: 'a, S: 'a> {$/;"	s
Disabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Disabled,$/;"	e	enum:plotting::Plotting
Distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Distributions = BTreeMap<Statistic, Distribution<f64>>;$/;"	t
Done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Drain<'a, K, V> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for Drain<'a, K, V>$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Drain<'a, K: 'a, V: 'a> {$/;"	s
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Drain<'a, K> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Drain<'a, K: 'a> {$/;"	s
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Duration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl DurationExt for Duration {$/;"	c
DurationExt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^trait DurationExt {$/;"	i
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, A> Extend<A> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsMut<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsRef<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> BufRead for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Deref for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DerefMut for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DoubleEndedIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Error for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> ExactSizeIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> From<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Into<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Iterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Read for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Write for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> fmt::Display for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(L, T), (R, T)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(T, L), (T, R)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T> Either<T, T> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^pub enum Either<L, R> {$/;"	g
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Elements(u32),$/;"	e	enum:Throughput
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Elements,$/;"	e	enum:ValueType
Enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Enabled,$/;"	e	enum:plotting::Plotting
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a + Debug, S: BuildHasher> Debug for Entry<'a, K, V, S> /;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V: Default, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub enum Entry<'a, K: 'a, V: 'a, S: 'a> {$/;"	g
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Estimate {$/;"	c
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct Estimate {$/;"	s
Estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Estimates = BTreeMap<Statistic, Estimate>;$/;"	t
F	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl Report for FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^pub struct FileCsvReport;$/;"	s
First	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Flatten<I, J>$/;"	c
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Flatten<I, J> {$/;"	s
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl<I> Fun<I>$/;"	c
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Fun<I: fmt::Debug> {$/;"	s
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Routine<T> for Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub struct Function<F, T>$/;"	s
FxHashBuilder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub type FxHashBuilder = BuildHasherDefault<FxHasher>;$/;"	t
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Default for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Hasher for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub struct FxHasher {$/;"	s
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^impl Generator {$/;"	c
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^pub(crate) struct Generator {$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub struct Group(GroupWord);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub struct Group(x86::__m128i);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u32;$/;"	t
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u64;$/;"	t
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
HasCombination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, Q: ?Sized, V, S> Index<&'a Q> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> Extend<(&'a K, &'a V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a mut HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'de, K, V, S> Deserialize<'de> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, H> Serialize for HashMap<K, V, H>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Debug for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Default for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Eq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Extend<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> FromIterator<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> IntoIterator for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> PartialEq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Hash + Eq, V> HashMap<K, V, DefaultHashBuilder> {$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct HashMap<K, V, S = DefaultHashBuilder> {$/;"	s
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitAnd<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitOr<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitXor<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> Sub<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Extend<&'a T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> IntoIterator for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'de, T, S> Deserialize<'de> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, H> Serialize for HashSet<T, H>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Default for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Eq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Extend<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> FromIterator<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> IntoIterator for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> PartialEq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> fmt::Debug for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T: Hash + Eq> HashSet<T, DefaultHashBuilder> {$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct HashSet<T, S = DefaultHashBuilder> {$/;"	s
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Report for Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^pub struct Html {$/;"	s
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Improved,$/;"	e	enum:ComparisonResult
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndexBenchmark {$/;"	c
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexBenchmark {$/;"	s
IndexContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexContext {$/;"	s
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndividualBenchmark {$/;"	c
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndividualBenchmark {$/;"	s
InnerMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^pub(crate) type InnerMap = HashMap<DayPart, Runner>;$/;"	t
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Intersection<'a, T, S> {$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Intersection<'a, T: 'a, S: 'a> {$/;"	s
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^impl<I> Iterator for Intersperse<I>$/;"	c
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IntoIter<K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = Iter<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IterMut<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> ExactSizeIterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> FusedIterator for IntoIter<K, V> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> Iterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Debug, V: Debug> fmt::Debug for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IntoIter<K, V> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type IntoIter = BitMaskIter;$/;"	t	implementation:BitMask
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type IntoIter = RawIntoIter<T>;$/;"	t	implementation:RawTable
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = IntoIter<T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = Iter<'a, T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K: fmt::Debug> fmt::Debug for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> ExactSizeIterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> FusedIterator for IntoIter<K> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> Iterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct IntoIter<K> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Item = L::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a K;$/;"	t	implementation:Keys
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a V;$/;"	t	implementation:Values
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a mut V;$/;"	t	implementation:ValuesMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t	implementation:IterMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMask
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMaskIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = Bucket<T>;$/;"	t	implementation:RawIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawDrain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawIntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawTable
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = usize;$/;"	t	implementation:ProbeSeq
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a K;$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = J::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = St;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Iter<'a, K, V> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V: Debug> fmt::Debug for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Iter<'a, K: 'a, V: 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Clone for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Iter<'a, K> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Iter<'a, K: 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for IterMut<'a, K, V> {}$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for IterMut<'a, K, V>$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IterMut<'a, K: 'a, V: 'a> {$/;"	s
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
Itertools	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
KDE_POINTS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static KDE_POINTS: usize = 500;$/;"	v
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Iterator for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> fmt::Debug for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMerge<I>$/;"	s
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
KeyFunction	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Keys<'a, K, V> {}$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V> fmt::Debug for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Keys<'a, K: 'a, V: 'a> {$/;"	s
Last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Index<usize> for LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^struct LazyBuffer<I: Iterator> {$/;"	s
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Left(L),$/;"	e	enum:Either
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
LibInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^struct LibInfos {$/;"	s
Linear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Linear,$/;"	e	enum:AxisScale
Logarithmic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Logarithmic,$/;"	e	enum:AxisScale
Longer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
MainInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^enum MainInfos {$/;"	g
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^impl Map {$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^pub struct Map {$/;"	s
MapError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^pub enum MapError {$/;"	g
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for MapResults<I, F>$/;"	c
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MapResults<I, F> {$/;"	s
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        impl<'de, K, V, S> Visitor<'de> for MapVisitor<K, V, S>$/;"	c	function:deserialize
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        struct MapVisitor<K, V, S> {$/;"	s	function:deserialize
Mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Mean,$/;"	e	enum:Statistic
MeasurementData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct MeasurementData<'a> {$/;"	s
Median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Median,$/;"	e	enum:Statistic
MedianAbsDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    MedianAbsDev,$/;"	e	enum:Statistic
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> fmt::Debug for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Merge<I, J>$/;"	s
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^struct MergeCore<I, J>$/;"	s
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MidIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MinMax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
NamedRoutine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct NamedRoutine<T> {$/;"	s
NoElements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NotAvailable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        NotAvailable,$/;"	e	enum:plotting::Plotting
Occupied	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Occupied(OccupiedEntry<'a, K, V, S>),$/;"	e	enum:Entry
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug, V: 'a + Debug, S> Debug for OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct OccupiedEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Send for OccupiedEntry<'a, K, V, S>$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Sync for OccupiedEntry<'a, K, V, S>$/;"	c
OneElement	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
Only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Output = V;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Output = HashSet<T, S>;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Output = I::Item;$/;"	t
Output	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    type Output = Pt<T>;$/;"	t	implementation:Pt
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> BenchmarkDefinition for ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct ParameterizedBenchmark<T: Debug> {$/;"	s
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Default for PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^struct PartialBenchmarkConfig {$/;"	s
Peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Plot {$/;"	c
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Plot {$/;"	s
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct PlotConfiguration {$/;"	s
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    impl Plotting {$/;"	c	module:plotting
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub enum Plotting {$/;"	g	module:plotting
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl Iterator for ProbeSeq {$/;"	c
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^struct ProbeSeq {$/;"	s
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Program {$/;"	c
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct Program {$/;"	s
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<'a, T: Signed + Copy + Ord> Add<Pt<T>> for &'a Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<T: Signed + Copy + Ord> Add for Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<T: Signed + Copy + Ord> Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^pub struct Pt<T: Signed + Copy + Ord = isize>(pub T, pub T);$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Drop for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> ExactSizeIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> FusedIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Iterator for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawDrain<'a, T: 'a> {$/;"	s
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Send for RawDrain<'a, T> where T: Send {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Sync for RawDrain<'a, T> where T: Sync {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIntoIter<T> {$/;"	s
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIntoIter<T> where T: Send {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIntoIter<T> where T: Sync {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIter<T> {$/;"	s
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIter<T> where T: Send {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIter<T> where T: Sync {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T: Clone> Clone for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> IntoIterator for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawTable<T> {$/;"	s
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawTable<T> where T: Send {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawTable<T> where T: Sync {}$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
Ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^    Ref { lib: pm2::Ident },$/;"	e	enum:MainInfos
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
Report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) trait Report {$/;"	i
ReportContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct ReportContext {$/;"	s
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct Reports {$/;"	s
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Right(R),$/;"	e	enum:Either
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
Routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub trait Routine<T> {$/;"	i
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^pub trait Runner {$/;"	i
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^impl Runner {$/;"	c
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^pub(crate) struct Runner {$/;"	s
SIZE	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static SIZE: Size = Size(1280, 720);$/;"	v
Save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Save,$/;"	e	enum:Baseline
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'a, 'de, T, S> Visitor<'de> for SeqInPlaceVisitor<'a, T, S>$/;"	c	function:deserialize_in_place
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqInPlaceVisitor<'a, T: 'a, S: 'a>(&'a mut HashSet<T, S>);$/;"	s	function:deserialize_in_place
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'de, T, S> Visitor<'de> for SeqVisitor<T, S>$/;"	c	function:deserialize
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqVisitor<T, S> {$/;"	s	function:deserialize
Shorter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
SizeHint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
Slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Slope,$/;"	e	enum:Statistic
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^impl Solver {$/;"	c
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^pub(crate) struct Solver {$/;"	s
Standalone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^    Standalone { year: u32 },$/;"	e	enum:MainInfos
StartOfIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
State	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^impl fmt::Display for Statistic {$/;"	c
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub enum Statistic {$/;"	g
StdDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    StdDev,$/;"	e	enum:Statistic
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
SummaryContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct SummaryContext {$/;"	s
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for SymmetricDifference<'a, T, S> {$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct SymmetricDifference<'a, T: 'a, S: 'a> {$/;"	s
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Target = L::Target;$/;"	t
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Throughput {$/;"	g
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Union<'a, T, S> {$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Union<'a, T: 'a, S: 'a> {$/;"	s
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
Vacant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Vacant(VacantEntry<'a, K, V, S>),$/;"	e	enum:Entry
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a, S: 'a + BuildHasher> Debug for VacantEntry<'a, K, V, /;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Eq + Hash, V: 'a, S: BuildHasher> VacantEntry<'a, K, V, S> {$/;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct VacantEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Value,$/;"	e	enum:ValueType
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            type Value = HashMap<K, V, S>;$/;"	t	function:deserialize
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = HashSet<T, S>;$/;"	t	function:deserialize
ValueType	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub enum ValueType {$/;"	g
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V: Debug> fmt::Debug for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Values<'a, K, V> {}$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Values<'a, K: 'a, V: 'a> {$/;"	s
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for ValuesMut<'a, K, V> {}$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for ValuesMut<'a, K, V>$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct ValuesMut<'a, K: 'a, V: 'a> {$/;"	s
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^impl<T> Append<T> for Vec<T> {$/;"	c
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            _align: [GroupWord; 0],$/;"	m	struct:Group::static_empty::Dummy
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            _align: [x86::__m128i; 0],$/;"	m	struct:Group::static_empty::Dummy
_child	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _child: Child,$/;"	m	struct:Program
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a HashMap<K, V>>,$/;"	m	struct:Iter
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a mut HashMap<K, V>>,$/;"	m	struct:IterMut
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    _marker: PhantomData<&'a RawTable<T>>,$/;"	m	struct:RawDrain
_mi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mt: PhantomData<T>$/;"	m	struct:TupleCombinations
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:CommandFactory
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:Function
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn a() -> Either<u32, u32> {$/;"	f	function:macros
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeCore
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a_cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
abs_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn abs_distributions($/;"	f
absolute_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub absolute_estimates: Estimates,$/;"	m	struct:MeasurementData
adaptors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod adaptors;$/;"	n
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn add(&mut self, names: &[&str], idb: IndexBenchmark) {$/;"	P	implementation:IndexBenchmark
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    fn add(self, other: Pt<T>) -> Self::Output {$/;"	P	implementation:Pt
add	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    fn add(self, other: Self) -> Self::Output {$/;"	P	implementation:Pt
add_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_to_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn add_to_hash(&mut self, i: usize) {$/;"	P	implementation:FxHasher
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Comparison
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Context
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn all<F>(&mut self, f: F) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
alloc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    alloc: Option<(NonNull<u8>, Layout)>,$/;"	m	struct:RawIntoIter
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod analysis;$/;"	n
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
and_modify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn and_modify<F>(self, f: F) -> Self$/;"	P	implementation:Entry
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
any_bit_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn any_bit_set(self) -> bool {$/;"	P	implementation:BitMask
aoc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^pub fn aoc(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^pub fn aoc_generator(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_lib	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^pub fn aoc_lib(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^pub fn aoc_main(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^pub fn aoc_runner_derive(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/derive.rs	/^pub fn aoc_runner_derive_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(mut self, item: T) -> Vec<T> {$/;"	P	implementation:Vec
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(self, item: T) -> Self;$/;"	P	interface:Append
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_mut(&mut self) -> &mut Target {$/;"	f
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_mut(&mut self) -> Either<&mut L, &mut R> {$/;"	P	implementation:Either
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_mut<'a>(&self) -> &'a mut T {$/;"	P	implementation:Bucket
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_ref(&self) -> &Target {$/;"	f
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_ref(&self) -> Either<&L, &R> {$/;"	P	implementation:Either
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_ref<'a>(&self) -> &'a T {$/;"	P	implementation:Bucket
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn assert_covariance() {$/;"	f
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^fn assert_covariance() {$/;"	f
assert_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn assert_iterated(&mut self) {$/;"	P	implementation:Bencher
avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub avg_times: LabeledSample<'a, f64>,$/;"	m	struct:MeasurementData
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn b() -> Either<String, &'static str> {$/;"	f	function:macros
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeCore
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
backlog	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
base_avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_avg_times: Vec<f64>,$/;"	m	struct:ComparisonData
base_dir_exists	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn base_dir_exists(id: &BenchmarkId, baseline: &str, output_directory: &str) -> bool {$/;"	f
base_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_estimates: Estimates,$/;"	m	struct:ComparisonData
base_iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_iter_counts: Vec<f64>,$/;"	m	struct:ComparisonData
base_sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_sample_times: Vec<f64>,$/;"	m	struct:ComparisonData
baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline: Baseline,$/;"	m	struct:Criterion
baseline_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline_directory: String,$/;"	m	struct:Criterion
basic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn basic() {$/;"	f
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench<B: BenchmarkDefinition>($/;"	P	implementation:Criterion
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, iters: &[u64]) -> Vec<f64> {$/;"	P	implementation:Program
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &()) -> Vec<f64> {$/;"	P	implementation:Command
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, _: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, m: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64>;$/;"	P	interface:Routine
bench_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function<F>(&mut self, id: &str, f: F) -> &mut Criterion$/;"	P	implementation:Criterion
bench_function_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function_over_inputs<I, F>(&mut self, id: &str, f: F, inputs: I) -> &mut Criter/;"	P	implementation:Criterion
bench_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_functions<I>(&mut self, id: &str, funs: Vec<Fun<I>>, input: I) -> &mut Criterio/;"	P	implementation:Criterion
bench_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program(&mut self, id: &str, program: Command) -> &mut Criterion {$/;"	P	implementation:Criterion
bench_program_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program_over_inputs<I, F>($/;"	P	implementation:Criterion
benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod benchmark;$/;"	n
benchmark_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^macro_rules! benchmark_config {$/;"	M
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexContext
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndividualBenchmark>,$/;"	m	struct:SummaryContext
bitand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitand(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bitmask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod bitmask;$/;"	n
bitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bitxor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitxor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
black_box	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn black_box<T>(dummy: T) -> T {$/;"	f
body	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn body(infos: &DayParts, lib: Option<pm2::Ident>) -> pm2::TokenStream {$/;"	f
bold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn bold(&self, s: String) -> String {$/;"	P	implementation:CliReport
borrow_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    pub(crate) fn borrow_mut(&self) -> Result<RefMut<InnerMap>, MapError> {$/;"	P	implementation:Map
both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod both;$/;"	n
bottom_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn bucket(&self, index: usize) -> Bucket<T> {$/;"	P	implementation:RawTable
bucket_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn bucket_index(&self, bucket: &Bucket<T>) -> usize {$/;"	P	implementation:RawTable
bucket_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    bucket_mask: usize,$/;"	m	struct:RawTable
bucket_mask_to_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn bucket_mask_to_capacity(bucket_mask: usize) -> usize {$/;"	f
buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn buckets(&self) -> usize {$/;"	P	implementation:RawTable
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    buffer: String,$/;"	m	struct:Program
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn bytes_per_second(bytes_per_second: f64) -> String {$/;"	f
calculate_layout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn calculate_layout<T>(buckets: usize) -> Option<(Layout, usize)> {$/;"	f
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
can_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn can_plot(&self) -> bool {$/;"	P	implementation:Criterion
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:RawTable
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity_to_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn capacity_to_buckets(cap: usize) -> usize {$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
cause	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn cause(&self) -> Option<&Error> {$/;"	f
cautious	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^    pub(crate) fn cautious(hint: Option<usize>) -> usize {$/;"	f	module:size_hint
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn change(pct: f64, signed: bool) -> String {$/;"	f
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    change: ConfidenceInterval,$/;"	m	struct:Comparison
chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:RawTable
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clear_no_drop(&mut self) {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Iter<'a, K, V> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Keys<'a, K, V> {$/;"	P	implementation:Keys
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Values<'a, K, V> {$/;"	P	implementation:Values
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Bucket
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawIter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Difference<'a, T, S> {$/;"	P	implementation:Difference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Intersection<'a, T, S> {$/;"	P	implementation:Intersection
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Iter<'a, K> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> SymmetricDifference<'a, T, S> {$/;"	P	implementation:SymmetricDifference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Union<'a, T, S> {$/;"	P	implementation:Union
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> KMerge<I> {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn clone(&self) -> RcIter<I> {$/;"	P	implementation:RcIter
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! clone_fields {$/;"	M
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^macro_rules! clone_fields {$/;"	M
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp_fn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect_from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub fn combinations<I>(iter: I, n: usize) -> Combinations<I>$/;"	f
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn combinations(self, n: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod combinations;$/;"	n
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^pub(crate) fn common($/;"	f
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^pub(crate) fn common<T>($/;"	f
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^mod compare;$/;"	n
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    comparison: Option<Comparison>,$/;"	m	struct:Context
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn comparison(&self, measurements: &MeasurementData) -> Option<Comparison> {$/;"	P	implementation:Html
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub comparison: Option<ComparisonData>,$/;"	m	struct:MeasurementData
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod concat_impl;$/;"	n
confidence	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    confidence: String,$/;"	m	struct:Context
confidence_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_interval: ConfidenceInterval,$/;"	m	struct:Estimate
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    confidence_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub confidence_level: f64,$/;"	m	struct:BenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_level: f64,$/;"	m	struct:ConfidenceInterval
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn confidence_level(mut self, cl: f64) -> Criterion {$/;"	P	implementation:Criterion
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:Benchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:ParameterizedBenchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    config: BenchmarkConfig,$/;"	m	struct:Criterion
configure_from_args	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn configure_from_args(mut self) -> Criterion {$/;"	P	implementation:Criterion
cons_tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I, J>$/;"	f
cons_tuples_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    pub(crate) fn consume(&self) -> Result<Ref<InnerMap>, MapError> {$/;"	P	implementation:Map
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn consume(&mut self, amt: usize) {$/;"	f
consumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    consumed: Cell<bool>,$/;"	m	struct:Map
contains	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn contains<Q: ?Sized>(&self, value: &Q) -> bool$/;"	f
contains_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool$/;"	f
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
copy_new_dir_to_base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn copy_new_dir_to_base(id: &str, baseline: &str, output_directory: &str) {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count_new_keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
cp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn cp(from: &Path, to: &Path) -> Result<()> {$/;"	f
criterion_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_group {$/;"	M
criterion_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_main {$/;"	M
csv_report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod csv_report;$/;"	n
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: *const u8,$/;"	m	struct:RawIter
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: NonNull<u8>,$/;"	m	struct:RawTable
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn ctrl(&self, index: usize) -> *mut u8 {$/;"	P	implementation:RawTable
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current_elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    current_group: BitMask,$/;"	m	struct:RawIter
current_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: *const T,$/;"	m	struct:RawIter
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: NonNull<T>,$/;"	m	struct:RawTable
day01	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day01;$/;"	n
day02	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day02;$/;"	n
debug_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^fn debug_enabled() -> bool {$/;"	f
debug_fmt_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
debug_script	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn debug_script(path: &PathBuf, figure: &Figure) {$/;"	f
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn dedup<I>(mut iter: I) -> Dedup<I>$/;"	f
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn default() -> Self {$/;"	P	implementation:PartialBenchmarkConfig
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> Criterion {$/;"	P	implementation:Criterion
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn default() -> FxHasher {$/;"	P	implementation:FxHasher
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn default() -> HashMap<K, V, S> {$/;"	f
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn default() -> HashSet<T, S> {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn deref() {$/;"	f
deref_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod derive;$/;"	n
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod diff;$/;"	n
diff_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn difference<'a, 'new>($/;"	f	function:assert_covariance
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn difference<'a>(&'a self, other: &'a HashSet<T, S>) -> Difference<'a, T, S> {$/;"	f
directory_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    directory_name: String,$/;"	m	struct:BenchmarkId
distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub distributions: Distributions,$/;"	m	struct:MeasurementData
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn drain<'new>($/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn drain(&mut self) -> Drain<K, V> {$/;"	f
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drain(&mut self) -> RawDrain<T> {$/;"	P	implementation:RawTable
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn drain<'new>(d: Drain<'static, &'static str>) -> Drain<'new, &'new str> {$/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn drain(&mut self) -> Drain<T> {$/;"	f
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawDrain
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawIntoIter
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawTable
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drop(&self) {$/;"	P	implementation:Bucket
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropped_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
e	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn e() -> Self {$/;"	P	implementation:Pt
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either<F, G, T>(self, f: F, g: G) -> T$/;"	P	implementation:Either
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! either {$/;"	M
either_or_both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod either_or_both;$/;"	n
either_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either_with<Ctx, F, G, T>(self, ctx: Ctx, f: F, g: G) -> T$/;"	P	implementation:Either
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^macro_rules! elapsed {$/;"	M
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    elapsed: Duration,$/;"	m	struct:Bencher
elem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    elem: Bucket<(K, V)>,$/;"	m	struct:OccupiedEntry
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    element: I::Item,$/;"	m	struct:Intersperse
elements_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn elements_per_second(elements_per_second: f64) -> String {$/;"	f
elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
enable_text_coloring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_coloring: bool,$/;"	m	struct:CliReport
enable_text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_overwrite: bool,$/;"	m	struct:CliReport
end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    end: *const u8,$/;"	m	struct:RawIter
entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn entry(&mut self, key: K) -> Entry<K, V, S> {$/;"	f
enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn eq(&self, other: &HashMap<K, V, S>) -> bool {$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn eq(&self, other: &HashSet<T, S>) -> bool {$/;"	f
equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
erase_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn erase_no_drop(&mut self, item: &Bucket<T>) {$/;"	P	implementation:RawTable
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod error;$/;"	n
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn error() {$/;"	f
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
escape_underscores	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn escape_underscores(string: &str) -> String {$/;"	f
estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod estimate;$/;"	n
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn estimates($/;"	f
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn estimates(avg_times: &Sample<f64>, config: &BenchmarkConfig) -> (Distributions, Estimates) {$/;"	f
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
explanation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    explanation: String,$/;"	m	struct:Comparison
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (&'a K, &'a V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (K, V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = &'a T>>(&mut self, iter: I) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	f
extract_meta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/utils.rs	/^pub(crate) fn extract_meta($/;"	f
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub f: Box<RefCell<Routine<T>>>,$/;"	m	struct:NamedRoutine
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    f: NamedRoutine<I>,$/;"	m	struct:Fun
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    f: F,$/;"	m	struct:CommandFactory
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    f: F,$/;"	m	struct:Function
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:MapResults
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Coalesce
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
factor_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_first(self) -> (T, Either<L, R>) {$/;"	P	implementation:Either
factor_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_second(self) -> (Either<L, R>, T) {$/;"	P	implementation:Either
faint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn faint(&self, s: String) -> String {$/;"	P	implementation:CliReport
fill_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fill_buf(&mut self) -> io::Result<&[u8]> {$/;"	f
filler	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    filter: Option<String>,$/;"	m	struct:Criterion
filter_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn filter_matches(&self, id: &str) -> bool {$/;"	P	implementation:Criterion
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn final_summary(&self, report_context: &ReportContext) {$/;"	P	implementation:Html
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn final_summary(&self) {$/;"	P	implementation:Criterion
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, _context: &ReportContext) {}$/;"	P	interface:Report
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, context: &ReportContext) {$/;"	P	implementation:Reports
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn find(&self, hash: u64, eq: impl Fn(&T) -> bool) -> Option<Bucket<T>> {$/;"	P	implementation:RawTable
find_insert_slot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn find_insert_slot(&self, hash: u64) -> usize {$/;"	P	implementation:RawTable
find_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:FxHasher
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
flag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn flatten<I, J>(iterable: I) -> Flatten<I::IntoIter, J>$/;"	f
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn flatten(self) -> Flatten<Self, <Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
flip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn flip(self) -> Either<R, L> {$/;"	P	implementation:Either
flush	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Statistic
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Entry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Keys
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OccupiedEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:VacantEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Values
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Drain
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fold<Acc, G>(self, init: Acc, f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_options	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
foreach	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn foreach<F>(self, mut f: F)$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod format;$/;"	n
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod format;$/;"	n
format_short_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^            fn format_short_estimate(estimate: &Estimate) -> String {$/;"	f	method:CliReport::measurement_complete
format_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
free	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod free;$/;"	n
free_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn free_buckets(&mut self) {$/;"	P	implementation:RawTable
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^    pub fn from(f: &str) -> ArcStr {$/;"	P	implementation:ArcStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub from: PathBuf,$/;"	m	struct:CopyError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn from(r: Result<R, L>) -> Self {$/;"	P	implementation:Either
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn from_id(path_prefix: &str, id: &BenchmarkId) -> IndividualBenchmark {$/;"	P	implementation:IndividualBenchmark
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn from_iter<T: IntoIterator<Item = (K, V)>>(iter: T) -> HashMap<K, V, S> {$/;"	f
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> HashSet<T, S> {$/;"	f
from_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn from_ptr(ptr: *const T) -> Self {$/;"	P	implementation:Bucket
front	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    front: Option<J>,$/;"	m	struct:Flatten
fs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod fs;$/;"	n
full_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    full_id: String,$/;"	m	struct:BenchmarkId
function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    function: Option<&'a str>,$/;"	m	struct:CsvRow
function_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub function_id: Option<String>,$/;"	m	struct:BenchmarkId
fused	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeCore
fx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod fx;$/;"	n
gen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^    fn gen(input: ArcStr) -> Self where Self: Sized;$/;"	P	interface:Runner
generate_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_plots($/;"	P	implementation:Html
generate_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_summary($/;"	P	implementation:Html
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod generator;$/;"	n
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub generator: Option<Generator>,$/;"	m	struct:Runner
generator_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/generator.rs	/^pub fn generator_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get(&self) -> &V {$/;"	P	implementation:OccupiedEntry
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn get<Q: ?Sized>(&self, value: &Q) -> Option<&T>$/;"	f
get_key_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>$/;"	f
get_meta_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/derive.rs	/^fn get_meta_items(attr: &syn::Attribute) -> Option<Vec<syn::NestedMeta>> {$/;"	f
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut V {$/;"	P	implementation:OccupiedEntry
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, k: &Q) -> Option<&mut V>$/;"	f
get_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn get_name(&self) -> syn::Ident {$/;"	P	implementation:Generator
get_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn get_out_t(&self) -> pm2::TokenStream {$/;"	P	implementation:Generator
green	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn green(&self, s: String) -> String {$/;"	P	implementation:CliReport
group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    group: &'a str,$/;"	m	struct:CsvRow
group_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    group_id: String,$/;"	m	struct:SummaryContext
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub group_id: String,$/;"	m	struct:BenchmarkId
group_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod group_map;$/;"	n
groupbylazy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod groupbylazy;$/;"	n
growth_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    growth_left: usize,$/;"	m	struct:RawTable
h1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h1(hash: u64) -> usize {$/;"	f
h2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h2(hash: u64) -> u8 {$/;"	f
handlebars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    handlebars: Handlebars,$/;"	m	struct:Html
handled_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
has_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    hash: usize,$/;"	m	struct:FxHasher
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash: u64,$/;"	m	struct:VacantEntry
hash_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash_builder: S,$/;"	m	struct:HashMap
hash_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_map {$/;"	n
hash_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_set {$/;"	n
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
head	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
headers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn headers(map: &InnerMap, year: u32) -> pm2::TokenStream {$/;"	f
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMerge
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod html;$/;"	n
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub id: String,$/;"	m	struct:NamedRoutine
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^pub fn identity<T>(t: T) -> T {$/;"	f
imp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod imp;$/;"	n
impl_cons_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod impl_macros;$/;"	n
impl_tuple_collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_zip_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
in_progress	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn index(&self, key: &Q) -> &V {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    index: usize,$/;"	m	struct:ProbeSeq
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn index<'b>(&'b self, _index: usize) -> &'b I::Item {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
inequality	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    inequality: String,$/;"	m	struct:Comparison
init_logging	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn init_logging() {$/;"	f
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    inner: RefCell<InnerMap>,$/;"	m	struct:Map
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:AccessError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:CopyError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Keys
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Values
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: IterMut<'a, K, V>,$/;"	m	struct:ValuesMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIntoIter<(K, V)>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, k: K, v: V) -> Option<V> {$/;"	f
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, mut value: V) -> V {$/;"	P	implementation:OccupiedEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(self, value: V) -> &'a mut V {$/;"	P	implementation:VacantEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn insert(&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> Bucket<T> {$/;"	P	implementation:RawTable
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn insert(&mut self, value: T) -> bool {$/;"	f
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn intersection<'a, 'new>($/;"	f	function:assert_covariance
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn intersection<'a>(&'a self, other: &'a HashSet<T, S>) -> Intersection<'a, T, S> {$/;"	f
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod intersperse;$/;"	n
into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn into(self) -> Result<R, L> {$/;"	P	implementation:Either
into_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Either
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_iter(self) -> Either<L::IntoIter, R::IntoIter>$/;"	P	implementation:Either
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IntoIter<K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> Iter<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IterMut<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn into_iter(self) -> BitMaskIter {$/;"	P	implementation:BitMask
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn into_iter(self) -> RawIntoIter<T> {$/;"	P	implementation:RawTable
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> IntoIter<T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> Iter<'a, T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter<'new>(v: IntoIter<&'static str>) -> IntoIter<&'new str> {$/;"	f	function:assert_covariance
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_key<'new>(v: IntoIter<&'static str, u8>) -> IntoIter<&'new str, u8> {$/;"	f	function:assert_covariance
into_iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_val<'new>(v: IntoIter<u8, &'static str>) -> IntoIter<u8, &'new str> {$/;"	f	function:assert_covariance
into_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_key(self) -> K {$/;"	P	implementation:VacantEntry
into_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_mut(self) -> &'a mut V {$/;"	P	implementation:OccupiedEntry
into_option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_parts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
invert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn invert(self) -> BitMask {$/;"	P	implementation:BitMask
iproduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! iproduct {$/;"	M
is_benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^    fn is_benchmark(entry: &DirEntry) -> bool {$/;"	f	function:list_existing_benchmarks
is_dir	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn is_dir<P>(path: &P) -> bool$/;"	f
is_disjoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_disjoint(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        pub fn is_enabled(self) -> bool {$/;"	P	implementation:plotting::Plotting
is_full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_full(ctrl: u8) -> bool {$/;"	f
is_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:Either
is_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:Either
is_rls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/utils.rs	/^pub(crate) fn is_rls() -> bool {$/;"	f
is_special	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_special(ctrl: u8) -> bool {$/;"	f
is_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn is_str(_: &str) {}$/;"	f	function:deref
is_subset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_subset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_superset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_superset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
it	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    it: I,$/;"	m	struct:LazyBuffer
it0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawIter
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawTable
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn iter() {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter(&self) -> Iter<K, V> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IterMut
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawTable
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn iter<'a, 'new>(v: Iter<'a, &'static str>) -> Iter<'a, &'new str> {$/;"	f	function:assert_covariance
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Difference<'a, T, S>, Difference<'a, T, S>>,$/;"	m	struct:SymmetricDifference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Iter<'a, T>, Difference<'a, T, S>>,$/;"	m	struct:Union
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Difference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Intersection
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Keys<'a, K, ()>,$/;"	m	struct:Iter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::Drain<'a, K, ()>,$/;"	m	struct:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::IntoIter<K, ()>,$/;"	m	struct:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn iter(&self) -> Iter<T> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Coalesce
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Dedup
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:CoalesceCore
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Flatten
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:MapResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:Intersperse
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn iter_count(iterations: u64) -> String {$/;"	f
iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub iter_counts: &'a Sample<f64>,$/;"	m	struct:MeasurementData
iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_key<'a, 'new>(v: Iter<'a, &'static str, u8>) -> Iter<'a, &'new str, u8> {$/;"	f	function:assert_covariance
iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut<K, V> {$/;"	f
iter_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_val<'a, 'new>(v: Iter<'a, u8, &'static str>) -> Iter<'a, u8, &'new str> {$/;"	f	function:assert_covariance
iter_with_large_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_drop<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter_with_large_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_setup<I, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iter_with_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_setup<I, O, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iterated: bool,$/;"	m	struct:Bencher
iteration_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    iteration_count: u64,$/;"	m	struct:CsvRow
iters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iters: u64,$/;"	m	struct:Bencher
izip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! izip {$/;"	M
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
kde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod kde;$/;"	n
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: K,$/;"	m	struct:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: Option<K>,$/;"	m	struct:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:Entry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn keys(&self) -> Keys<K, V> {$/;"	f
keys_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_key<'a, 'new>(v: Keys<'a, &'static str, u8>) -> Keys<'a, &'new str, u8> {$/;"	f	function:assert_covariance
keys_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_val<'a, 'new>(v: Keys<'a, u8, &'static str>) -> Keys<'a, u8, &'new str> {$/;"	f	function:assert_covariance
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod kmerge_impl;$/;"	n
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    last: Option<I::Item>,$/;"	m	struct:CoalesceCore
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
last_line_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    last_line_len: Cell<usize>,$/;"	m	struct:CliReport
leading_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn leading_zeros(self) -> usize {$/;"	P	implementation:BitMask
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left(self) -> Option<L> {$/;"	P	implementation:Either
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left_and_then<F, S>(self, f: F) -> Either<S, R>$/;"	P	implementation:Either
left_shift_push	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IterMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Keys
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Values
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ValuesMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:RawTable
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn len(&self) -> usize {$/;"	f
less_than	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
lib_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^pub fn lib_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
likely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn likely(b: bool) -> bool {$/;"	f
line_chart	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    line_chart: Option<String>,$/;"	m	struct:SummaryContext
line_comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn line_comparison($/;"	f
list_existing_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn list_existing_benchmarks<P>(directory: &P) -> Result<Vec<BenchmarkId>>$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn load<A, P: ?Sized>(path: &P) -> Result<A>$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_summary_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn load_summary_data($/;"	P	implementation:Html
log_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub(crate) fn log_error(e: &Error) {$/;"	f
log_if_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! log_if_err {$/;"	M
lookup_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    lower: String,$/;"	m	struct:ConfidenceInterval
lower_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    lower_bound: f64,$/;"	m	struct:ConfidenceInterval
lowest_set_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn lowest_set_bit(self) -> Option<usize> {$/;"	P	implementation:BitMask
lowest_set_bit_nonzero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub unsafe fn lowest_set_bit_nonzero(self) -> usize {$/;"	P	implementation:BitMask
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn macros() {$/;"	f
macros_private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros_private;$/;"	n
mad	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mad: ConfidenceInterval,$/;"	m	struct:Context
main_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^pub fn main_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
make_filename_safe	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn make_filename_safe(string: &str) -> String {$/;"	f
make_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn make_hash<K: Hash + ?Sized>(hash_builder: &impl BuildHasher, val: &K) -> u64 {$/;"	f
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    map: HashMap<T, (), S>,$/;"	m	struct:HashSet
map_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_key<'new>(v: HashMap<&'static str, u8>) -> HashMap<&'new str, u8> {$/;"	f	function:assert_covariance
map_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_left<F, M>(self, f: F) -> Either<M, R>$/;"	P	implementation:Either
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn map_results<I, F, T, U, E>(iter: I, f: F) -> MapResults<I, F>$/;"	f
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapResults<Self, F>$/;"	P	interface:Itertools
map_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_right<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
map_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_val<'new>(v: HashMap<u8, &'static str>) -> HashMap<u8, &'new str> {$/;"	f	function:assert_covariance
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            marker: PhantomData<HashMap<K, V, S>>,$/;"	m	struct:deserialize::MapVisitor
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            marker: PhantomData<HashSet<T, S>>,$/;"	m	struct:deserialize::SeqVisitor
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    mask: usize,$/;"	m	struct:ProbeSeq
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mean: ConfidenceInterval,$/;"	m	struct:Context
measure_only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    measure_only: bool,$/;"	m	struct:Criterion
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn measurement_complete($/;"	P	implementation:FileCsvReport
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn measurement_complete($/;"	P	implementation:Html
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	implementation:Reports
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	interface:Report
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete(&self, id: &BenchmarkId, _: &ReportContext, meas: &MeasurementData) /;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:Reports
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	interface:Report
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    measurement_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub measurement_time: Duration,$/;"	m	struct:BenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn measurement_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    median: ConfidenceInterval,$/;"	m	struct:Context
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:Merge
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:MergeBy
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I, J, F>$/;"	f
merge_join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
mkdirp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn mkdirp<P>(path: &P) -> Result<()>$/;"	f
mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod multipeek_impl;$/;"	n
multizip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    n: usize,$/;"	m	struct:Combinations
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
n	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn n() -> Self {$/;"	P	implementation:Pt
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    name: String,$/;"	m	struct:Generator
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    name: String,$/;"	m	struct:Solver
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndexBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndividualBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:Plot
ne	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn ne() -> Self {$/;"	P	implementation:Pt
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/map.rs	/^    pub(crate) fn new() -> Map {$/;"	P	implementation:Map
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type) -> Generator {$/;"	P	implementation:Generator
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type) -> Solver {$/;"	P	implementation:Solver
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F, I>(id: S, f: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F>(id: S, f: F) -> Benchmark$/;"	P	implementation:Benchmark
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn new(name: &str, url: &str) -> Plot {$/;"	P	implementation:Plot
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    pub fn new() -> Html {$/;"	P	implementation:Html
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn new(distributions: &Distributions, points: &BTreeMap<Statistic, f64>, cl: f64) -> Estimat/;"	P	implementation:Estimate
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn new<F>(name: &str, f: F) -> Fun<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn new(f: F) -> CommandFactory<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new($/;"	P	implementation:CliReport
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new(reports: Vec<Box<Report>>) -> Reports {$/;"	P	implementation:Reports
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    pub fn new(f: F) -> Function<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn new() -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn new() -> RawTable<T> {$/;"	P	implementation:RawTable
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn new() -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new_chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S, F, I>(id: S, program: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S>(id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
new_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format<'a, I, F>(iter: I, separator: &'a str, f: F) -> FormatWith<'a, I, F>$/;"	f
new_format_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format_default<'a, I>(iter: I, separator: &'a str) -> Format<'a, I>$/;"	f
new_uninitialized	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn new_uninitialized(buckets: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K)> {$/;"	P	implementation:Keys
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a V)> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a mut V)> {$/;"	P	implementation:IterMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a V)> {$/;"	P	implementation:Values
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a mut V)> {$/;"	P	implementation:ValuesMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:BitMaskIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<Bucket<T>> {$/;"	P	implementation:RawIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawDrain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawIntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:ProbeSeq
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a K> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<(I::Item, J::Item)> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<B> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	P	implementation:PutBackN
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut f: F) -> Option<I::Item>$/;"	f
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut less_than: F) -> Option<I::Item>$/;"	f
nn8	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn nn8(self) -> Vec<Self> {$/;"	P	implementation:Pt
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    noise_threshold: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub noise_threshold: f64,$/;"	m	struct:BenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn noise_threshold(mut self, threshold: f64) -> Criterion {$/;"	P	implementation:Criterion
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub noise_threshold: f64,$/;"	m	struct:ComparisonData
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    nresamples: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub nresamples: usize,$/;"	m	struct:BenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn nresamples(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
nth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
num_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
nw	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn nw() -> Self {$/;"	P	implementation:Pt
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    offset: usize,$/;"	m	struct:ProbeSeq
oldest_buffered_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
or_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_default(self) -> &'a mut V {$/;"	P	implementation:Entry
or_insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert(self, default: V) -> &'a mut V {$/;"	P	implementation:Entry
or_insert_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert_with<F: FnOnce() -> V>(self, default: F) -> &'a mut V {$/;"	P	implementation:Entry
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Difference
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Intersection
out	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod out;$/;"	n
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    out_t: String,$/;"	m	struct:Generator
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    out_t: String,$/;"	m	struct:Solver
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn outliers<'a>($/;"	f
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn outliers(&self, sample: &LabeledSample<f64>) {$/;"	P	implementation:CliReport
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    output_directory: String,$/;"	m	struct:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn output_directory(mut self, path: &std::path::Path) -> Criterion {$/;"	P	implementation:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub output_directory: String,$/;"	m	struct:ReportContext
owner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    p_value: String,$/;"	m	struct:Comparison
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub p_value: f64,$/;"	m	struct:ComparisonData
pad_tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn parse_input(input: &str) -> Vec<isize> {$/;"	f
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn parse_input(input: &str) -> Vec<isize> {$/;"	f
parse_lib_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn parse_lib_infos(infos: pm::TokenStream) -> Result<LibInfos, ()> {$/;"	f
parse_main_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn parse_main_infos(infos: pm::TokenStream) -> Result<MainInfos, ()> {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part1(input: &[isize]) -> isize {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn part1(input: &str) -> u32 {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part1(input: &[isize]) -> isize {$/;"	f
part1_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part1_example() {$/;"	f	module:tests
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part2(input: &[isize]) -> isize {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^pub fn part2<'a>(input: &'a str) -> String {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part2(input: &[isize]) -> isize {$/;"	f
part2_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part2_example() {$/;"	f	module:tests
part2_hb	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^pub fn part2_hb<'a>(input: &'a str) -> String {$/;"	f
part2_hb_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part2_hb_example() {$/;"	f	module:tests
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, predicate: F) -> (A, B)$/;"	P	interface:Itertools
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub path: PathBuf,$/;"	m	struct:AccessError
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: Option<String>,$/;"	m	struct:IndexBenchmark
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: String,$/;"	m	struct:IndividualBenchmark
pdf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf($/;"	f
pdf_small	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf_small(sample: &Sample<f64>, path: String, size: Option<Size>) -> Child {$/;"	f
pdfs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub fn pdfs($/;"	f
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:Intersperse
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
phase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plot;$/;"	n
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    plot_config: PlotConfiguration,$/;"	m	struct:PartialBenchmarkConfig
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plot_config: PlotConfiguration,$/;"	m	struct:ReportContext
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    plotting: Plotting,$/;"	m	struct:Criterion
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plotting {$/;"	n
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plotting: Plotting,$/;"	m	struct:ReportContext
point	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    point: String,$/;"	m	struct:ConfidenceInterval
point_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    point_estimate: f64,$/;"	m	struct:Estimate
pool	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
print_overwritable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn print_overwritable(&self, s: String) {$/;"	P	implementation:CliReport
probe_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn probe_seq(&self, hash: u64) -> ProbeSeq {$/;"	P	implementation:RawTable
process_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod process_results_impl;$/;"	n
program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod program;$/;"	n
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ptr: NonNull<T>,$/;"	m	struct:Bucket
push_next_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod put_back_n_impl;$/;"	n
r2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    r2: ConfidenceInterval,$/;"	m	struct:Context
raw	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod raw;$/;"	n
rcbuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod rciter_impl;$/;"	n
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn read(&self) -> T {$/;"	P	implementation:Bucket
read_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn read_infos() -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
read_to_end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> io::Result<usize> {$/;"	f
read_write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn read_write() {$/;"	f
recv	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn recv(&mut self) -> &str {$/;"	P	implementation:Program
red	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn red(&self, s: String) -> String {$/;"	P	implementation:CliReport
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn regression(data: Data<f64, f64>, config: &BenchmarkConfig) -> (Distribution<f64>, Estimate) {$/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub(crate) fn regression($/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn regression($/;"	f
rehash_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn rehash_in_place(&mut self, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
rel_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn rel_distributions($/;"	f
relative_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_distributions: Distributions,$/;"	m	struct:ComparisonData
relative_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_estimates: Estimates,$/;"	m	struct:ComparisonData
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove(self) -> V {$/;"	P	implementation:OccupiedEntry
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, k: &Q) -> Option<V>$/;"	f
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn remove<Q: ?Sized>(&mut self, value: &Q) -> bool$/;"	f
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry(self) -> (K, V) {$/;"	P	implementation:OccupiedEntry
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry<Q: ?Sized>(&mut self, k: &Q) -> Option<(K, V)>$/;"	f
remove_lowest_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn remove_lowest_bit(self) -> BitMask {$/;"	P	implementation:BitMask
repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^fn repeat(byte: u8) -> GroupWord {$/;"	f
repeat_call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod repeatn;$/;"	n
replace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn replace(&mut self, value: T) -> Option<T> {$/;"	f
replace_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_entry(self, value: V) -> (K, V) {$/;"	P	implementation:OccupiedEntry
replace_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_key(self) -> K {$/;"	P	implementation:OccupiedEntry
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    report: Box<Report>,$/;"	m	struct:Criterion
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod report;$/;"	n
reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    reports: Vec<Box<Report>>,$/;"	m	struct:Reports
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn reserve(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve_rehash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn reserve_rehash(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset_peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
resize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn resize(&mut self, capacity: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn retain_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right(self) -> Option<R> {$/;"	P	implementation:Either
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right_and_then<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
rot90l	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn rot90l(self) -> Self {$/;"	P	implementation:Pt
routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod routine;$/;"	n
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<()>>,$/;"	m	struct:Benchmark
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<T>>,$/;"	m	struct:ParameterizedBenchmark
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.1.0/src/lib.rs	/^    fn run(&self) -> Box<Display>;$/;"	P	interface:Runner
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	P	implementation:Benchmark
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	f
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion);$/;"	P	interface:BenchmarkDefinition
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod runner;$/;"	n
runner_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/runner.rs	/^pub fn runner_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
s	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn s() -> Self {$/;"	P	implementation:Pt
sample	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn sample($/;"	P	interface:Routine
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub sample_size: usize,$/;"	m	struct:BenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    sample_size: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn sample_size(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
sample_time_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    sample_time_nanos: f64,$/;"	m	struct:CsvRow
sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub sample_times: &'a Sample<f64>,$/;"	m	struct:MeasurementData
save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save<D, P>(data: &D, path: &P) -> Result<()>$/;"	f
save_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn save_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
save_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save_string<P>(data: &str, path: &P) -> Result<()>$/;"	f
scale_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn scale_time(ns: f64) -> (f64, &'static str) {$/;"	f
se	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn se() -> Self {$/;"	P	implementation:Pt
send	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn send<T>(&mut self, line: T) -> &mut Program$/;"	P	implementation:Program
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod set;$/;"	n
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn set<'new>(v: HashSet<&'static str>) -> HashSet<&'new str> {$/;"	f	function:assert_covariance
set_ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn set_ctrl(&self, index: usize, ctrl: u8) {$/;"	P	implementation:RawTable
set_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn short(n: f64) -> String {$/;"	f
short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn short_max_len() {$/;"	f	module:test
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn shrink_to(&mut self, min_size: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
sift_down	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
signed_short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn signed_short(n: f64) -> String {$/;"	f
signed_short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn signed_short_max_len() {$/;"	f	module:test
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub significance_level: f64,$/;"	m	struct:BenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    significance_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    significance_level: String,$/;"	m	struct:Comparison
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn significance_level(mut self, sl: f64) -> Criterion {$/;"	P	implementation:Criterion
significance_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub significance_threshold: f64,$/;"	m	struct:ComparisonData
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod size_hint {$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Keys
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ValuesMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawDrain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    slope: ConfidenceInterval,$/;"	m	struct:Context
solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub solver: Option<Solver>,$/;"	m	struct:Runner
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn sorted<I>(iterable: I) -> Vec<I::Item>$/;"	f
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sources	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod sources;$/;"	n
spawn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn spawn(cmd: &mut Command) -> Program {$/;"	P	implementation:Program
special_is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn special_is_empty(ctrl: u8) -> bool {$/;"	f
standard_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    standard_error: f64,$/;"	m	struct:Estimate
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, _: &()) -> Option<Program> {$/;"	P	implementation:Command
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, _: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program>;$/;"	P	interface:Routine
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^    fn stats(a: &Sample<f64>, b: &Sample<f64>) -> (f64, f64) {$/;"	f	function:estimates
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^    fn stats(sample: &Sample<f64>) -> (f64, f64, f64, f64) {$/;"	f	function:estimates
std_dev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    std_dev: ConfidenceInterval,$/;"	m	struct:Context
stderr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stderr: ChildStderr,$/;"	m	struct:Program
stdin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdin: ChildStdin,$/;"	m	struct:Program
stdout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdout: BufReader<ChildStdout>,$/;"	m	struct:Program
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step_buffering	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
structs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod structs {$/;"	n
sub	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn sub(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
sub_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    sub_benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexBenchmark
sub_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Html
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, _context: &ReportContext, _all_ids: &[BenchmarkId]) {}$/;"	P	interface:Report
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Reports
summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod summary;$/;"	n
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn summary_scale(mut self, new_scale: AxisScale) -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    summary_scale: AxisScale,$/;"	m	struct:PlotConfiguration
sw	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn sw() -> Self {$/;"	P	implementation:Pt
sweep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep($/;"	f
sweep_and_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep_and_estimate($/;"	f
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn symmetric_difference<'a, 'new>($/;"	f	function:assert_covariance
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn symmetric_difference<'a>($/;"	f
t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t_distribution	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_distribution: Distribution<f64>,$/;"	m	struct:ComparisonData
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn t_test($/;"	f
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn t_test($/;"	f
t_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_value: f64,$/;"	m	struct:ComparisonData
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:OccupiedEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:VacantEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: RawTable<(K, V)>,$/;"	m	struct:HashMap
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    table: NonNull<RawTable<T>>,$/;"	m	struct:RawDrain
tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn take<Q: ?Sized>(&mut self, value: &Q) -> Option<T>$/;"	f
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tee;$/;"	n
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn test(&mut self, parameter: &T) {$/;"	P	interface:Routine
test_benchmark_id_make_directory_name_unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_benchmark_id_make_directory_name_unique() {$/;"	f	module:test
test_make_filename_safe_replaces_characters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_replaces_characters() {$/;"	f	module:test
test_make_filename_safe_respects_character_boundaries	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_respects_character_boundaries() {$/;"	f	module:test
test_make_filename_safe_truncates_long_strings	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_truncates_long_strings() {$/;"	f	module:test
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    test_mode: bool,$/;"	m	struct:Criterion
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub test_mode: bool,$/;"	m	struct:ReportContext
tests	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^mod tests {$/;"	n
text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn text_overwrite(&self) {$/;"	P	implementation:CliReport
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput(mut self, throughput: Throughput) -> Benchmark {$/;"	P	implementation:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput<F>(mut self, throughput: F) -> ParameterizedBenchmark<T>$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Box<Fn(&T) -> Throughput>>,$/;"	m	struct:ParameterizedBenchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Throughput>,$/;"	m	struct:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn throughput(throughput: &Throughput, ns: f64) -> String {$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    throughput: Option<ConfidenceInterval>,$/;"	m	struct:Context
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:BenchmarkId
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:MeasurementData
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:Context
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:SummaryContext
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:Context
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:SummaryContext
time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn time(ns: f64) -> String {$/;"	f
time_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn time_interval(est: &Estimate) -> ConfidenceInterval {$/;"	f	method:Html::measurement_complete
title	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    title: String,$/;"	m	struct:Context
to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub to: PathBuf,$/;"	m	struct:CopyError
to_camelcase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/utils.rs	/^pub(crate) fn to_camelcase(dp: &DayPart) -> syn::Ident {$/;"	f
to_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn to_complete(&self, defaults: &BenchmarkConfig) -> BenchmarkConfig {$/;"	P	implementation:PartialBenchmarkConfig
to_components	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn to_components(id: &BenchmarkId) -> Vec<&str> {$/;"	f	method:Html::final_summary
to_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^    fn to_gnuplot(self) -> Scale {$/;"	P	implementation:AxisScale
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64 {$/;"	P	implementation:Duration
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64;$/;"	P	interface:DurationExt
to_snakecase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/utils.rs	/^pub(crate) fn to_snakecase(dp: &DayPart) -> syn::Ident {$/;"	f
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
trailing_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn trailing_zeros(self) -> usize {$/;"	P	implementation:BitMask
tree_fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
try_else_return	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! try_else_return {$/;"	M
try_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_left {$/;"	M
try_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_right {$/;"	M
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
types	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod types;$/;"	n
unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn union<'a, 'new>($/;"	f	function:assert_covariance
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn union<'a>(&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S> {$/;"	f
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod unique_impl;$/;"	n
unlikely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn unlikely(b: bool) -> bool {$/;"	f
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    upper: String,$/;"	m	struct:ConfidenceInterval
upper_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    upper_bound: f64,$/;"	m	struct:ConfidenceInterval
url	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    url: String,$/;"	m	struct:Plot
used	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
utils	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/lib.rs	/^mod utils;$/;"	n
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    value: Option<&'a str>,$/;"	m	struct:CsvRow
value_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub value_str: Option<String>,$/;"	m	struct:BenchmarkId
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    values: Vec<T>,$/;"	m	struct:ParameterizedBenchmark
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values(&self) -> Values<K, V> {$/;"	f
values_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_key<'a, 'new>(v: Values<'a, &'static str, u8>) -> Values<'a, &'new str, u8> {$/;"	f	function:assert_covariance
values_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut<K, V> {$/;"	f
values_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_val<'a, 'new>(v: Values<'a, u8, &'static str>) -> Values<'a, u8, &'new str> {$/;"	f	function:assert_covariance
verbose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub verbose: bool,$/;"	m	struct:CliReport
violin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn violin($/;"	f
violin_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    violin_plot: Option<String>,$/;"	m	struct:SummaryContext
visit_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
w	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn w() -> Self {$/;"	P	implementation:Pt
wait_on_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn wait_on_gnuplot(children: Vec<Child>) {$/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	P	implementation:Command
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up(&mut self, how_long_ns: Duration) -> (u64, u64) {$/;"	P	implementation:Program
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up(&mut self, m: &mut Option<Program>, how_long: Duration, parameter: &T)$/;"	P	interface:Routine
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub warm_up_time: Duration,$/;"	m	struct:BenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    warm_up_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn warm_up_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, _id: &BenchmarkId, _context: &ReportContext, _warmup_ns: f64) {}$/;"	P	interface:Report
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, _: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:CliReport
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, context: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:Reports
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn with_capacity(capacity: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity(capacity: usize) -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {$/;"	f
with_filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_filter<S: Into<String>>(mut self, filter: S) -> Criterion {$/;"	P	implementation:Criterion
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, f: F) -> ParameterizedBenchmark<T>$/;"	f
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, mut f: F) -> Benchmark$/;"	P	implementation:Benchmark
with_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub(crate) fn with_functions($/;"	f
with_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn with_generator(&mut self, generator: Generator) {$/;"	P	implementation:Runner
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_hasher(hasher: S) -> HashSet<T, S> {$/;"	f
with_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod with_position;$/;"	n
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S, F>(mut self, id: S, program: F) -> ParameterizedBenchmark<T>$/;"	f
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S>(mut self, id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
with_solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/types.rs	/^    pub fn with_solver(&mut self, solver: Solver) {$/;"	P	implementation:Runner
with_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
without_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn without_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write(&mut self, mut bytes: &[u8]) {$/;"	P	implementation:FxHasher
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn write(&self, val: T) {$/;"	P	implementation:Bucket
write_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_data(&mut self, id: &BenchmarkId, data: &MeasurementData) -> Result<()> {$/;"	P	implementation:CsvReportWriter
write_file	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_file($/;"	P	implementation:FileCsvReport
write_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^fn write_infos(map: &InnerMap, year: u32) -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
write_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u16(&mut self, i: u16) {$/;"	P	implementation:FxHasher
write_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u32(&mut self, i: u32) {$/;"	P	implementation:FxHasher
write_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u64(&mut self, i: u64) {$/;"	P	implementation:FxHasher
write_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u8(&mut self, i: u8) {$/;"	P	implementation:FxHasher
write_usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_usize(&mut self, i: usize) {$/;"	P	implementation:FxHasher
writer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    writer: Writer<W>,$/;"	m	struct:CsvReportWriter
year	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.1.6/src/out.rs	/^    year: u32,$/;"	m	struct:LibInfos
yellow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn yellow(&self, s: String) -> String {$/;"	P	implementation:CliReport
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
ziptuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod ziptuple;$/;"	n
