!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^crate trait Abs {$/;"	i
AccessError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct AccessError {$/;"	s
All	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^crate trait All: crate::marker::Sized {$/;"	i
Alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Alpha,$/;"	e	enum:ErrorKind
AlphaNumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  AlphaNumeric,$/;"	e	enum:ErrorKind
AlreadyConsumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    AlreadyConsumed,$/;"	e	enum:MapError
Alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Alt,$/;"	e	enum:ErrorKind
Any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^crate trait Any: crate::marker::Sized {$/;"	i
AocMeta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^impl AocMeta {$/;"	c
AocMeta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^struct AocMeta {$/;"	s
Append	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^trait Append<T> {$/;"	i
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl AsRef<[u8]> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl AsRef<str> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub struct ArcStr(Arc<str>);$/;"	s
AsBytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AsBytes {$/;"	i
AsChar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AsChar {$/;"	i
AtEof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AtEof {$/;"	i
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum AxisScale {$/;"	g
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^impl AxisScale {$/;"	c
B	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  struct B {$/;"	s	module:tests
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^impl<'l, T: Element> From<&'l Diagonal<T>> for Banded<T> {$/;"	c
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^impl<T: Element> From<Diagonal<T>> for Banded<T> {$/;"	c
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^impl<T: Element> ::format::Validate for Banded<T> {$/;"	c
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^impl<T: Element> Banded<T> {$/;"	c
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^impl<T: Element> Matrix for Banded<T> {$/;"	c
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^pub struct Banded<T: Element> {$/;"	s
Banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/operation.rs	/^impl<T: Element> Transpose for Banded<T> {$/;"	c
Baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Baseline {$/;"	g
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Bencher {$/;"	c
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Bencher {$/;"	s
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl BenchmarkDefinition for Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct Benchmark {$/;"	s
BenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct BenchmarkConfig {$/;"	s
BenchmarkDefinition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub trait BenchmarkDefinition: Sized {$/;"	i
BenchmarkId	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct BenchmarkId {$/;"	s
Big	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  Big,$/;"	e	enum:Endianness
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl IntoIterator for BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMask(pub BitMaskWord);$/;"	s
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl Iterator for BitMaskIter {$/;"	c
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMaskIter(BitMask);$/;"	s
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub type BitMaskWord = GroupWord;$/;"	t
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub type BitMaskWord = u16;$/;"	t
Both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct Bucket<T> {$/;"	s
Buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^        struct Builder {$/;"	s	method:AocMeta::build
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Bytes(u32),$/;"	e	enum:Throughput
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Bytes,$/;"	e	enum:ValueType
C	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  struct C {$/;"	s	module:tests
CHARS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^static CHARS: &'static [u8] = b"0123456789abcdef";$/;"	v
COMPARISON_COLORS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^static COMPARISON_COLORS: [Color; NUM_COLORS] = [$/;"	v
Cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^pub trait Cast<T>: crate::marker::Sized {$/;"	i
Char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Char,$/;"	e	enum:ErrorKind
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct CliReport {$/;"	s
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone, F: Clone> Clone for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Coalesce<I, F>$/;"	s
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> CoalesceCore<I>$/;"	c
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct CoalesceCore<I>$/;"	s
Code	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  Code(I, ErrorKind<E>),$/;"	e	enum:Context
Code	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  Code(I, ErrorKind<E>),$/;"	e	enum:Context
Column	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    Column,$/;"	e	enum:Variant
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
Command	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Routine<()> for Command {$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> Routine<T> for CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct CommandFactory<F, T>$/;"	s
Compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Compare,$/;"	e	enum:Baseline
Compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Compare<T> {$/;"	i
CompareResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub enum CompareResult {$/;"	g
Comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Comparison {$/;"	s
ComparisonData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct ComparisonData {$/;"	s
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^enum ComparisonResult {$/;"	g
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^enum ComparisonResult {$/;"	g
Complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Complete,$/;"	e	enum:ErrorKind
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b str> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b str> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindToken<&'a u8> for CompleteByteSlice<'b> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> From<&'b &'a [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr> ParseTo<R> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsBytes for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AtEof for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Deref for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<char> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<u8> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> From<&'a [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputIter for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputLength for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputTake for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Offset for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<Range<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFrom<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFull> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeTo<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> super::util::HexDisplay for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct CompleteByteSlice<'a>(pub &'a [u8]);$/;"	s
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindToken<&'a u8> for CompleteStr<'b> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> From<&'b &'a str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr> ParseTo<R> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsBytes for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsRef<str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AtEof for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Deref for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Display for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> ExtendInto for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<char> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<u8> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> From<&'a str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputIter for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputLength for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputTake for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Offset for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<Range<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFrom<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFull> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeTo<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct CompleteStr<'a>(pub &'a str);$/;"	s
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<'l, T: Element> From<&'l Conventional<T>> for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<'l, T: Element> From<&'l Diagonal<T>> for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<T: Element> From<Conventional<T>> for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<T: Element> From<Diagonal<T>> for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^impl<T: Element> ::format::Validate for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^impl<T: Element> Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^impl<T: Element> Matrix for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^pub struct Compressed<T: Element> {$/;"	s
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^impl<'l, T> MultiplyInto<[T], [T]> for Compressed<T>$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^impl<T: Element> Transpose for Compressed<T> {$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^impl<T> Multiply<Diagonal<T>, Compressed<T>> for Compressed<T>$/;"	c
Compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^impl<T> MultiplySelf<Diagonal<T>> for Compressed<T>$/;"	c
CondReduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  CondReduce,$/;"	e	enum:ErrorKind
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct ConfidenceInterval {$/;"	s
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct ConfidenceInterval {$/;"	s
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Context {$/;"	s
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^impl<I, E> Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^impl<I, F, E: From<F>> Convert<Context<I, F>> for Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^pub enum Context<I, E = u32> {$/;"	g
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^impl<I, E> Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^impl<I, F, E: From<F>> Convert<Context<I, F>> for Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^pub enum Context<I, E = u32> {$/;"	g
Continue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^impl<'l, T: Element> From<&'l Banded<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^impl<T: Element> From<Banded<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<'l, T: Element> From<&'l Compressed<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^impl<T: Element> From<Compressed<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^impl<'l, T> MultiplyInto<Compressed<T>, [T]> for Conventional<T>$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/convert.rs	/^impl<T: Element> Into<Vec<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^impl SingularValue<f64> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^impl SymmetricEigen<f64> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element, P: Position> Index<P> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element, P: Position> IndexMut<P> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element> Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element> Deref for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element> DerefMut for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^impl<T: Element> Matrix for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^pub struct Conventional<T: Element> {$/;"	s
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^impl Multiply<[f64], Conventional<f64>> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^impl MultiplyInto<Conventional<f64>, [f64]> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^impl MultiplyInto<Vec<f64>, [f64]> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^impl MultiplyInto<[f64], [f64]> for Conventional<f64> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^impl<T: Element> Transpose for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^impl<T> MultiplySelf<Diagonal<T>> for Conventional<T>$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^impl<'l, T: Element> From<&'l Diagonal<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^impl<T: Element> From<Diagonal<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^impl<'l, T: Element> From<&'l Packed<T>> for Conventional<T> {$/;"	c
Conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^impl<T: Element> From<Packed<T>> for Conventional<T> {$/;"	c
Convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub trait Convert<T> {$/;"	i
CopyError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct CopyError {$/;"	s
Cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^crate trait Cos {$/;"	i
CosPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^crate trait CosPi {$/;"	i
Count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Count,$/;"	e	enum:ErrorKind
CrLf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  CrLf,$/;"	e	enum:ErrorKind
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Criterion {$/;"	s
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl<W: Write> CsvReportWriter<W> {$/;"	c
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvReportWriter<W: Write> {$/;"	s
CsvRow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvRow<'a> {$/;"	s
Custom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Custom(E),$/;"	e	enum:ErrorKind
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  impl From<u32> for CustomError {$/;"	c	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  pub struct CustomError(&'static str);$/;"	s	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  impl From<u32> for CustomError {$/;"	c	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  struct CustomError;$/;"	s	module:tests
DEFAULT_FONT	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone> Clone for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> fmt::Debug for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Dedup<I>$/;"	s
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^impl<T: Element> Into<Vec<T>> for Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^impl<T: Element> ::format::Validate for Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^impl<T: Element> Deref for Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^impl<T: Element> DerefMut for Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^impl<T: Element> Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^impl<T: Element> Matrix for Diagonal<T> {$/;"	c
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^pub struct Diagonal<T: Element> {$/;"	s
Diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/operation.rs	/^impl<T: Element> Transpose for Diagonal<T> {$/;"	c
Diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Difference<'a, T, S> {$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Difference<'a, T: 'a, S: 'a> {$/;"	s
Digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Digit,$/;"	e	enum:ErrorKind
Disabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Disabled,$/;"	e	enum:plotting::Plotting
Distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Distributions = BTreeMap<Statistic, Distribution<f64>>;$/;"	t
Done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Drain<'a, K, V> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for Drain<'a, K, V>$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Drain<'a, K: 'a, V: 'a> {$/;"	s
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Drain<'a, K> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Drain<'a, K: 'a> {$/;"	s
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Duration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl DurationExt for Duration {$/;"	c
DurationExt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^trait DurationExt {$/;"	i
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, A> Extend<A> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsMut<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsRef<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> BufRead for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Deref for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DerefMut for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DoubleEndedIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Error for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> ExactSizeIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> From<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Into<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Iterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Read for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Write for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> fmt::Display for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(L, T), (R, T)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(T, L), (T, R)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T> Either<T, T> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^pub enum Either<L, R> {$/;"	g
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/element.rs	/^pub trait Element: Copy + PartialEq {$/;"	i
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    type Element = T;$/;"	t	implementation:Banded
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    type Element = T;$/;"	t	implementation:Compressed
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    type Element = T;$/;"	t	implementation:Conventional
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    type Element = T;$/;"	t	implementation:Diagonal
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    type Element = T;$/;"	t	implementation:Packed
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^    type Element: Element;$/;"	t	interface:Matrix
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Element;$/;"	t	interface:Simd
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Elements(u32),$/;"	e	enum:Throughput
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Elements,$/;"	e	enum:ValueType
Enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Enabled,$/;"	e	enum:plotting::Plotting
Endianness	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub enum Endianness {$/;"	g
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a + Debug, S: BuildHasher> Debug for Entry<'a, K, V, S> /;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V: Default, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub enum Entry<'a, K: 'a, V: 'a, S: 'a> {$/;"	g
Eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Eof,$/;"	e	enum:ErrorKind
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> Err<I, E> {$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> Error for Err<I, E>$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> fmt::Display for Err<I, E>$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, F, E: From<F>> Convert<Err<I, F>> for Err<I, E> {$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub enum Err<I, E = u32> {$/;"	g
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^impl error::Error for Error {$/;"	c
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub struct Error(String);$/;"	s
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Error(Context<I, E>),$/;"	e	enum:Err
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Error,$/;"	e	enum:CompareResult
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl<E> ErrorKind<E> {$/;"	c
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl<F, E: From<F>> Convert<ErrorKind<F>> for ErrorKind<E> {$/;"	c
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub enum ErrorKind<E = u32> {$/;"	g
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  impl From<u32> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  impl<'a> From<&'a str> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  pub struct ErrorStr(String);$/;"	s	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  impl From<u32> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  impl<'a> From<&'a str> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  pub struct ErrorStr(String);$/;"	s	module:tests
Escaped	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Escaped,$/;"	e	enum:ErrorKind
EscapedTransform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  EscapedTransform,$/;"	e	enum:ErrorKind
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Estimate {$/;"	c
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct Estimate {$/;"	s
Estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Estimates = BTreeMap<Statistic, Estimate>;$/;"	t
Exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^crate trait Exp {$/;"	i
ExprOpt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ExprOpt,$/;"	e	enum:ErrorKind
ExprRes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ExprRes,$/;"	e	enum:ErrorKind
ExtendInto	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait ExtendInto {$/;"	i
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = String;$/;"	t	implementation:char
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = String;$/;"	t	implementation:str
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = Vec<u8>;$/;"	t	implementation:u8
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender: Extend<Self::Item>;$/;"	t	interface:ExtendInto
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Extender = String;$/;"	t	implementation:CompleteStr
F	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
Failure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Failure(Context<I, E>),$/;"	e	enum:Err
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl AddAssign for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl From<u8> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl Shl<usize> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl Shr<usize> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  struct FakeUint(u32);$/;"	s	module:tests
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl Report for FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^pub struct FileCsvReport;$/;"	s
FindSubstring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait FindSubstring<T> {$/;"	i
FindToken	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait FindToken<T> {$/;"	i
First	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
Fix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Fix,$/;"	e	enum:ErrorKind
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Flatten<I, J>$/;"	c
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Flatten<I, J> {$/;"	s
FnvBuildHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^pub type FnvBuildHasher = BuildHasherDefault<FnvHasher>;$/;"	t
FnvHashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^pub type FnvHashMap<K, V> = HashMap<K, V, FnvBuildHasher>;$/;"	t
FnvHashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^pub type FnvHashSet<T> = HashSet<T, FnvBuildHasher>;$/;"	t
FnvHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^impl Default for FnvHasher {$/;"	c
FnvHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^impl FnvHasher {$/;"	c
FnvHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^impl Hasher for FnvHasher {$/;"	c
FnvHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^pub struct FnvHasher(u64);$/;"	s
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FromBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^pub trait FromBits<T>: crate::marker::Sized {$/;"	i
FromCast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^pub trait FromCast<T>: crate::marker::Sized {$/;"	i
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl<I> Fun<I>$/;"	c
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Fun<I: fmt::Debug> {$/;"	s
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Routine<T> for Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub struct Function<F, T>$/;"	s
FxHashBuilder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub type FxHashBuilder = BuildHasherDefault<FxHasher>;$/;"	t
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Default for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Hasher for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub struct FxHasher {$/;"	s
GenResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    GenResult,$/;"	e	enum:MetaCommand
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    Generator(syn::Ident),$/;"	e	enum:MetaCommand
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Generator {$/;"	c
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Generator {$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub struct Group(GroupWord);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub struct Group(x86::__m128i);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u32;$/;"	t
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u64;$/;"	t
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
HasCombination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, Q: ?Sized, V, S> Index<&'a Q> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> Extend<(&'a K, &'a V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a mut HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'de, K, V, S> Deserialize<'de> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, H> Serialize for HashMap<K, V, H>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Debug for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Default for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Eq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Extend<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> FromIterator<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> IntoIterator for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> PartialEq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Hash + Eq, V> HashMap<K, V, DefaultHashBuilder> {$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct HashMap<K, V, S = DefaultHashBuilder> {$/;"	s
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitAnd<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitOr<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitXor<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> Sub<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Extend<&'a T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> IntoIterator for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'de, T, S> Deserialize<'de> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, H> Serialize for HashSet<T, H>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Default for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Eq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Extend<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> FromIterator<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> IntoIterator for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> PartialEq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> fmt::Debug for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T: Hash + Eq> HashSet<T, DefaultHashBuilder> {$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct HashSet<T, S = DefaultHashBuilder> {$/;"	s
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
HexDigit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  HexDigit,$/;"	e	enum:ErrorKind
HexDisplay	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub trait HexDisplay {$/;"	i
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Report for Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^pub struct Html {$/;"	s
IResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub type IResult<I, O, E = u32> = Result<(I, O), Err<I, E>>;$/;"	t
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Incomplete(Needed),$/;"	e	enum:Err
Incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Incomplete,$/;"	e	enum:CompareResult
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndexBenchmark {$/;"	c
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexBenchmark {$/;"	s
IndexContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexContext {$/;"	s
Indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^    type Indices;$/;"	t	interface:Shuffle1Dyn
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndividualBenchmark {$/;"	c
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndividualBenchmark {$/;"	s
InnerMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub(crate) type InnerMap = HashMap<DayPart, Runner>;$/;"	t
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr, T: ParseTo<R>> ParseTo<R> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, T: FindToken<&'a u8>> FindToken<&'a u8> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'b, T: Compare<&'b str>> Compare<&'b str> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'b, T: FindSubstring<&'b str>> FindSubstring<&'b str> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: AsBytes> AsBytes for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: FindToken<char>> FindToken<char> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: FindToken<u8>> FindToken<u8> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputIter> InputIter for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputLength> InputLength for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputTake> InputTake for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Offset> Offset for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<Range<usize>>> Slice<Range<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeFrom<usize>>> Slice<RangeFrom<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeFull>> Slice<RangeFull> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeTo<usize>>> Slice<RangeTo<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T> AtEof for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct Input<T> {$/;"	s
InputIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputIter {$/;"	i
InputLength	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputLength {$/;"	i
InputTake	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputTake: Sized {$/;"	i
InputTakeAtPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputTakeAtPosition: Sized {$/;"	i
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Intersection<'a, T, S> {$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Intersection<'a, T: 'a, S: 'a> {$/;"	s
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^impl<I> Iterator for Intersperse<I>$/;"	c
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
IntoBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^pub trait IntoBits<T>: crate::marker::Sized {$/;"	i
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IntoIter<K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = Iter<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IterMut<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> ExactSizeIterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> FusedIterator for IntoIter<K, V> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> Iterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Debug, V: Debug> fmt::Debug for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IntoIter<K, V> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type IntoIter = BitMaskIter;$/;"	t	implementation:BitMask
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type IntoIter = RawIntoIter<T>;$/;"	t	implementation:RawTable
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = IntoIter<T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = Iter<'a, T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K: fmt::Debug> fmt::Debug for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> ExactSizeIterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> FusedIterator for IntoIter<K> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> Iterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct IntoIter<K> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
InvalidValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      InvalidValue(u8),$/;"	e	enum:tests::map_res_err::ParseError
IsA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsA,$/;"	e	enum:ErrorKind
IsAStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsAStr,$/;"	e	enum:ErrorKind
IsNot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsNot,$/;"	e	enum:ErrorKind
IsNotStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsNotStr,$/;"	e	enum:ErrorKind
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Item = L::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a K;$/;"	t	implementation:Keys
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a V;$/;"	t	implementation:Values
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a mut V;$/;"	t	implementation:ValuesMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t	implementation:IterMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMask
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMaskIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = Bucket<T>;$/;"	t	implementation:RawIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawDrain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawIntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawTable
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = usize;$/;"	t	implementation:ProbeSeq
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a K;$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = J::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = St;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    type Item = (usize, usize, &'l T);$/;"	t	implementation:Iterator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = <T as InputIter>::RawItem;$/;"	t	implementation:T
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:CompleteStr
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:char
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:str
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = u8;$/;"	t	implementation:CompleteByteSlice
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = u8;$/;"	t	implementation:u8
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:ExtendInto
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:InputIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:InputTakeAtPosition
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = <T as InputIter>::Item;$/;"	t	implementation:Input
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = char;$/;"	t	implementation:CompleteStr
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = u8;$/;"	t	implementation:CompleteByteSlice
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Iter<'a, K, V> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V: Debug> fmt::Debug for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Iter<'a, K: 'a, V: 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Clone for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Iter<'a, K> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Iter<'a, K: 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter = CharIndices<'a>;$/;"	t	implementation:str
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter = Enumerate<Self::IterElem>;$/;"	t	implementation:u8
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter: Iterator<Item = (usize, Self::Item)>;$/;"	t	interface:InputIter
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = <T as InputIter>::Iter;$/;"	t	implementation:Input
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = CharIndices<'a>;$/;"	t	implementation:CompleteStr
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = Enumerate<Self::IterElem>;$/;"	t	implementation:CompleteByteSlice
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem = Chars<'a>;$/;"	t	implementation:str
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem = Map<Iter<'a, Self::Item>, fn(&u8) -> u8>;$/;"	t	implementation:u8
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem: Iterator<Item = Self::Item>;$/;"	t	interface:InputIter
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = <T as InputIter>::IterElem;$/;"	t	implementation:Input
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = Chars<'a>;$/;"	t	implementation:CompleteStr
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = Map<Iter<'a, Self::Item>, fn(&u8) -> u8>; \/\/Iter<'a, Self::RawItem>;$/;"	t	implementation:CompleteByteSlice
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for IterMut<'a, K, V> {}$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for IterMut<'a, K, V>$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IterMut<'a, K: 'a, V: 'a> {$/;"	s
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
Iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^impl<'l, T: Element> Iterator<'l, T> {$/;"	c
Iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^impl<'l, T: Element> iter::Iterator for Iterator<'l, T> {$/;"	c
Iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^pub struct Iterator<'l, T: 'l + Element> {$/;"	s
Iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^pub struct Iterator<'l, T: 'l + Element> {$/;"	s
IteratorMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^pub struct IteratorMut<'l, T: 'l + Element> {$/;"	s
Itertools	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
KDE_POINTS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static KDE_POINTS: usize = 500;$/;"	v
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Iterator for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> fmt::Debug for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMerge<I>$/;"	s
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
KeyFunction	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Keys<'a, K, V> {}$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V> fmt::Debug for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Keys<'a, K: 'a, V: 'a> {$/;"	s
LandClaim	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^pub struct LandClaim {$/;"	s
LanesType	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type LanesType;$/;"	t	interface:Simd
Last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Index<usize> for LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^struct LazyBuffer<I: Iterator> {$/;"	s
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Left(L),$/;"	e	enum:Either
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
LengthValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  LengthValue,$/;"	e	enum:ErrorKind
LengthValueFn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  LengthValueFn,$/;"	e	enum:ErrorKind
LexicographicallyOrdered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^pub struct LexicographicallyOrdered<T>(T);$/;"	s
LibInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^struct LibInfos {$/;"	s
Linear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Linear,$/;"	e	enum:AxisScale
List	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  List(Vec<(I, ErrorKind<E>)>),$/;"	e	enum:Context
Little	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  Little,$/;"	e	enum:Endianness
Ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^crate trait Ln {$/;"	i
Logarithmic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Logarithmic,$/;"	e	enum:AxisScale
Longer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
Lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    Lower,$/;"	e	enum:Variant
MainInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^enum MainInfos {$/;"	g
Many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Many0,$/;"	e	enum:ErrorKind
Many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Many1,$/;"	e	enum:ErrorKind
ManyMN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ManyMN,$/;"	e	enum:ErrorKind
ManyTill	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ManyTill,$/;"	e	enum:ErrorKind
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^impl Map {$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub struct Map {$/;"	s
MapError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub enum MapError {$/;"	g
MapOpt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MapOpt,$/;"	e	enum:ErrorKind
MapRes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MapRes,$/;"	e	enum:ErrorKind
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for MapResults<I, F>$/;"	c
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MapResults<I, F> {$/;"	s
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        impl<'de, K, V, S> Visitor<'de> for MapVisitor<K, V, S>$/;"	c	function:deserialize
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        struct MapVisitor<K, V, S> {$/;"	s	function:deserialize
Mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Mask {$/;"	i
Matrix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub trait Matrix: Into<Conventional<<Self as Matrix>::Element>> + Size {$/;"	i
Mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Mean,$/;"	e	enum:Statistic
MeasurementData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct MeasurementData<'a> {$/;"	s
Median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Median,$/;"	e	enum:Statistic
MedianAbsDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    MedianAbsDev,$/;"	e	enum:Statistic
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> fmt::Debug for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Merge<I, J>$/;"	s
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^struct MergeCore<I, J>$/;"	s
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MetaCommand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^enum MetaCommand {$/;"	g
MetaCommand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^impl MetaCommand {$/;"	c
MidIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MinMax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
MulAdd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^crate trait MulAdd {$/;"	i
MulAddE	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^crate trait MulAddE {$/;"	i
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
MultiSpace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MultiSpace,$/;"	e	enum:ErrorKind
Multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^pub trait Multiply<Right: ?Sized, Output> {$/;"	i
MultiplyInto	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^pub trait MultiplyInto<Right: ?Sized, Output: ?Sized> {$/;"	i
MultiplySelf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^pub trait MultiplySelf<Right: ?Sized> {$/;"	i
NT	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type NT;$/;"	t	interface:SimdArray
NamedRoutine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct NamedRoutine<T> {$/;"	s
Needed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl Needed {$/;"	c
Needed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub enum Needed {$/;"	g
NilError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  impl From<u32> for NilError {$/;"	c	module:tests
NilError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  pub struct NilError;$/;"	s	module:tests
NoElements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NonEmpty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  NonEmpty,$/;"	e	enum:ErrorKind
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NoneOf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  NoneOf,$/;"	e	enum:ErrorKind
Not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Not,$/;"	e	enum:ErrorKind
NotAvailable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        NotAvailable,$/;"	e	enum:plotting::Plotting
Occupied	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Occupied(OccupiedEntry<'a, K, V, S>),$/;"	e	enum:Entry
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug, V: 'a + Debug, S> Debug for OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct OccupiedEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Send for OccupiedEntry<'a, K, V, S>$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Sync for OccupiedEntry<'a, K, V, S>$/;"	c
OctDigit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  OctDigit,$/;"	e	enum:ErrorKind
Offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Offset {$/;"	i
Ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Ok,$/;"	e	enum:CompareResult
One	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      One,$/;"	e	enum:tests::map_res_err::ValidValue
OneElement	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
OneOf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  OneOf,$/;"	e	enum:ErrorKind
Only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Output = V;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Output = HashSet<T, S>;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Output = I::Item;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    type Output = T;$/;"	t	implementation:Conventional
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    type Output = FakeUint;$/;"	t	implementation:tests::FakeUint
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^    type Output;$/;"	t	interface:SinCosPi
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx2<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx4<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx8<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x16;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x2;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x4;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x8;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x2;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x4;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x8;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x1;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x2;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x4;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x16;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x2;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x32;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x4;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x8;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x16;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x2;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x4;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x8;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x2;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x4;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x8;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x16;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x2;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x32;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x4;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x64;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x8;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex2;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex4;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex8;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x1;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x2;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x4;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x16;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x2;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x32;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x4;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x8;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x16;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x2;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x4;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x8;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x2;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x4;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x8;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x16;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x2;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x32;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x4;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x64;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x8;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx2<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx4<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx8<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex2;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex4;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex8;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x1;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x2;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x4;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x16;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x2;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x32;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x4;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x8;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x16;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x2;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x4;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x8;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x2;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x4;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x8;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x16;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x2;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x32;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x4;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x64;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x8;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex2;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex4;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex8;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Output;$/;"	t	interface:Shuffle
Output	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    type Output = Pt<T>;$/;"	t	implementation:Pt
Packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^impl<T: Element> ::format::Validate for Packed<T> {$/;"	c
Packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^impl<T: Element> Matrix for Packed<T> {$/;"	c
Packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^impl<T: Element> Packed<T> {$/;"	c
Packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^pub struct Packed<T: Element> {$/;"	s
Packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/operation.rs	/^impl<T: Element> Transpose for Packed<T> {$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> BenchmarkDefinition for ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct ParameterizedBenchmark<T: Debug> {$/;"	s
ParseError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    enum ParseError {$/;"	g	function:tests::map_res_err
ParseError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    impl From<u32> for ParseError {$/;"	c	function:tests::map_res_err
ParseTo	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait ParseTo<R> {$/;"	i
ParseTo	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ParseTo,$/;"	e	enum:ErrorKind
Parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  impl<'a> Parser<'a> {$/;"	c	module:tests
Parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  struct Parser<'a> {$/;"	s	module:tests
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Default for PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^struct PartialBenchmarkConfig {$/;"	s
Peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
Permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Permutation,$/;"	e	enum:ErrorKind
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Plot {$/;"	c
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Plot {$/;"	s
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct PlotConfiguration {$/;"	s
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    impl Plotting {$/;"	c	module:plotting
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub enum Plotting {$/;"	g	module:plotting
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^pub trait Position {$/;"	i
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
Powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^crate trait Powf {$/;"	i
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl Iterator for ProbeSeq {$/;"	c
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^struct ProbeSeq {$/;"	s
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Program {$/;"	c
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct Program {$/;"	s
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<'a, T: Signed + Copy + Ord> Add<Pt<T>> for &'a Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<T: Signed + Copy + Ord> Add for Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^impl<T: Signed + Copy + Ord> Pt<T> {$/;"	c
Pt	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^pub struct Pt<T: Signed + Copy + Ord = isize>(pub T, pub T);$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Drop for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> ExactSizeIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> FusedIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Iterator for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawDrain<'a, T: 'a> {$/;"	s
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Send for RawDrain<'a, T> where T: Send {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Sync for RawDrain<'a, T> where T: Sync {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIntoIter<T> {$/;"	s
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIntoIter<T> where T: Send {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIntoIter<T> where T: Sync {}$/;"	c
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem = char;$/;"	t	implementation:str
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem = u8;$/;"	t	implementation:u8
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem;$/;"	t	interface:InputIter
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = <T as InputIter>::RawItem;$/;"	t	implementation:Input
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = char;$/;"	t	implementation:CompleteStr
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = u8;$/;"	t	implementation:CompleteByteSlice
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIter<T> {$/;"	s
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIter<T> where T: Send {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIter<T> where T: Sync {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T: Clone> Clone for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> IntoIterator for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawTable<T> {$/;"	s
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawTable<T> where T: Send {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawTable<T> where T: Sync {}$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
Ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    Ref { lib: pm2::Ident },$/;"	e	enum:MainInfos
RegexpCapture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpCapture,$/;"	e	enum:ErrorKind
RegexpCaptures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpCaptures,$/;"	e	enum:ErrorKind
RegexpFind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpFind,$/;"	e	enum:ErrorKind
RegexpMatch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpMatch,$/;"	e	enum:ErrorKind
RegexpMatches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpMatches,$/;"	e	enum:ErrorKind
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
Report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) trait Report {$/;"	i
ReportContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct ReportContext {$/;"	s
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct Reports {$/;"	s
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub type Result<T> = std::result::Result<T, Error>;$/;"	t
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Right(R),$/;"	e	enum:Either
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
Routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub trait Routine<T> {$/;"	i
Row	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    Row,$/;"	e	enum:Variant
RunResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    RunResult,$/;"	e	enum:MetaCommand
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub trait Runner {$/;"	i
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    Runner(syn::Ident),$/;"	e	enum:MetaCommand
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Runner {$/;"	c
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Runner {$/;"	s
SIZE	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static SIZE: Size = Size(1280, 720);$/;"	v
Save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Save,$/;"	e	enum:Baseline
ScaleSelf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^pub trait ScaleSelf<T> {$/;"	i
SeparatedList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  SeparatedList,$/;"	e	enum:ErrorKind
SeparatedNonEmptyList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  SeparatedNonEmptyList,$/;"	e	enum:ErrorKind
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'a, 'de, T, S> Visitor<'de> for SeqInPlaceVisitor<'a, T, S>$/;"	c	function:deserialize_in_place
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqInPlaceVisitor<'a, T: 'a, S: 'a>(&'a mut HashSet<T, S>);$/;"	s	function:deserialize_in_place
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'de, T, S> Visitor<'de> for SeqVisitor<T, S>$/;"	c	function:deserialize
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqVisitor<T, S> {$/;"	s	function:deserialize
Shorter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
Shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Shuffle<Lanes> {$/;"	i
Shuffle1Dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^pub trait Shuffle1Dyn {$/;"	i
Simd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^pub struct Simd<A: sealed::SimdArray>($/;"	s
Simd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Simd {$/;"	i
SimdArray	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait SimdArray {$/;"	i
Sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^crate trait Sin {$/;"	i
SinCosPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^crate trait SinCosPi: Sized {$/;"	i
SinPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^crate trait SinPi {$/;"	i
SingularValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/decomposition.rs	/^pub trait SingularValue<T: Element> {$/;"	i
Size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^pub trait Size {$/;"	i
Size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Size(usize),$/;"	e	enum:Needed
SizeHint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
Slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Slice<R> {$/;"	i
Slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Slope,$/;"	e	enum:Statistic
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Solver {$/;"	c
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Solver {$/;"	s
Space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Space,$/;"	e	enum:ErrorKind
Sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^crate trait Sqrt {$/;"	i
Sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrte.rs	/^crate trait Sqrte {$/;"	i
Standalone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    Standalone { year: u32 },$/;"	e	enum:MainInfos
StartOfIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
State	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^impl fmt::Display for Statistic {$/;"	c
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub enum Statistic {$/;"	g
StdDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    StdDev,$/;"	e	enum:Statistic
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
SummaryContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct SummaryContext {$/;"	s
SwapBytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^crate trait SwapBytes {$/;"	i
Switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Switch,$/;"	e	enum:ErrorKind
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for SymmetricDifference<'a, T, S> {$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct SymmetricDifference<'a, T: 'a, S: 'a> {$/;"	s
SymmetricEigen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/decomposition.rs	/^pub trait SymmetricEigen<T: Element> {$/;"	i
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, T> AtEof for &'a [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, T> InputLength for &'a [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<I: AtEof, T> AtEof for (I, T) {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<T: InputLength + InputIter + InputTake + AtEof + Clone + UnspecializedInput> InputTakeAtPos/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^impl<T, U> Cast<U> for T$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^impl<T> FromCast<T> for T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^impl<T, U> IntoBits<U> for T$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^impl<T> FromBits<T> for T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 2]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 2]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 4]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 4]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 8]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 8]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type T;$/;"	t	interface:SimdArray
Tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Tag,$/;"	e	enum:ErrorKind
TagBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagBits,$/;"	e	enum:ErrorKind
TagClosure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagClosure,$/;"	e	enum:ErrorKind
TagStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagStr,$/;"	e	enum:ErrorKind
TakeTill1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeTill1,$/;"	e	enum:ErrorKind
TakeUntil	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntil,$/;"	e	enum:ErrorKind
TakeUntilAndConsume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsume,$/;"	e	enum:ErrorKind
TakeUntilAndConsume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsume1,$/;"	e	enum:ErrorKind
TakeUntilAndConsumeStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsumeStr,$/;"	e	enum:ErrorKind
TakeUntilEither	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilEither,$/;"	e	enum:ErrorKind
TakeUntilEitherAndConsume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilEitherAndConsume,$/;"	e	enum:ErrorKind
TakeUntilStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilStr,$/;"	e	enum:ErrorKind
TakeWhile1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhile1,$/;"	e	enum:ErrorKind
TakeWhile1Str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhile1Str,$/;"	e	enum:ErrorKind
TakeWhileMN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhileMN,$/;"	e	enum:ErrorKind
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Target = L::Target;$/;"	t
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    type Target = [T];$/;"	t	implementation:Conventional
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    type Target = [T];$/;"	t	implementation:Diagonal
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Target = &'a [u8];$/;"	t	implementation:CompleteByteSlice
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Target = &'a str;$/;"	t	implementation:CompleteStr
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Throughput {$/;"	g
Transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^pub trait Transpose {$/;"	i
Tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Tuple: Copy + Clone;$/;"	t	interface:SimdArray
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Two	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      Two,$/;"	e	enum:tests::map_res_err::ValidValue
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Union<'a, T, S> {$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Union<'a, T: 'a, S: 'a> {$/;"	s
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Unknown	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Unknown,$/;"	e	enum:Needed
UnspecializedInput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait UnspecializedInput {}$/;"	i
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
Upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    Upper,$/;"	e	enum:Variant
Vacant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Vacant(VacantEntry<'a, K, V, S>),$/;"	e	enum:Entry
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a, S: 'a + BuildHasher> Debug for VacantEntry<'a, K, V, /;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Eq + Hash, V: 'a, S: BuildHasher> VacantEntry<'a, K, V, S> {$/;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct VacantEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
ValidValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    enum ValidValue {$/;"	g	function:tests::map_res_err
Validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^trait Validate {$/;"	i
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Value,$/;"	e	enum:ValueType
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            type Value = HashMap<K, V, S>;$/;"	t	function:deserialize
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = HashSet<T, S>;$/;"	t	function:deserialize
ValueType	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub enum ValueType {$/;"	g
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V: Debug> fmt::Debug for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Values<'a, K, V> {}$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Values<'a, K: 'a, V: 'a> {$/;"	s
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for ValuesMut<'a, K, V> {}$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for ValuesMut<'a, K, V>$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct ValuesMut<'a, K: 'a, V: 'a> {$/;"	s
Variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^impl Variant {$/;"	c
Variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^pub enum Variant {$/;"	g
Variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^impl Variant {$/;"	c
Variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^pub enum Variant {$/;"	g
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^impl<T> Append<T> for Vec<T> {$/;"	c
Verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Verify,$/;"	e	enum:ErrorKind
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            _align: [GroupWord; 0],$/;"	m	struct:Group::static_empty::Dummy
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            _align: [x86::__m128i; 0],$/;"	m	struct:Group::static_empty::Dummy
_child	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _child: Child,$/;"	m	struct:Program
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a HashMap<K, V>>,$/;"	m	struct:Iter
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a mut HashMap<K, V>>,$/;"	m	struct:IterMut
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    _marker: PhantomData<&'a RawTable<T>>,$/;"	m	struct:RawDrain
_mi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mt: PhantomData<T>$/;"	m	struct:TupleCombinations
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:CommandFactory
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:Function
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn a() -> Either<u32, u32> {$/;"	f	function:macros
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeCore
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    a: u8,$/;"	m	struct:tests::B
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    a: u8,$/;"	m	struct:tests::C
a_cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
aarch64_128_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! aarch64_128_neon_impl {$/;"	M
aarch64_64_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! aarch64_64_neon_impl {$/;"	M
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod abs;$/;"	n
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod abs;$/;"	n
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn abs(self) -> Self;$/;"	P	interface:Abs
abs_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn abs_distributions($/;"	f
absolute_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub absolute_estimates: Estimates,$/;"	m	struct:MeasurementData
acc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! acc ($/;"	M
acceleration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/mod.rs	/^mod acceleration;$/;"	n
acceleration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^mod acceleration;$/;"	n
adaptors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod adaptors;$/;"	n
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn add(&mut self, names: &[&str], idb: IndexBenchmark) {$/;"	P	implementation:IndexBenchmark
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    fn add(self, other: Pt<T>) -> Self::Output {$/;"	P	implementation:Pt
add	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    fn add(self, other: Self) -> Self::Output {$/;"	P	implementation:Pt
add_assign	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn add_assign(&mut self, other: FakeUint) {$/;"	P	implementation:tests::FakeUint
add_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn add_err() {$/;"	f	module:tests
add_error_pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn add_error_pattern<'a, I: Clone + Hash + Eq, O, E: Clone + Hash + Eq>($/;"	f
add_return_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! add_return_error ($/;"	M
add_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_to_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn add_to_hash(&mut self, i: usize) {$/;"	P	implementation:FxHasher
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Comparison
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Context
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn all<F>(&mut self, f: F) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^    unsafe fn all(self) -> bool;$/;"	P	interface:All
all_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
alloc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    alloc: Option<(NonNull<u8>, Layout)>,$/;"	m	struct:RawIntoIter
alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha<T>(input: T) -> IResult<T, T, u32>$/;"	f
alpha0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha0<T>(input: T) -> IResult<T, T, u32>$/;"	f
alpha1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha1<T>(input: T) -> IResult<T, T, u32>$/;"	f
alphanumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric<T>(input: T) -> IResult<T, T>$/;"	f
alphanumeric0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric0<T>(input: T) -> IResult<T, T>$/;"	f
alphanumeric1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric1<T>(input: T) -> IResult<T, T>$/;"	f
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt() {$/;"	f	module:tests
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! alt ($/;"	M
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn alt() {$/;"	f	module:tests
alt1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt1(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt1(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt2(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt2(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt3(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt3(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt_complete() {$/;"	f	module:tests
alt_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! alt_complete ($/;"	M
alt_complete_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! alt_complete_sep ($/;"	M
alt_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt_incomplete() {$/;"	f	module:tests
alt_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! alt_sep ($/;"	M
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod analysis;$/;"	n
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
and_modify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn and_modify<F>(self, f: F) -> Self$/;"	P	implementation:Entry
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^    unsafe fn any(self) -> bool;$/;"	P	interface:Any
any_bit_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn any_bit_set(self) -> bool {$/;"	P	implementation:BitMask
anychar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^pub fn anychar<T>(input: T) -> IResult<T, char>$/;"	f
anychar_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn anychar_str() {$/;"	f	module:tests
aoc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_generator(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_lib	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_lib(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_main(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_runner_derive(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^pub fn aoc_runner_derive_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
api	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod api;$/;"	n
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(mut self, item: T) -> Vec<T> {$/;"	P	implementation:Vec
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(self, item: T) -> Self;$/;"	P	interface:Append
apply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! apply ($/;"	M
apply_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! apply_m ($/;"	M
apply_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn apply_test() {$/;"	f	module:tests
arch_specific	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod arch_specific;$/;"	n
arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^macro_rules! arithmetic($/;"	M
arm_128_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_128_v7_neon_impl {$/;"	M
arm_m16x4_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m16x4_v7_neon_impl {$/;"	M
arm_m32x2_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m32x2_v7_neon_impl {$/;"	M
arm_m8x8_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m8x8_v7_neon_impl {$/;"	M
array_impls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! array_impls {$/;"	M
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:str
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:u8
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8];$/;"	P	interface:AsBytes
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CompleteByteSlice
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CompleteStr
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:Input
as_bytes_array_impls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! as_bytes_array_impls {$/;"	M
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char {$/;"	P	implementation:char
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char {$/;"	P	implementation:u8
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char;$/;"	P	interface:AsChar
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_mut(&mut self) -> &mut Target {$/;"	f
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_mut(&mut self) -> Either<&mut L, &mut R> {$/;"	P	implementation:Either
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_mut<'a>(&self) -> &'a mut T {$/;"	P	implementation:Bucket
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_ref(&self) -> &Target {$/;"	f
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_ref(&self) -> Either<&L, &R> {$/;"	P	implementation:Either
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_ref<'a>(&self) -> &'a T {$/;"	P	implementation:Bucket
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_ref(&self) -> &str {$/;"	P	implementation:CompleteStr
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn assert_covariance() {$/;"	f
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^fn assert_covariance() {$/;"	f
assert_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn assert_iterated(&mut self) {$/;"	P	implementation:Bencher
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:T
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:str
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool;$/;"	P	interface:AtEof
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:CompleteByteSlice
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:CompleteStr
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:Input
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  pub at_eof: bool,$/;"	m	struct:Input
avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub avg_times: LabeledSample<'a, f64>,$/;"	m	struct:MeasurementData
avx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod avx;$/;"	n
avx2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod avx2;$/;"	n
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn b() -> Either<String, &'static str> {$/;"	f	function:macros
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeCore
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    b: Option<u8>,$/;"	m	struct:tests::C
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    b: u8,$/;"	m	struct:tests::B
b_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
backlog	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
banded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^pub mod banded;$/;"	n
base_avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_avg_times: Vec<f64>,$/;"	m	struct:ComparisonData
base_dir_exists	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn base_dir_exists(id: &BenchmarkId, baseline: &str, output_directory: &str) -> bool {$/;"	f
base_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_estimates: Estimates,$/;"	m	struct:ComparisonData
base_iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_iter_counts: Vec<f64>,$/;"	m	struct:ComparisonData
base_sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_sample_times: Vec<f64>,$/;"	m	struct:ComparisonData
baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline: Baseline,$/;"	m	struct:Criterion
baseline_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline_directory: String,$/;"	m	struct:Criterion
basic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn basic() {$/;"	f
basic_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn basic_tests() {$/;"	f	module:test
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bcd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    bcd: &'a str,$/;"	m	struct:tests::Parser
be_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_f32(input: &[u8]) -> IResult<&[u8], f32> {$/;"	f
be_f32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn be_f32_tests() {$/;"	f	module:tests
be_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_f64(input: &[u8]) -> IResult<&[u8], f64> {$/;"	f
be_f64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn be_f64_tests() {$/;"	f	module:tests
be_i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i128(i: &[u8]) -> IResult<&[u8], i128> {$/;"	f
be_i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i16(i: &[u8]) -> IResult<&[u8], i16> {$/;"	f
be_i24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i24(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
be_i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i32(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
be_i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i64(i: &[u8]) -> IResult<&[u8], i64> {$/;"	f
be_i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i8(i: &[u8]) -> IResult<&[u8], i8> {$/;"	f
be_u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u128(i: &[u8]) -> IResult<&[u8], u128, u32> {$/;"	f
be_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
be_u24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u24(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
be_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
be_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u64(i: &[u8]) -> IResult<&[u8], u64, u32> {$/;"	f
be_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
begin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn begin(input: &[u8]) -> IResult<(), &[u8]> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench<B: BenchmarkDefinition>($/;"	P	implementation:Criterion
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, iters: &[u64]) -> Vec<f64> {$/;"	P	implementation:Program
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &()) -> Vec<f64> {$/;"	P	implementation:Command
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, _: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, m: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64>;$/;"	P	interface:Routine
bench_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function<F>(&mut self, id: &str, f: F) -> &mut Criterion$/;"	P	implementation:Criterion
bench_function_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function_over_inputs<I, F>(&mut self, id: &str, f: F, inputs: I) -> &mut Criter/;"	P	implementation:Criterion
bench_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_functions<I>(&mut self, id: &str, funs: Vec<Fun<I>>, input: I) -> &mut Criterio/;"	P	implementation:Criterion
bench_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program(&mut self, id: &str, program: Command) -> &mut Criterion {$/;"	P	implementation:Criterion
bench_program_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program_over_inputs<I, F>($/;"	P	implementation:Criterion
benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod benchmark;$/;"	n
benchmark_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^macro_rules! benchmark_config {$/;"	M
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexContext
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndividualBenchmark>,$/;"	m	struct:SummaryContext
binary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod binary;$/;"	n
bitand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitand(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bitmask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod bitmask;$/;"	n
bitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bits ($/;"	M
bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod bits;$/;"	n
bits_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bits_impl ($/;"	M
bits_to_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn bits_to_bytes() {$/;"	f	module:tests
bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod bitwise;$/;"	n
bitxor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitxor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
black_box	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn black_box<T>(dummy: T) -> T {$/;"	f
body	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn body(infos: &DayParts, lib: Option<pm2::Ident>) -> pm2::TokenStream {$/;"	f
bold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn bold(&self, s: String) -> String {$/;"	P	implementation:CliReport
borrow_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn borrow_mut(&self) -> Result<RefMut<InnerMap>, MapError> {$/;"	P	implementation:Map
both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod both;$/;"	n
bottom_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
branch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod branch;$/;"	n
bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn bucket(&self, index: usize) -> Bucket<T> {$/;"	P	implementation:RawTable
bucket_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn bucket_index(&self, bucket: &Bucket<T>) -> usize {$/;"	P	implementation:RawTable
bucket_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    bucket_mask: usize,$/;"	m	struct:RawTable
bucket_mask_to_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn bucket_mask_to_capacity(bucket_mask: usize) -> usize {$/;"	f
buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn buckets(&self) -> usize {$/;"	P	implementation:RawTable
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    buffer: String,$/;"	m	struct:Program
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^macro_rules! buffer($/;"	M
buffer_with_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn buffer_with_size() {$/;"	f	module:tests
build	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    fn build(cmds: impl Iterator<Item = MetaCommand>) -> Result<AocMeta, Box<error::Error>> {$/;"	P	implementation:AocMeta
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bytes ($/;"	M
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod bytes;$/;"	n
bytes_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bytes_impl ($/;"	M
bytes_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn bytes_per_second(bytes_per_second: f64) -> String {$/;"	f
c32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub type c32 = num_complex::Complex<f32>;$/;"	t
c64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub type c64 = num_complex::Complex<f64>;$/;"	t
calculate_layout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn calculate_layout<T>(buckets: usize) -> Option<(Layout, usize)> {$/;"	f
call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! call ($/;"	M
call_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! call_m ($/;"	M
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
can_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn can_plot(&self) -> bool {$/;"	P	implementation:Criterion
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:RawTable
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity_to_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn capacity_to_buckets(cap: usize) -> usize {$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
case_insensitive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn case_insensitive() {$/;"	f	module:test
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^crate mod cast;$/;"	n
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn cast(self) -> T;$/;"	P	interface:Cast
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn cast(self) -> U {$/;"	f
cause	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn cause(&self) -> Option<&Error> {$/;"	f
cause	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn cause(&self) -> Option<&Error> {$/;"	f
cautious	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^    pub(crate) fn cautious(hint: Option<usize>) -> usize {$/;"	f	module:size_hint
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
chain_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn chain_bits() {$/;"	f	module:tests
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn change(pct: f64, signed: bool) -> String {$/;"	f
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    change: ConfidenceInterval,$/;"	m	struct:Comparison
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn char() {$/;"	f	module:tests
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! char ($/;"	M
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsChar for char {$/;"	c
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for char {$/;"	c
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsChar for &'a char {$/;"	c
char_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn char_str() {$/;"	f	module:tests
character	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod character;$/;"	n
character	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn character() {$/;"	f	module:tests
character_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn character_s() {$/;"	f	module:tests
check_unix_lineending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn check_unix_lineending() {$/;"	f	module:tests
check_windows_lineending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn check_windows_lineending() {$/;"	f	module:tests
chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:RawTable
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clear_no_drop(&mut self) {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Iter<'a, K, V> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Keys<'a, K, V> {$/;"	P	implementation:Keys
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Values<'a, K, V> {$/;"	P	implementation:Values
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Bucket
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawIter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Difference<'a, T, S> {$/;"	P	implementation:Difference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Intersection<'a, T, S> {$/;"	P	implementation:Intersection
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Iter<'a, K> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> SymmetricDifference<'a, T, S> {$/;"	P	implementation:SymmetricDifference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Union<'a, T, S> {$/;"	P	implementation:Union
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> KMerge<I> {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn clone(&self) -> RcIter<I> {$/;"	P	implementation:RcIter
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! clone_fields {$/;"	M
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^macro_rules! clone_fields {$/;"	M
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
closure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! closure ($/;"	M
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod cmp;$/;"	n
cmp_fn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
code_from_offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn code_from_offset<E>(v: &[(ErrorKind<E>, usize, usize)], offset: usize) -> Option<u32> {$/;"	f
codegen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod codegen;$/;"	n
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect_from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
column	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    column: usize,$/;"	m	struct:Iterator
column	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^    fn column(&self) -> usize {$/;"	P	implementation:usize
column	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^    fn column(&self) -> usize;$/;"	P	interface:Position
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub columns: usize,$/;"	m	struct:Banded
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub columns: usize,$/;"	m	struct:Compressed
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub columns: usize,$/;"	m	struct:Conventional
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub columns: usize,$/;"	m	struct:Diagonal
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^    fn columns(&self) -> usize {$/;"	P	implementation:usize
columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^    fn columns(&self) -> usize;$/;"	P	interface:Size
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub fn combinations<I>(iter: I, n: usize) -> Combinations<I>$/;"	f
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn combinations(self, n: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod combinations;$/;"	n
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^pub(crate) fn common($/;"	f
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^pub(crate) fn common<T>($/;"	f
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^mod compare;$/;"	n
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:u8
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:str
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:u8
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: T) -> CompareResult;$/;"	P	interface:Compare
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteStr
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:Input
compare_error_paths	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn compare_error_paths<P: Clone + PartialEq, E: Clone + PartialEq>(e1: &Context<P, E>, e2: &/;"	f
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, _: &'b str) -> CompareResult {$/;"	P	implementation:str
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:u8
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:str
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:u8
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: T) -> CompareResult;$/;"	P	interface:Compare
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteStr
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:Input
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    comparison: Option<Comparison>,$/;"	m	struct:Context
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn comparison(&self, measurements: &MeasurementData) -> Option<Comparison> {$/;"	P	implementation:Html
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub comparison: Option<ComparisonData>,$/;"	m	struct:MeasurementData
compile_count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  pub fn compile_count_fixed(input: &[u8]) -> IResult<&[u8], ()> {$/;"	f	module:tests
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! complete ($/;"	M
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn complete() {$/;"	f	module:tests
complete_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn complete_char() {$/;"	f	module:tests
compressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^pub mod compressed;$/;"	n
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod concat_impl;$/;"	n
cond	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn cond() {$/;"	f	module:tests
cond	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond($/;"	M
cond_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond_reduce($/;"	M
cond_with_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond_with_error($/;"	M
cond_wrapping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn cond_wrapping() {$/;"	f	module:tests
confidence	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    confidence: String,$/;"	m	struct:Context
confidence_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_interval: ConfidenceInterval,$/;"	m	struct:Estimate
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    confidence_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub confidence_level: f64,$/;"	m	struct:BenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_level: f64,$/;"	m	struct:ConfidenceInterval
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn confidence_level(mut self, cl: f64) -> Criterion {$/;"	P	implementation:Criterion
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:Benchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:ParameterizedBenchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    config: BenchmarkConfig,$/;"	m	struct:Criterion
configurable_endianness	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn configurable_endianness() {$/;"	f	module:tests
configure_from_args	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn configure_from_args(mut self) -> Criterion {$/;"	P	implementation:Criterion
cons_tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I, J>$/;"	f
cons_tuples_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn consume(&self) -> Result<Ref<InnerMap>, MapError> {$/;"	P	implementation:Map
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn consume(&mut self, amt: usize) {$/;"	f
consumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    consumed: Cell<bool>,$/;"	m	struct:Map
contains	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn contains<Q: ?Sized>(&self, value: &Q) -> bool$/;"	f
contains_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool$/;"	f
conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^pub mod conventional;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^mod convert;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^mod convert;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^mod convert;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^mod convert;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^mod convert;$/;"	n
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn convert(e: Err<I, F>) -> Self {$/;"	P	implementation:Err
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  fn convert(c: Context<I, F>) -> Self {$/;"	P	implementation:Context
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn convert(T) -> Self;$/;"	P	interface:Convert
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn convert(e: ErrorKind<F>) -> Self {$/;"	P	implementation:ErrorKind
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  fn convert(c: Context<I, F>) -> Self {$/;"	P	implementation:Context
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
coordinates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^    fn coordinates(&self) -> (usize, usize) {$/;"	P	interface:Position
copy_new_dir_to_base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn copy_new_dir_to_base(id: &str, baseline: &str, output_directory: &str) {$/;"	f
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod cos;$/;"	n
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod cos;$/;"	n
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos(self) -> Self;$/;"	P	interface:Cos
cos_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_f32(x: f32) -> f32;$/;"	f
cos_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_f64(x: f64) -> f64;$/;"	f
cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod cos_pi;$/;"	n
cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^    fn cos_pi(self) -> Self;$/;"	P	interface:CosPi
cos_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v16f32(x: f32x16) -> f32x16;$/;"	f
cos_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v2f32(x: f32x2) -> f32x2;$/;"	f
cos_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v2f64(x: f64x2) -> f64x2;$/;"	f
cos_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v4f32(x: f32x4) -> f32x4;$/;"	f
cos_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v4f64(x: f64x4) -> f64x4;$/;"	f
cos_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v8f32(x: f32x8) -> f32x8;$/;"	f
cos_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v8f64(x: f64x8) -> f64x8;$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count() {$/;"	f	module:tests
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! count($/;"	M
count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_fixed() {$/;"	f	module:tests
count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! count_fixed ($/;"	M
count_fixed_no_type	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_fixed_no_type() {$/;"	f	module:tests
count_new_keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
count_zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_zero() {$/;"	f	module:tests
cp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn cp(from: &Path, to: &Path) -> Result<()> {$/;"	f
cr_lf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn cr_lf() {$/;"	f	module:tests
criterion_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_group {$/;"	M
criterion_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_main {$/;"	M
crlf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn crlf<T>(input: T) -> IResult<T, T>$/;"	f
csv_report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod csv_report;$/;"	n
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: *const u8,$/;"	m	struct:RawIter
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: NonNull<u8>,$/;"	m	struct:RawTable
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn ctrl(&self, index: usize) -> *mut u8 {$/;"	P	implementation:RawTable
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current_elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    current_group: BitMask,$/;"	m	struct:RawIter
current_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
custom_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn custom_error(input: &[u8]) -> IResult<&[u8], &[u8], CustomError> {$/;"	f	module:tests
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: *const T,$/;"	m	struct:RawIter
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: NonNull<T>,$/;"	m	struct:RawTable
day01	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day01;$/;"	n
day02	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day02;$/;"	n
day03	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day03;$/;"	n
dbg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^macro_rules! dbg ($/;"	M
dbg_dmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^macro_rules! dbg_dmp ($/;"	M
debug	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod debug;$/;"	n
debug_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^fn debug_enabled() -> bool {$/;"	f
debug_fmt_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
debug_script	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn debug_script(path: &PathBuf, figure: &Figure) {$/;"	f
decompose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/decomposition.rs	/^    fn decompose(&self) -> Result<(Conventional<T>, Diagonal<T>)>;$/;"	P	interface:SymmetricEigen
decompose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/decomposition.rs	/^    fn decompose(&self) -> Result<(Conventional<T>, Diagonal<T>, Conventional<T>)>;$/;"	P	interface:SingularValue
decompose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^    fn decompose(&self) -> Result<(Conventional<f64>, Diagonal<f64>)> {$/;"	P	implementation:Conventional
decompose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^    fn decompose(&self) -> Result<(Conventional<f64>, Diagonal<f64>, Conventional<f64>)> {$/;"	P	implementation:Conventional
decomposition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^mod decomposition;$/;"	n
decomposition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub mod decomposition;$/;"	n
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn dedup<I>(mut iter: I) -> Dedup<I>$/;"	f
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn default() -> Self {$/;"	P	implementation:PartialBenchmarkConfig
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> Criterion {$/;"	P	implementation:Criterion
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn default() -> FnvHasher {$/;"	P	implementation:FnvHasher
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn default() -> FxHasher {$/;"	P	implementation:FxHasher
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn default() -> HashMap<K, V, S> {$/;"	f
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn default() -> HashSet<T, S> {$/;"	f
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod default;$/;"	n
delimited	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn delimited() {$/;"	f	module:tests
delimited	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! delimited($/;"	M
delimited_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! delimited_sep ($/;"	M
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn deref() {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Conventional
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Diagonal
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn deref(&self) -> &Self::Target {$/;"	P	implementation:CompleteByteSlice
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn deref(&self) -> &Self::Target {$/;"	P	implementation:CompleteStr
deref_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Conventional
deref_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Diagonal
derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod derive;$/;"	n
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn description(&self) -> &str {$/;"	f
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  pub fn description(&self) -> &str {$/;"	P	implementation:ErrorKind
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
diagonal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^pub mod diagonal;$/;"	n
diagonals	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub fn diagonals(&self) -> usize {$/;"	P	implementation:Banded
diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod diff;$/;"	n
diff_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn difference<'a, 'new>($/;"	f	function:assert_covariance
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn difference<'a>(&'a self, other: &'a HashSet<T, S>) -> Difference<'a, T, S> {$/;"	f
digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit<T>(input: T) -> IResult<T, T>$/;"	f
digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit0<T>(input: T) -> IResult<T, T>$/;"	f
digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit1<T>(input: T) -> IResult<T, T>$/;"	f
dimensions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^    fn dimensions(&self) -> (usize, usize) {$/;"	P	interface:Size
directory_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    directory_name: String,$/;"	m	struct:BenchmarkId
distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub distributions: Distributions,$/;"	m	struct:MeasurementData
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn do_parse() {$/;"	f	module:tests
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! do_parse ($/;"	M
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn do_parse() {$/;"	f	module:tests
do_parse_dependency	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn do_parse_dependency() {$/;"	f	module:tests
do_parse_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! do_parse_sep ($/;"	M
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
dont_work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn dont_work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
dont_work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn dont_work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
double	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn double<T>(input: T) -> IResult<T, f64, u32>$/;"	f
double_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn double_s<T>(input: T) -> IResult<T, f64, u32>$/;"	f
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn drain<'new>($/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn drain(&mut self) -> Drain<K, V> {$/;"	f
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drain(&mut self) -> RawDrain<T> {$/;"	P	implementation:RawTable
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn drain<'new>(d: Drain<'static, &'static str>) -> Drain<'new, &'new str> {$/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn drain(&mut self) -> Drain<T> {$/;"	f
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawDrain
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawIntoIter
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawTable
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drop(&self) {$/;"	P	implementation:Bucket
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropped_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
e	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn e() -> Self {$/;"	P	implementation:Pt
eat_separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! eat_separator ($/;"	M
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either<F, G, T>(self, f: F, g: G) -> T$/;"	P	implementation:Either
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! either {$/;"	M
either_or_both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod either_or_both;$/;"	n
either_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either_with<Ctx, F, G, T>(self, ctx: Ctx, f: F, g: G) -> T$/;"	P	implementation:Either
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^macro_rules! elapsed {$/;"	M
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    elapsed: Duration,$/;"	m	struct:Bencher
elem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    elem: Bucket<(K, V)>,$/;"	m	struct:OccupiedEntry
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    element: I::Item,$/;"	m	struct:Intersperse
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^mod element;$/;"	n
elements_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn elements_per_second(elements_per_second: f64) -> String {$/;"	f
elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
enable_text_coloring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_coloring: bool,$/;"	m	struct:CliReport
enable_text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_overwrite: bool,$/;"	m	struct:CliReport
end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    end: *const u8,$/;"	m	struct:RawIter
end_of_line	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn end_of_line() {$/;"	f	module:tests
end_of_line_completestr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  pub fn end_of_line_completestr(input: CompleteStr) -> IResult<CompleteStr, CompleteStr> {$/;"	f	module:tests
entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn entry(&mut self, key: K) -> Entry<K, V, S> {$/;"	f
enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! eof ($/;"	M
eol	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn eol<T>(input: T) -> IResult<T, T>$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn eq(&self, other: &HashMap<K, V, S>) -> bool {$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn eq(&self, other: &HashSet<T, S>) -> bool {$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod eq;$/;"	n
equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
erase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn erase() {$/;"	f	module:tests
erase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub unsafe fn erase(&mut self) {$/;"	P	implementation:Conventional
erase_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn erase_no_drop(&mut self, item: &Bucket<T>) {$/;"	P	implementation:RawTable
err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn err() {$/;"	f	module:tests
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod error;$/;"	n
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn error() {$/;"	f
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
error_node_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^macro_rules! error_node_position($/;"	M
error_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^macro_rules! error_position($/;"	M
error_to_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn error_to_list<P: Clone, E: Clone>(e: &Context<P, E>) -> Vec<(P, ErrorKind<E>)> {$/;"	f
error_to_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn error_to_string<P: Clone + PartialEq>(e: &Context<P, u32>) -> &'static str {$/;"	f	module:tests
error_to_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn error_to_u32<E>(e: &ErrorKind<E>) -> u32 {$/;"	f
escape_transform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escape_transform() {$/;"	f	module:tests
escape_underscores	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn escape_underscores(string: &str) -> String {$/;"	f
escaped	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! escaped ($/;"	M
escaped_transform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! escaped_transform ($/;"	M
escaping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escaping() {$/;"	f	module:tests
escaping_complete_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escaping_complete_str() {$/;"	f	module:tests
estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod estimate;$/;"	n
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn estimates($/;"	f
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn estimates(avg_times: &Sample<f64>, config: &BenchmarkConfig) -> (Distributions, Estimates) {$/;"	f
exact	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! exact ($/;"	M
exec_fast	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn exec_fast(l: &[u8]) -> String {$/;"	f
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod exp;$/;"	n
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod exp;$/;"	n
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp(self) -> Self;$/;"	P	interface:Exp
exp_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_f32(x: f32) -> f32;$/;"	f
exp_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_f64(x: f64) -> f64;$/;"	f
exp_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v16f32(x: f32x16) -> f32x16;$/;"	f
exp_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v2f32(x: f32x2) -> f32x2;$/;"	f
exp_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v2f64(x: f64x2) -> f64x2;$/;"	f
exp_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v4f32(x: f32x4) -> f32x4;$/;"	f
exp_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v4f64(x: f64x4) -> f64x4;$/;"	f
exp_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v8f32(x: f32x8) -> f32x8;$/;"	f
exp_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v8f64(x: f64x8) -> f64x8;$/;"	f
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
explanation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    explanation: String,$/;"	m	struct:Comparison
expr_opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! expr_opt ($/;"	M
expr_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! expr_res ($/;"	M
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (&'a K, &'a V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (K, V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = &'a T>>(&mut self, iter: I) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	f
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut Self::Extender);$/;"	P	interface:ExtendInto
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:char
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:str
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut Vec<u8>) {$/;"	P	implementation:u8
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:CompleteStr
extract_meta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn extract_meta($/;"	f
extract_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn extract_result(ty: &syn::Type) -> Option<syn::Type> {$/;"	f
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub f: Box<RefCell<Routine<T>>>,$/;"	m	struct:NamedRoutine
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    f: NamedRoutine<I>,$/;"	m	struct:Fun
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    f: F,$/;"	m	struct:CommandFactory
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    f: F,$/;"	m	struct:Function
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:MapResults
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Coalesce
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for f32 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^impl ScaleSelf<f64> for [f64] {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for f64 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for f64 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for f64 {$/;"	c
fabs_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_f32(x: f32) -> f32;$/;"	f
fabs_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_f64(x: f64) -> f64;$/;"	f
fabs_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v16f32(x: f32x16) -> f32x16;$/;"	f
fabs_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v2f32(x: f32x2) -> f32x2;$/;"	f
fabs_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v2f64(x: f64x2) -> f64x2;$/;"	f
fabs_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v4f32(x: f32x4) -> f32x4;$/;"	f
fabs_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v4f64(x: f64x4) -> f64x4;$/;"	f
fabs_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v8f32(x: f32x8) -> f32x8;$/;"	f
fabs_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v8f64(x: f64x8) -> f64x8;$/;"	f
factor_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_first(self) -> (T, Either<L, R>) {$/;"	P	implementation:Either
factor_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_second(self) -> (Either<L, R>, T) {$/;"	P	implementation:Either
faint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn faint(&self, s: String) -> String {$/;"	P	implementation:CliReport
fallback_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^mod fallback_impl;$/;"	n
fallback_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! fallback_impl {$/;"	M
fallback_to_other_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! fallback_to_other_impl {$/;"	M
fill_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fill_buf(&mut self) -> io::Result<&[u8]> {$/;"	f
filler	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    filter: Option<String>,$/;"	m	struct:Criterion
filter_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn filter_matches(&self, id: &str) -> bool {$/;"	P	implementation:Criterion
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn final_summary(&self, report_context: &ReportContext) {$/;"	P	implementation:Html
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn final_summary(&self) {$/;"	P	implementation:Criterion
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, _context: &ReportContext) {}$/;"	P	interface:Report
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, context: &ReportContext) {$/;"	P	implementation:Reports
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn find(&self, hash: u64, eq: impl Fn(&T) -> bool) -> Option<Bucket<T>> {$/;"	P	implementation:RawTable
find_insert_slot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn find_insert_slot(&self, hash: u64) -> usize {$/;"	P	implementation:RawTable
find_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b [u8]) -> Option<usize> {$/;"	P	implementation:u8
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:str
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:u8
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: T) -> Option<usize>;$/;"	P	interface:FindSubstring
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b [u8]) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:CompleteStr
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: T) -> bool;$/;"	P	interface:FindToken
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &'a u8) -> bool {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:Input
finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:FnvHasher
finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:FxHasher
finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    finish: usize,$/;"	m	struct:Iterator
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
fix_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^macro_rules! fix_error ($/;"	M
fix_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^macro_rules! fix_error ($/;"	M
flag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^macro_rules! flat_map($/;"	M
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^macro_rules! flat_map($/;"	M
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn flatten<I, J>(iterable: I) -> Flatten<I::IntoIter, J>$/;"	f
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn flatten(self) -> Flatten<Self, <Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
flip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn flip(self) -> Either<R, L> {$/;"	P	implementation:Either
flip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn flip(&self) -> Self {$/;"	P	implementation:Variant
flip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    pub fn flip(&self) -> Self {$/;"	P	implementation:Variant
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn float<T>(input: T) -> IResult<T, f32, u32>$/;"	f
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math.rs	/^mod float;$/;"	n
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math.rs	/^crate mod float;$/;"	n
float_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod float_arithmetic;$/;"	n
float_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn float_s<T>(input: T) -> IResult<T, f32, u32>$/;"	f
float_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn float_test() {$/;"	f	module:tests
flush	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fma_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v16f32(x: f32x16, y: f32x16, z: f32x16) -> f32x16;$/;"	f
fma_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v2f32(x: f32x2, y: f32x2, z: f32x2) -> f32x2;$/;"	f
fma_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v2f64(x: f64x2, y: f64x2, z: f64x2) -> f64x2;$/;"	f
fma_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v4f32(x: f32x4, y: f32x4, z: f32x4) -> f32x4;$/;"	f
fma_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v4f64(x: f64x4, y: f64x4, z: f64x4) -> f64x4;$/;"	f
fma_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v8f32(x: f32x8, y: f32x8, z: f32x8) -> f32x8;$/;"	f
fma_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v8f64(x: f64x8, y: f64x8, z: f64x8) -> f64x8;$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Statistic
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Entry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Keys
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OccupiedEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:VacantEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Values
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Drain
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:CompleteStr
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod fmt;$/;"	n
fmuladd_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v16f32(x: f32x16, y: f32x16, z: f32x16) -> f32x16;$/;"	f
fmuladd_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v2f32(x: f32x2, y: f32x2, z: f32x2) -> f32x2;$/;"	f
fmuladd_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v2f64(x: f64x2, y: f64x2, z: f64x2) -> f64x2;$/;"	f
fmuladd_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v4f32(x: f32x4, y: f32x4, z: f32x4) -> f32x4;$/;"	f
fmuladd_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v4f64(x: f64x4, y: f64x4, z: f64x4) -> f64x4;$/;"	f
fmuladd_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v8f32(x: f32x8, y: f32x8, z: f32x8) -> f32x8;$/;"	f
fmuladd_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v8f64(x: f64x8, y: f64x8, z: f64x8) -> f64x8;$/;"	f
fnv1a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn fnv1a(bytes: &[u8]) -> u64 {$/;"	f	module:test
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fold<Acc, G>(self, init: Acc, f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many0
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many1
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many_m_n
fold_many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many0() {$/;"	f	module:tests
fold_many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many0($/;"	M
fold_many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many1() {$/;"	f	module:tests
fold_many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many1($/;"	M
fold_many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many_m_n() {$/;"	f	module:tests
fold_many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many_m_n($/;"	M
fold_options	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
foreach	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn foreach<F>(self, mut f: F)$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod format;$/;"	n
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod format;$/;"	n
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub mod format;$/;"	n
format_short_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^            fn format_short_estimate(estimate: &Estimate) -> String {$/;"	f	method:CliReport::measurement_complete
format_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
free	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod free;$/;"	n
free_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn free_buckets(&mut self) {$/;"	P	implementation:RawTable
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    pub fn from(f: &str) -> ArcStr {$/;"	P	implementation:ArcStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub from: PathBuf,$/;"	m	struct:CopyError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn from(r: Result<R, L>) -> Self {$/;"	P	implementation:Either
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from(matrix: &'l Banded<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from(matrix: &'l Diagonal<T>) -> Self {$/;"	P	implementation:Banded
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from(matrix: Banded<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from(matrix: Diagonal<T>) -> Self {$/;"	P	implementation:Banded
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(conventional: &'l Conventional<T>) -> Self {$/;"	P	implementation:Compressed
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(matrix: &'l Compressed<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(matrix: &'l Diagonal<T>) -> Self {$/;"	P	implementation:Compressed
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(matrix: Compressed<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(matrix: Conventional<T>) -> Self {$/;"	P	implementation:Compressed
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from(matrix: Diagonal<T>) -> Self {$/;"	P	implementation:Compressed
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^    fn from(matrix: &Diagonal<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^    fn from(matrix: Diagonal<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^    fn from(matrix: &'l Packed<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^    fn from(matrix: Packed<T>) -> Self {$/;"	P	implementation:Conventional
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn from(i: u8) -> FakeUint {$/;"	P	implementation:tests::FakeUint
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn from(i: &'a str) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn from(i: u32) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      fn from(_: u32) -> Self {$/;"	P	implementation:tests::map_res_err::ParseError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::CustomError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::NilError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::CustomError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'a [u8]) -> Self {$/;"	P	implementation:CompleteByteSlice
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'a str) -> Self {$/;"	P	implementation:CompleteStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'b &'a [u8]) -> Self {$/;"	P	implementation:CompleteByteSlice
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'b &'a str) -> Self {$/;"	P	implementation:CompleteStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn from(i: &'a str) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn from(i: u32) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod from;$/;"	n
from_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from.rs	/^mod from_array;$/;"	n
from_attr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    fn from_attr(attr: &syn::Attribute) -> Option<Vec<MetaCommand>> {$/;"	P	implementation:MetaCommand
from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn from_bits(t: Self) -> Self {$/;"	P	implementation:T
from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn from_bits(t: T) -> Self;$/;"	P	interface:FromBits
from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn from_cast(_: T) -> Self;$/;"	P	interface:FromCast
from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn from_cast(t: Self) -> Self {$/;"	P	implementation:T
from_conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from_conventional() {$/;"	f	module:tests
from_diagonal_tall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from_diagonal_tall() {$/;"	f	module:tests
from_diagonal_tall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from_diagonal_tall() {$/;"	f	module:tests
from_diagonal_wide	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn from_diagonal_wide() {$/;"	f	module:tests
from_diagonal_wide	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn from_diagonal_wide() {$/;"	f	module:tests
from_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn from_id(path_prefix: &str, id: &BenchmarkId) -> IndividualBenchmark {$/;"	P	implementation:IndividualBenchmark
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn from_iter<T: IntoIterator<Item = (K, V)>>(iter: T) -> HashMap<K, V, S> {$/;"	f
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> HashSet<T, S> {$/;"	f
from_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn from_ptr(ptr: *const T) -> Self {$/;"	P	implementation:Bucket
from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub fn from_slice<S: Size>(size: S, values: &[T]) -> Self {$/;"	P	implementation:Conventional
from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub fn from_slice<S: Size>(size: S, values: &[T]) -> Self {$/;"	P	implementation:Diagonal
from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice.rs	/^mod from_slice;$/;"	n
from_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub fn from_vec<S: Size>(size: S, values: Vec<T>) -> Self {$/;"	P	implementation:Conventional
from_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub fn from_vec<S: Size>(size: S, values: Vec<T>) -> Self {$/;"	P	implementation:Diagonal
from_vector	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from.rs	/^mod from_vector;$/;"	n
front	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    front: Option<J>,$/;"	m	struct:Flatten
fs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod fs;$/;"	n
full_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    full_id: String,$/;"	m	struct:BenchmarkId
full_line_unix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn full_line_unix() {$/;"	f	module:tests
full_line_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn full_line_windows() {$/;"	f	module:tests
function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    function: Option<&'a str>,$/;"	m	struct:CsvRow
function_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub function_id: Option<String>,$/;"	m	struct:BenchmarkId
fused	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeCore
fx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod fx;$/;"	n
gather_scatter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr.rs	/^mod gather_scatter;$/;"	n
gen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn gen(input: ArcStr) -> Self where Self: Sized;$/;"	P	interface:Runner
gen_binary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_binary_impl_table {$/;"	M
gen_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            gen_result: Option<bool>,$/;"	m	struct:AocMeta::build::Builder
gen_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    gen_result: bool,$/;"	m	struct:AocMeta
gen_tertiary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_tertiary_impl_table {$/;"	M
gen_unary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_unary_impl_table {$/;"	M
generate_colors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn generate_colors<E>(v: &[(ErrorKind<E>, usize, usize)]) -> HashMap<u32, u8> {$/;"	f
generate_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_plots($/;"	P	implementation:Html
generate_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_summary($/;"	P	implementation:Html
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            generator: Option<syn::Ident>,$/;"	m	struct:AocMeta::build::Builder
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    generator: Option<syn::Ident>,$/;"	m	struct:AocMeta
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod generator;$/;"	n
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub generator: Option<Generator>,$/;"	m	struct:Runner
generator_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/generator.rs	/^pub fn generator_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get(&self) -> &V {$/;"	P	implementation:OccupiedEntry
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn get<Q: ?Sized>(&self, value: &Q) -> Option<&T>$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn get() {$/;"	f	module:tests
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn get<P: Position>(&self, position: P) -> T {$/;"	P	implementation:Compressed
get_key_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>$/;"	f
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut V {$/;"	P	implementation:OccupiedEntry
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, k: &Q) -> Option<&mut V>$/;"	f
get_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn get_name(&self) -> syn::Ident {$/;"	P	implementation:Generator
get_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn get_out_t(&self) -> pm2::TokenStream {$/;"	P	implementation:Generator
green	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn green(&self, s: String) -> String {$/;"	P	implementation:CliReport
group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    group: &'a str,$/;"	m	struct:CsvRow
group_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    group_id: String,$/;"	m	struct:SummaryContext
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub group_id: String,$/;"	m	struct:BenchmarkId
group_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod group_map;$/;"	n
groupbylazy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod groupbylazy;$/;"	n
growth_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    growth_left: usize,$/;"	m	struct:RawTable
h1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h1(hash: u64) -> usize {$/;"	f
h2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h2(hash: u64) -> u8 {$/;"	f
handlebars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    handlebars: Handlebars,$/;"	m	struct:Html
handled_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
has_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    hash: usize,$/;"	m	struct:FxHasher
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash: u64,$/;"	m	struct:VacantEntry
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod hash;$/;"	n
hash_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash_builder: S,$/;"	m	struct:HashMap
hash_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_map {$/;"	n
hash_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_set {$/;"	n
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
head	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
headers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn headers(map: &InnerMap, year: u32) -> pm2::TokenStream {$/;"	f
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMerge
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
height	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    height: usize,$/;"	m	struct:LandClaim
hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit0<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit1<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn hex_digit_test() {$/;"	f	module:tests
hex_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_u32(input: &[u8]) -> IResult<&[u8], u32> {$/;"	f
hex_u32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn hex_u32_tests() {$/;"	f	module:tests
html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod html;$/;"	n
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i128 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i128(/;"	M
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for i128 {$/;"	c
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i128 {$/;"	c
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i128 {$/;"	c
i128_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i128_tests() {$/;"	f	module:tests
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i16 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i16($i/;"	M
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i16 {$/;"	c
i16_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i16_tests() {$/;"	f	module:tests
i24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i24_tests() {$/;"	f	module:tests
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i32 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i32($i/;"	M
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i32 {$/;"	c
i32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i32_tests() {$/;"	f	module:tests
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i64 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i64($i/;"	M
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i64 {$/;"	c
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i64 {$/;"	c
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i64 {$/;"	c
i64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i64_tests() {$/;"	f	module:tests
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i8 {$/;"	c
i8_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i8_tests() {$/;"	f	module:tests
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub id: String,$/;"	m	struct:NamedRoutine
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
id	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    id: usize,$/;"	m	struct:LandClaim
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub fn identity<T>(t: T) -> T {$/;"	f
imp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod imp;$/;"	n
impl_arch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/arch_specific.rs	/^macro_rules! impl_arch {$/;"	M
impl_binary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_binary_ {$/;"	M
impl_cmp_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/eq.rs	/^macro_rules! impl_cmp_eq {$/;"	M
impl_cmp_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/ord.rs	/^macro_rules! impl_cmp_ord {$/;"	M
impl_cmp_partial_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_eq.rs	/^macro_rules! impl_cmp_partial_eq {$/;"	M
impl_cmp_partial_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! impl_cmp_partial_ord {$/;"	M
impl_cmp_vertical	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/vertical.rs	/^macro_rules! impl_cmp_vertical {$/;"	M
impl_cons_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_const_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_const_p {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/default.rs	/^macro_rules! impl_default {$/;"	M
impl_f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_f {$/;"	M
impl_fallback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_fallback {$/;"	M
impl_fmt_binary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/binary.rs	/^macro_rules! impl_fmt_binary {$/;"	M
impl_fmt_debug	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/debug.rs	/^macro_rules! impl_fmt_debug {$/;"	M
impl_fmt_debug_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/debug.rs	/^macro_rules! impl_fmt_debug_tests {$/;"	M
impl_fmt_lower_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/lower_hex.rs	/^macro_rules! impl_fmt_lower_hex {$/;"	M
impl_fmt_octal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/octal.rs	/^macro_rules! impl_fmt_octal {$/;"	M
impl_fmt_upper_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/upper_hex.rs	/^macro_rules! impl_fmt_upper_hex {$/;"	M
impl_fn_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! impl_fn_slice {$/;"	M
impl_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_from_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_array.rs	/^macro_rules! impl_from_array {$/;"	M
impl_from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_from_bits {$/;"	M
impl_from_bits_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_from_bits_ {$/;"	M
impl_from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast {$/;"	M
impl_from_cast_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_ {$/;"	M
impl_from_cast_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_mask {$/;"	M
impl_from_cast_mask_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_mask_ {$/;"	M
impl_from_vector	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_vector.rs	/^macro_rules! impl_from_vector {$/;"	M
impl_from_vectors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_vector.rs	/^macro_rules! impl_from_vectors {$/;"	M
impl_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/hash.rs	/^macro_rules! impl_hash {$/;"	M
impl_i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_i {$/;"	M
impl_into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_into_bits {$/;"	M
impl_into_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_into_cast {$/;"	M
impl_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_m {$/;"	M
impl_macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod impl_macros;$/;"	n
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_ty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/masks.rs	/^macro_rules! impl_mask_ty {$/;"	M
impl_math_float_abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/abs.rs	/^macro_rules! impl_math_float_abs {$/;"	M
impl_math_float_cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/cos.rs	/^macro_rules! impl_math_float_cos {$/;"	M
impl_math_float_exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/exp.rs	/^macro_rules! impl_math_float_exp {$/;"	M
impl_math_float_ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/ln.rs	/^macro_rules! impl_math_float_ln {$/;"	M
impl_math_float_mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/mul_add.rs	/^macro_rules! impl_math_float_mul_add {$/;"	M
impl_math_float_mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/mul_adde.rs	/^macro_rules! impl_math_float_mul_adde {$/;"	M
impl_math_float_powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/powf.rs	/^macro_rules! impl_math_float_powf {$/;"	M
impl_math_float_recpre	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/recpre.rs	/^macro_rules! impl_math_float_recpre {$/;"	M
impl_math_float_rsqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/rsqrte.rs	/^macro_rules! impl_math_float_rsqrte {$/;"	M
impl_math_float_sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sin.rs	/^macro_rules! impl_math_float_sin {$/;"	M
impl_math_float_sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sqrt.rs	/^macro_rules! impl_math_float_sqrt {$/;"	M
impl_math_float_sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sqrte.rs	/^macro_rules! impl_math_float_sqrte {$/;"	M
impl_minimal_iuf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/iuf.rs	/^macro_rules! impl_minimal_iuf {$/;"	M
impl_minimal_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/mask.rs	/^macro_rules! impl_minimal_mask {$/;"	M
impl_minimal_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/ptr.rs	/^macro_rules! impl_minimal_p {$/;"	M
impl_mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^macro_rules! impl_mul_adde {$/;"	M
impl_mut_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_mut_p {$/;"	M
impl_ops_scalar_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_arithmetic.rs	/^macro_rules! impl_ops_scalar_arithmetic {$/;"	M
impl_ops_scalar_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_bitwise.rs	/^macro_rules! impl_ops_scalar_bitwise {$/;"	M
impl_ops_scalar_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_mask_bitwise.rs	/^macro_rules! impl_ops_scalar_mask_bitwise {$/;"	M
impl_ops_scalar_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_shifts.rs	/^macro_rules! impl_ops_scalar_shifts {$/;"	M
impl_ops_vector_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_arithmetic.rs	/^macro_rules! impl_ops_vector_arithmetic {$/;"	M
impl_ops_vector_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_bitwise.rs	/^macro_rules! impl_ops_vector_bitwise {$/;"	M
impl_ops_vector_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_float_min_max.rs	/^macro_rules! impl_ops_vector_float_min_max {$/;"	M
impl_ops_vector_int_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_int_min_max.rs	/^macro_rules! impl_ops_vector_int_min_max {$/;"	M
impl_ops_vector_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_mask_bitwise.rs	/^macro_rules! impl_ops_vector_mask_bitwise {$/;"	M
impl_ops_vector_neg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_neg.rs	/^macro_rules! impl_ops_vector_neg {$/;"	M
impl_ops_vector_rotates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_rotates.rs	/^macro_rules! impl_ops_vector_rotates {$/;"	M
impl_ops_vector_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_shifts.rs	/^macro_rules! impl_ops_vector_shifts {$/;"	M
impl_ptr_read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr/gather_scatter.rs	/^macro_rules! impl_ptr_read {$/;"	M
impl_ptr_write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr/gather_scatter.rs	/^macro_rules! impl_ptr_write {$/;"	M
impl_reduction_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/bitwise.rs	/^macro_rules! impl_reduction_bitwise {$/;"	M
impl_reduction_float_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/float_arithmetic.rs	/^macro_rules! impl_reduction_float_arithmetic {$/;"	M
impl_reduction_integer_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/integer_arithmetic.rs	/^macro_rules! impl_reduction_integer_arithmetic {$/;"	M
impl_reduction_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/mask.rs	/^macro_rules! impl_reduction_mask {$/;"	M
impl_reduction_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/min_max.rs	/^macro_rules! impl_reduction_min_max {$/;"	M
impl_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/select.rs	/^macro_rules! impl_select {$/;"	M
impl_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn {$/;"	M
impl_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn {$/;"	M
impl_shuffle1_dyn_non_u	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn_non_u {$/;"	M
impl_shuffle1_dyn_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn_ptr {$/;"	M
impl_simd_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^macro_rules! impl_simd_array {$/;"	M
impl_simd_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/vPtr.rs	/^macro_rules! impl_simd_ptr {$/;"	M
impl_slice_from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice/from_slice.rs	/^macro_rules! impl_slice_from_slice {$/;"	M
impl_slice_write_to_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice/write_to_slice.rs	/^macro_rules! impl_slice_write_to_slice {$/;"	M
impl_swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/swap_bytes.rs	/^macro_rules! impl_swap_bytes {$/;"	M
impl_swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^macro_rules! impl_swap_bytes {$/;"	M
impl_tertiary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_tertiary_ {$/;"	M
impl_tuple_collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_u	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_u {$/;"	M
impl_unary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_unary_ {$/;"	M
impl_unary_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_unary_t {$/;"	M
impl_zip_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
implement	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/element.rs	/^macro_rules! implement($/;"	M
in_progress	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn index(&self, key: &Q) -> &V {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    index: usize,$/;"	m	struct:ProbeSeq
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn index<'b>(&'b self, _index: usize) -> &'b I::Item {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn index(&self, index: P) -> &Self::Output {$/;"	P	implementation:Conventional
index_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn index_mut(&mut self, index: P) -> &mut Self::Output {$/;"	P	implementation:Conventional
indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub indices: Vec<usize>,$/;"	m	struct:Compressed
inequality	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    inequality: String,$/;"	m	struct:Comparison
infinite_many	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn infinite_many() {$/;"	f	module:tests
init_logging	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn init_logging() {$/;"	f
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    inner: RefCell<InnerMap>,$/;"	m	struct:Map
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:AccessError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:CopyError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Keys
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Values
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: IterMut<'a, K, V>,$/;"	m	struct:ValuesMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIntoIter<(K, V)>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  pub inner: T,$/;"	m	struct:Input
inner0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:T
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:str
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:usize
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize;$/;"	P	interface:InputLength
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:CompleteByteSlice
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:CompleteStr
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:Input
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, k: K, v: V) -> Option<V> {$/;"	f
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, mut value: V) -> V {$/;"	P	implementation:OccupiedEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(self, value: V) -> &'a mut V {$/;"	P	implementation:VacantEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn insert(&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> Bucket<T> {$/;"	P	implementation:RawTable
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn insert(&mut self, value: T) -> bool {$/;"	f
integer_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod integer_arithmetic;$/;"	n
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
internal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod internal;$/;"	n
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn intersection<'a, 'new>($/;"	f	function:assert_covariance
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn intersection<'a>(&'a self, other: &'a HashSet<T, S>) -> Intersection<'a, T, S> {$/;"	f
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod intersperse;$/;"	n
into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn into(self) -> Result<R, L> {$/;"	P	implementation:Either
into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/convert.rs	/^    fn into(self) -> Vec<T> {$/;"	P	implementation:Conventional
into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^    fn into(self) -> Vec<T> {$/;"	P	implementation:Diagonal
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^crate mod into_bits;$/;"	n
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn into_bits(self) -> T;$/;"	P	interface:IntoBits
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn into_bits(self) -> U {$/;"	f
into_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^    fn into_conventional() {$/;"	f	module:tests
into_conventional	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^    fn into_conventional() {$/;"	f	module:tests
into_conventional_lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^    fn into_conventional_lower() {$/;"	f	module:tests
into_conventional_tall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn into_conventional_tall() {$/;"	f	module:tests
into_conventional_upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^    fn into_conventional_upper() {$/;"	f	module:tests
into_conventional_wide	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^    fn into_conventional_wide() {$/;"	f	module:tests
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn into_error_kind(self) -> ::util::ErrorKind<E> {$/;"	P	implementation:Err
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:Context
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:ErrorKind
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:Context
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Either
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_iter(self) -> Either<L::IntoIter, R::IntoIter>$/;"	P	implementation:Either
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IntoIter<K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> Iter<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IterMut<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn into_iter(self) -> BitMaskIter {$/;"	P	implementation:BitMask
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn into_iter(self) -> RawIntoIter<T> {$/;"	P	implementation:RawTable
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> IntoIter<T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> Iter<'a, T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter<'new>(v: IntoIter<&'static str>) -> IntoIter<&'new str> {$/;"	f	function:assert_covariance
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_key<'new>(v: IntoIter<&'static str, u8>) -> IntoIter<&'new str, u8> {$/;"	f	function:assert_covariance
into_iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_val<'new>(v: IntoIter<u8, &'static str>) -> IntoIter<u8, &'new str> {$/;"	f	function:assert_covariance
into_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_key(self) -> K {$/;"	P	implementation:VacantEntry
into_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_mut(self) -> &'a mut V {$/;"	P	implementation:OccupiedEntry
into_option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_parts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
invert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn invert(self) -> BitMask {$/;"	P	implementation:BitMask
iproduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! iproduct {$/;"	M
is_a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn is_a() {$/;"	f	module:tests
is_a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! is_a ($/;"	M
is_a_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! is_a_s ($/;"	M
is_a_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_a_s_fail() {$/;"	f	module:test
is_a_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_a_s_succeed() {$/;"	f	module:test
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool {$/;"	P	implementation:char
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool {$/;"	P	implementation:u8
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool;$/;"	P	interface:AsChar
is_alphabetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_alphabetic(chr: u8) -> bool {$/;"	f
is_alphabetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  pub fn is_alphabetic(c: char) -> bool {$/;"	f	module:test
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool {$/;"	P	implementation:char
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool {$/;"	P	implementation:u8
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool;$/;"	P	interface:AsChar
is_alphanumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_alphanumeric(chr: u8) -> bool {$/;"	f
is_benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^    fn is_benchmark(entry: &DirEntry) -> bool {$/;"	f	function:list_existing_benchmarks
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool {$/;"	P	implementation:char
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool {$/;"	P	implementation:u8
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool;$/;"	P	interface:AsChar
is_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_digit(chr: u8) -> bool {$/;"	f
is_dir	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn is_dir<P>(path: &P) -> bool$/;"	f
is_disjoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_disjoint(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        pub fn is_enabled(self) -> bool {$/;"	P	implementation:plotting::Plotting
is_full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_full(ctrl: u8) -> bool {$/;"	f
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_hex_digit(chr: u8) -> bool {$/;"	f
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool {$/;"	P	implementation:char
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool {$/;"	P	implementation:u8
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool;$/;"	P	interface:AsChar
is_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn is_incomplete(&self) -> bool {$/;"	P	implementation:Err
is_known	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn is_known(&self) -> bool {$/;"	P	implementation:Needed
is_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:Either
is_not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn is_not() {$/;"	f	module:tests
is_not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! is_not ($/;"	M
is_not_line_ending_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn is_not_line_ending_bytes() {$/;"	f	module:tests
is_not_line_ending_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn is_not_line_ending_str() {$/;"	f	module:tests
is_not_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! is_not_s ($/;"	M
is_not_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_not_s_fail() {$/;"	f	module:test
is_not_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_not_s_succeed() {$/;"	f	module:test
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_oct_digit(chr: u8) -> bool {$/;"	f
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool {$/;"	P	implementation:char
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool {$/;"	P	implementation:u8
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool;$/;"	P	interface:AsChar
is_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub is_result: bool,$/;"	m	struct:Generator
is_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:Either
is_rls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn is_rls() -> bool {$/;"	f
is_space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_space(chr: u8) -> bool {$/;"	f
is_special	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_special(ctrl: u8) -> bool {$/;"	f
is_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn is_str(_: &str) {}$/;"	f	function:deref
is_subset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_subset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_superset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_superset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/element.rs	/^    fn is_zero(&self) -> bool;$/;"	P	interface:Element
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for isize {$/;"	c
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for isize {$/;"	c
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for isize {$/;"	c
it	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    it: I,$/;"	m	struct:LazyBuffer
it0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawIter
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawTable
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn iter() {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter(&self) -> Iter<K, V> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IterMut
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawTable
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn iter<'a, 'new>(v: Iter<'a, &'static str>) -> Iter<'a, &'new str> {$/;"	f	function:assert_covariance
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Difference<'a, T, S>, Difference<'a, T, S>>,$/;"	m	struct:SymmetricDifference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Iter<'a, T>, Difference<'a, T, S>>,$/;"	m	struct:Union
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Difference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Intersection
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Keys<'a, K, ()>,$/;"	m	struct:Iter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::Drain<'a, K, ()>,$/;"	m	struct:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::IntoIter<K, ()>,$/;"	m	struct:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn iter(&self) -> Iter<T> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Coalesce
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Dedup
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:CoalesceCore
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Flatten
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:MapResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:Intersperse
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub fn iter<'l>(&'l self) -> Iterator<'l, T> {$/;"	P	implementation:Banded
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn iter() {$/;"	f	module:tests
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn iter<'l>(&'l self) -> Iterator<'l, T> {$/;"	P	implementation:Compressed
iter_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn iter_count(iterations: u64) -> String {$/;"	f
iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub iter_counts: &'a Sample<f64>,$/;"	m	struct:MeasurementData
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:str
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:u8
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem;$/;"	P	interface:InputIter
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:CompleteByteSlice
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:CompleteStr
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:Input
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:str
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:u8
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter;$/;"	P	interface:InputIter
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:CompleteByteSlice
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:CompleteStr
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:Input
iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_key<'a, 'new>(v: Iter<'a, &'static str, u8>) -> Iter<'a, &'new str, u8> {$/;"	f	function:assert_covariance
iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut<K, V> {$/;"	f
iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn iter_mut() {$/;"	f	module:tests
iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn iter_mut<'l>(&'l mut self) -> IteratorMut<'l, T> {$/;"	P	implementation:Compressed
iter_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_tall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn iter_tall() {$/;"	f	module:tests
iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_val<'a, 'new>(v: Iter<'a, u8, &'static str>) -> Iter<'a, u8, &'new str> {$/;"	f	function:assert_covariance
iter_wide	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn iter_wide() {$/;"	f	module:tests
iter_with_large_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_drop<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter_with_large_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_setup<I, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iter_with_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_setup<I, O, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iterated: bool,$/;"	m	struct:Bencher
iteration_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    iteration_count: u64,$/;"	m	struct:CsvRow
iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^macro_rules! iterator($/;"	M
iters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iters: u64,$/;"	m	struct:Bencher
iuf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod iuf;$/;"	n
izip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! izip {$/;"	M
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
kde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod kde;$/;"	n
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: K,$/;"	m	struct:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: Option<K>,$/;"	m	struct:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:Entry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn keys(&self) -> Keys<K, V> {$/;"	f
keys_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_key<'a, 'new>(v: Keys<'a, &'static str, u8>) -> Keys<'a, &'new str, u8> {$/;"	f	function:assert_covariance
keys_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_val<'a, 'new>(v: Keys<'a, u8, &'static str>) -> Keys<'a, u8, &'new str> {$/;"	f	function:assert_covariance
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod kmerge_impl;$/;"	n
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    last: Option<I::Item>,$/;"	m	struct:CoalesceCore
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
last_line_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    last_line_len: Cell<usize>,$/;"	m	struct:CliReport
le_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_f32(input: &[u8]) -> IResult<&[u8], f32> {$/;"	f
le_f32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_f32_tests() {$/;"	f	module:tests
le_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_f64(input: &[u8]) -> IResult<&[u8], f64> {$/;"	f
le_f64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_f64_tests() {$/;"	f	module:tests
le_i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i128(i: &[u8]) -> IResult<&[u8], i128> {$/;"	f
le_i128_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i128_tests() {$/;"	f	module:tests
le_i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i16(i: &[u8]) -> IResult<&[u8], i16> {$/;"	f
le_i16_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i16_tests() {$/;"	f	module:tests
le_i24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i24(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
le_i24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i24_tests() {$/;"	f	module:tests
le_i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i32(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
le_i32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i32_tests() {$/;"	f	module:tests
le_i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i64(i: &[u8]) -> IResult<&[u8], i64> {$/;"	f
le_i64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i64_tests() {$/;"	f	module:tests
le_i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i8(i: &[u8]) -> IResult<&[u8], i8> {$/;"	f
le_i8_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i8_tests() {$/;"	f	module:tests
le_u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u128(i: &[u8]) -> IResult<&[u8], u128, u32> {$/;"	f
le_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
le_u24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u24(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
le_u24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_u24_tests() {$/;"	f	module:tests
le_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
le_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u64(i: &[u8]) -> IResult<&[u8], u64> {$/;"	f
le_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
leading_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn leading_zeros(self) -> usize {$/;"	P	implementation:BitMask
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left(self) -> Option<L> {$/;"	P	implementation:Either
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left_and_then<F, S>(self, f: F) -> Either<S, R>$/;"	P	implementation:Either
left_shift_push	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IterMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Keys
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Values
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ValuesMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:RawTable
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize {$/;"	P	implementation:char
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize {$/;"	P	implementation:u8
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize;$/;"	P	interface:AsChar
length_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! length_bytes($/;"	M
length_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_count() {$/;"	f	module:tests
length_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_count($/;"	M
length_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_data() {$/;"	f	module:tests
length_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_data($/;"	M
length_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_value($/;"	M
length_value_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_value_test() {$/;"	f	module:tests
less_than	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
levels	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn levels() {$/;"	f	module:tests
lib	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod lib {$/;"	n
lib_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^pub fn lib_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
likely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn likely(b: bool) -> bool {$/;"	f
line_chart	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    line_chart: Option<String>,$/;"	m	struct:SummaryContext
line_comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn line_comparison($/;"	f
line_ending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn line_ending<T>(input: T) -> IResult<T, T>$/;"	f
list_existing_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn list_existing_benchmarks<P>(directory: &P) -> Result<Vec<BenchmarkId>>$/;"	f
llvm	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod llvm;$/;"	n
llvm	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^crate mod llvm {$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod ln;$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod ln;$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln(self) -> Self;$/;"	P	interface:Ln
ln_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_f32(x: f32) -> f32;$/;"	f
ln_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_f64(x: f64) -> f64;$/;"	f
ln_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v16f32(x: f32x16) -> f32x16;$/;"	f
ln_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v2f32(x: f32x2) -> f32x2;$/;"	f
ln_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v2f64(x: f64x2) -> f64x2;$/;"	f
ln_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v4f32(x: f32x4) -> f32x4;$/;"	f
ln_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v4f64(x: f64x4) -> f64x4;$/;"	f
ln_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v8f32(x: f32x8) -> f32x8;$/;"	f
ln_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v8f64(x: f64x8) -> f64x8;$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn load<A, P: ?Sized>(path: &P) -> Result<A>$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_summary_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn load_summary_data($/;"	P	implementation:Html
log_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub(crate) fn log_error(e: &Error) {$/;"	f
log_if_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! log_if_err {$/;"	M
lookup_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    lower: String,$/;"	m	struct:ConfidenceInterval
lower_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    lower_bound: f64,$/;"	m	struct:ConfidenceInterval
lower_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod lower_hex;$/;"	n
lowest_set_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn lowest_set_bit(self) -> Option<usize> {$/;"	P	implementation:BitMask
lowest_set_bit_nonzero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub unsafe fn lowest_set_bit_nonzero(self) -> usize {$/;"	P	implementation:BitMask
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for m128 {$/;"	c
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m128 {$/;"	c
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m128 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m16 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m32 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m64 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m64 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m64 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m8 {$/;"	c
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn macros() {$/;"	f
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing.rs	/^mod macros;$/;"	n
macros_private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros_private;$/;"	n
mad	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mad: ConfidenceInterval,$/;"	m	struct:Context
main_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^pub fn main_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
major	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    major: usize,$/;"	m	struct:Iterator
major	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    major: usize,$/;"	m	struct:IteratorMut
make_filename_safe	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn make_filename_safe(string: &str) -> String {$/;"	f
make_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn make_hash<K: Hash + ?Sized>(hash_builder: &impl BuildHasher, val: &K) -> u64 {$/;"	f
manual_configurable_endianness_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn manual_configurable_endianness_test() {$/;"	f	module:tests
many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many0() {$/;"	f	module:tests
many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many0($/;"	M
many0_bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many0_bench(b: &mut Bencher) {$/;"	f	module:tests
many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many1() {$/;"	f	module:tests
many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many1($/;"	M
many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many_m_n() {$/;"	f	module:tests
many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many_m_n($/;"	M
many_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many_till() {$/;"	f	module:tests
many_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many_till($/;"	M
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    map: HashMap<T, (), S>,$/;"	m	struct:HashSet
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn map<F: FnOnce(usize) -> usize>(self, f: F) -> Needed {$/;"	P	implementation:Needed
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map($/;"	M
map_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_key<'new>(v: HashMap<&'static str, u8>) -> HashMap<&'new str, u8> {$/;"	f	function:assert_covariance
map_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_left<F, M>(self, f: F) -> Either<M, R>$/;"	P	implementation:Either
map_opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_opt ($/;"	M
map_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_res ($/;"	M
map_res_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn map_res_err() {$/;"	f	module:tests
map_res_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_res_err ($/;"	M
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn map_results<I, F, T, U, E>(iter: I, f: F) -> MapResults<I, F>$/;"	f
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapResults<Self, F>$/;"	P	interface:Itertools
map_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_right<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
map_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_val<'new>(v: HashMap<u8, &'static str>) -> HashMap<u8, &'new str> {$/;"	f	function:assert_covariance
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            marker: PhantomData<HashMap<K, V, S>>,$/;"	m	struct:deserialize::MapVisitor
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            marker: PhantomData<HashSet<T, S>>,$/;"	m	struct:deserialize::SeqVisitor
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    mask: usize,$/;"	m	struct:ProbeSeq
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod mask;$/;"	n
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod mask;$/;"	n
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions.rs	/^crate mod mask;$/;"	n
masks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod masks;$/;"	n
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
math	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod math;$/;"	n
math	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod math;$/;"	n
matrix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    matrix: &'l Banded<T>,$/;"	m	struct:Iterator
matrix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    matrix: &'l Compressed<T>,$/;"	m	struct:Iterator
matrix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    matrix: &'l mut Compressed<T>,$/;"	m	struct:IteratorMut
matrix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^macro_rules! matrix {$/;"	M
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^macro_rules! max_difference($/;"	M
mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mean: ConfidenceInterval,$/;"	m	struct:Context
measure_only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    measure_only: bool,$/;"	m	struct:Criterion
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn measurement_complete($/;"	P	implementation:FileCsvReport
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn measurement_complete($/;"	P	implementation:Html
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	implementation:Reports
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	interface:Report
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete(&self, id: &BenchmarkId, _: &ReportContext, meas: &MeasurementData) /;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:Reports
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	interface:Report
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    measurement_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub measurement_time: Duration,$/;"	m	struct:BenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn measurement_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    median: ConfidenceInterval,$/;"	m	struct:Context
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:Merge
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:MergeBy
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I, J, F>$/;"	f
merge_join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
method	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! method ($/;"	M
methods	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod methods;$/;"	n
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^macro_rules! min($/;"	M
min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod min_max;$/;"	n
minimal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod minimal;$/;"	n
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
mkdirp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn mkdirp<P>(path: &P) -> Result<()>$/;"	f
mmx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod mmx;$/;"	n
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for msize {$/;"	c
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for msize {$/;"	c
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for msize {$/;"	c
mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod mul_add;$/;"	n
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod mul_add;$/;"	n
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn mul_add(self, y: Self, z: Self) -> Self;$/;"	P	interface:MulAdd
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod mul_adde;$/;"	n
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod mul_adde;$/;"	n
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn mul_adde(self, y: Self, z: Self) -> Self;$/;"	P	interface:MulAddE
mul_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
multi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod multi;$/;"	n
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod multipeek_impl;$/;"	n
multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply(&self, right: &Diagonal<T>) -> Self {$/;"	f
multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply(&self, right: &[f64]) -> Self {$/;"	P	implementation:Conventional
multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply() {$/;"	f	module:tests
multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^fn multiply($/;"	f
multiply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^    fn multiply(&self, &Right) -> Output;$/;"	P	interface:Multiply
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_into(&self, right: &Compressed<T>, result: &mut [T]) {$/;"	f
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_into(&self, right: &[T], result: &mut [T]) {$/;"	f
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply_into(&self, right: &Self, result: &mut [f64]) {$/;"	P	implementation:Conventional
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply_into(&self, right: &Vec<f64>, result: &mut [f64]) {$/;"	P	implementation:Conventional
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply_into(&self, right: &[f64], result: &mut [f64]) {$/;"	P	implementation:Conventional
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn multiply_into() {$/;"	f	module:tests
multiply_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^    fn multiply_into(&self, &Right, &mut Output);$/;"	P	interface:MultiplyInto
multiply_into_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_into_left() {$/;"	f	module:tests
multiply_into_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_into_right() {$/;"	f	module:tests
multiply_matrix_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^fn multiply_matrix_left<T>(a: &Compressed<T>, b: &[T], c: &mut [T], m: usize, p: usize, n: usize/;"	f
multiply_matrix_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^fn multiply_matrix_right<T>(a: &[T], b: &Compressed<T>, c: &mut [T], m: usize, p: usize, n: usiz/;"	f
multiply_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_self(&mut self, right: &Diagonal<T>) {$/;"	f
multiply_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn multiply_self() {$/;"	f	module:tests
multiply_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^    fn multiply_self(&mut self, right: &Diagonal<T>) {$/;"	f
multiply_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^    fn multiply_self() {$/;"	f	module:tests
multiply_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^    fn multiply_self(&mut self, &Right);$/;"	P	interface:MultiplySelf
multispace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace<T>(input: T) -> IResult<T, T>$/;"	f
multispace0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace0<T>(input: T) -> IResult<T, T>$/;"	f
multispace1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace1<T>(input: T) -> IResult<T, T>$/;"	f
multizip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    n: usize,$/;"	m	struct:Combinations
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
n	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn n() -> Self {$/;"	P	implementation:Pt
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    name: String,$/;"	m	struct:Generator
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    name: String,$/;"	m	struct:Solver
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndexBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndividualBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:Plot
named	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named ($/;"	M
named_args	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named_args {$/;"	M
named_attr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named_attr ($/;"	M
ne	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn ne() -> Self {$/;"	P	implementation:Pt
need_more	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub fn need_more<I: AtEof, O, E>(input: I, needed: Needed) -> IResult<I, O, E> {$/;"	f
need_more_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub fn need_more_err<I: AtEof, O, E>(input: I, needed: Needed, err: ErrorKind<E>) -> IResult<I, /;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn new() -> Map {$/;"	P	implementation:Map
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type) -> Solver {$/;"	P	implementation:Solver
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type, is_result: bool) -> Generator {$/;"	P	implementation:Generator
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F, I>(id: S, f: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F>(id: S, f: F) -> Benchmark$/;"	P	implementation:Benchmark
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn new(name: &str, url: &str) -> Plot {$/;"	P	implementation:Plot
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    pub fn new() -> Html {$/;"	P	implementation:Html
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn new(distributions: &Distributions, points: &BTreeMap<Statistic, f64>, cl: f64) -> Estimat/;"	P	implementation:Estimate
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn new<F>(name: &str, f: F) -> Fun<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn new(f: F) -> CommandFactory<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new($/;"	P	implementation:CliReport
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new(reports: Vec<Box<Report>>) -> Reports {$/;"	P	implementation:Reports
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    pub fn new(f: F) -> Function<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn new() -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn new() -> RawTable<T> {$/;"	P	implementation:RawTable
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn new() -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn new(matrix: &'l Banded<T>) -> Iterator<'l, T> {$/;"	P	implementation:Iterator
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub fn new<S: Size>(size: S, superdiagonals: usize, subdiagonals: usize) -> Self {$/;"	P	implementation:Banded
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^macro_rules! new($/;"	M
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn new<S: Size>(size: S, variant: Variant) -> Self {$/;"	P	implementation:Compressed
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^macro_rules! new($/;"	M
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub fn new<S: Size>(size: S) -> Self {$/;"	P	implementation:Conventional
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^macro_rules! new($/;"	M
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub fn new<S: Size>(size: S) -> Self {$/;"	P	implementation:Diagonal
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^macro_rules! new($/;"	M
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    pub fn new<S: Size>(size: S, variant: Variant) -> Self {$/;"	P	implementation:Packed
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^macro_rules! new($/;"	M
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    pub fn new() -> Parser<'a> {$/;"	P	implementation:tests::Parser
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> Self::Extender;$/;"	P	interface:ExtendInto
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:char
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:str
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> Vec<u8> {$/;"	P	implementation:u8
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:CompleteStr
new_chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S, F, I>(id: S, program: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S>(id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
new_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format<'a, I, F>(iter: I, separator: &'a str, f: F) -> FormatWith<'a, I, F>$/;"	f
new_format_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format_default<'a, I>(iter: I, separator: &'a str) -> Format<'a, I>$/;"	f
new_uninitialized	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn new_uninitialized(buckets: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K)> {$/;"	P	implementation:Keys
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a V)> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a mut V)> {$/;"	P	implementation:IterMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a V)> {$/;"	P	implementation:Values
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a mut V)> {$/;"	P	implementation:ValuesMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:BitMaskIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<Bucket<T>> {$/;"	P	implementation:RawIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawDrain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawIntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:ProbeSeq
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a K> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<(I::Item, J::Item)> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<B> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	P	implementation:PutBackN
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Iterator
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut f: F) -> Option<I::Item>$/;"	f
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut less_than: F) -> Option<I::Item>$/;"	f
nn8	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn nn8(self) -> Vec<Self> {$/;"	P	implementation:Pt
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    noise_threshold: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub noise_threshold: f64,$/;"	m	struct:BenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn noise_threshold(mut self, threshold: f64) -> Criterion {$/;"	P	implementation:Criterion
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub noise_threshold: f64,$/;"	m	struct:ComparisonData
nom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod nom;$/;"	n
non_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn non_empty<T>(input: T) -> IResult<T, T>$/;"	f
non_privitive_type	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn non_privitive_type() {$/;"	f	module:tests
none_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn none_of() {$/;"	f	module:tests
none_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! none_of ($/;"	M
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn nonzeros(&self) -> usize {$/;"	P	implementation:Banded
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn nonzeros() {$/;"	f	module:tests
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn nonzeros(&self) -> usize {$/;"	P	implementation:Compressed
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn nonzeros() {$/;"	f	module:tests
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub nonzeros: usize,$/;"	m	struct:Compressed
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn nonzeros(&self) -> usize {$/;"	P	implementation:Conventional
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn nonzeros() {$/;"	f	module:tests
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn nonzeros(&self) -> usize {$/;"	P	implementation:Diagonal
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn nonzeros() {$/;"	f	module:tests
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    fn nonzeros(&self) -> usize {$/;"	P	implementation:Packed
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    fn nonzeros() {$/;"	f	module:tests
nonzeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^    fn nonzeros(&self) -> usize;$/;"	P	interface:Matrix
not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn not() {$/;"	f	module:tests
not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! not($/;"	M
not_line_ending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn not_line_ending<T>(input: T) -> IResult<T, T>$/;"	f
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    nresamples: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub nresamples: usize,$/;"	m	struct:BenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn nresamples(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
nth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
num_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
nw	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn nw() -> Self {$/;"	P	implementation:Pt
oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit0<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit1<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn oct_digit_test() {$/;"	f	module:tests
octal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod octal;$/;"	n
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    offset: usize,$/;"	m	struct:ProbeSeq
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn offset() {$/;"	f	module:tests
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize {$/;"	P	implementation:str
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize {$/;"	P	implementation:u8
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize;$/;"	P	interface:Offset
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &CompleteByteSlice<'a>) -> usize {$/;"	P	implementation:CompleteByteSlice
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &CompleteStr<'a>) -> usize {$/;"	P	implementation:CompleteStr
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &Input<T>) -> usize {$/;"	P	implementation:Input
offsets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub offsets: Vec<usize>,$/;"	m	struct:Compressed
oldest_buffered_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  macro_rules! one_of ($/;"	M	module:tests
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn one_of() {$/;"	f	module:tests
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! one_of ($/;"	M
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^mod operation;$/;"	n
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^mod operation;$/;"	n
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^mod operation;$/;"	n
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^mod operation;$/;"	n
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^mod operation;$/;"	n
operation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub mod operation;$/;"	n
ops	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod ops;$/;"	n
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn opt() {$/;"	f	module:tests
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! opt($/;"	M
opt_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn opt_res() {$/;"	f	module:tests
opt_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! opt_res ($/;"	M
or_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_default(self) -> &'a mut V {$/;"	P	implementation:Entry
or_insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert(self, default: V) -> &'a mut V {$/;"	P	implementation:Entry
or_insert_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert_with<F: FnOnce() -> V>(self, default: F) -> &'a mut V {$/;"	P	implementation:Entry
ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod ord;$/;"	n
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Difference
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Intersection
out	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod out;$/;"	n
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    out_t: String,$/;"	m	struct:Generator
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    out_t: String,$/;"	m	struct:Solver
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn outliers<'a>($/;"	f
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn outliers(&self, sample: &LabeledSample<f64>) {$/;"	P	implementation:CliReport
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    output_directory: String,$/;"	m	struct:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn output_directory(mut self, path: &std::path::Path) -> Criterion {$/;"	P	implementation:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub output_directory: String,$/;"	m	struct:ReportContext
owner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    p_value: String,$/;"	m	struct:Comparison
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub p_value: f64,$/;"	m	struct:ComparisonData
packed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^pub mod packed;$/;"	n
pad_tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn pair() {$/;"	f	module:tests
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! pair($/;"	M
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn pair() {$/;"	f	module:tests
pair_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! pair_sep ($/;"	M
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn parse_input(input: &str) -> Vec<isize> {$/;"	f
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn parse_input(input: &str) -> Vec<LandClaim> {$/;"	f
parse_lib_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn parse_lib_infos(infos: pm::TokenStream) -> Result<LibInfos, ()> {$/;"	f
parse_main_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn parse_main_infos(infos: pm::TokenStream) -> Result<MainInfos, ()> {$/;"	f
parse_meta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^fn parse_meta(attrs: &[syn::Attribute]) -> Result<AocMeta, Box<dyn error::Error>> {$/;"	f
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn parse_to() {$/;"	f	module:tests
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! parse_to ($/;"	M
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:str
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:u8
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R>;$/;"	P	interface:ParseTo
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:CompleteByteSlice
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:CompleteStr
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:Input
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part1(input: &[isize]) -> isize {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn part1(input: &str) -> u32 {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part1(input: &Vec<LandClaim>) -> usize {$/;"	f
part1_birk	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn part1_birk(input: &str) -> u32 {$/;"	f
part1_birk_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part1_birk_example() {$/;"	f	module:tests
part1_burnt	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn part1_burnt(input: &str) -> u32 {$/;"	f
part1_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^    fn part1_example() {$/;"	f	module:tests
part1_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part1_example() {$/;"	f	module:tests
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part2(input: &[isize]) -> isize {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^pub fn part2<'a>(input: &'a str) -> String {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part2(input: &Vec<LandClaim>) -> usize {$/;"	f
part2_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^    fn part2_example() {$/;"	f	module:tests
part2_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part2_example() {$/;"	f	module:tests
part2_fnv	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part2_fnv(input: &[isize]) -> isize {$/;"	f
part2_hb	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part2_hb(input: &[isize]) -> isize {$/;"	f
part2_hb	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^pub fn part2_hb<'a>(input: &'a str) -> String {$/;"	f
part2_hb_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part2_hb_example() {$/;"	f	module:tests
partial_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod partial_eq;$/;"	n
partial_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod partial_ord;$/;"	n
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, predicate: F) -> (A, B)$/;"	P	interface:Itertools
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub path: PathBuf,$/;"	m	struct:AccessError
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: Option<String>,$/;"	m	struct:IndexBenchmark
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: String,$/;"	m	struct:IndividualBenchmark
pdf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf($/;"	f
pdf_small	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf_small(sample: &Sample<f64>, path: String, size: Option<Size>) -> Child {$/;"	f
pdfs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub fn pdfs($/;"	f
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:Intersperse
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn peek() {$/;"	f	module:tests
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! peek($/;"	M
peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn permutation() {$/;"	f	module:tests
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation ($/;"	M
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn permutation() {$/;"	f	module:tests
permutation_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_init ($/;"	M
permutation_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_iterator ($/;"	M
permutation_iterator_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! permutation_iterator_sep ($/;"	M
permutation_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! permutation_sep ($/;"	M
permutation_unwrap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_unwrap ($/;"	M
phase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plot;$/;"	n
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    plot_config: PlotConfiguration,$/;"	m	struct:PartialBenchmarkConfig
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plot_config: PlotConfiguration,$/;"	m	struct:ReportContext
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    plotting: Plotting,$/;"	m	struct:Criterion
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plotting {$/;"	n
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plotting: Plotting,$/;"	m	struct:ReportContext
point	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    point: String,$/;"	m	struct:ConfidenceInterval
point_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    point_estimate: f64,$/;"	m	struct:Estimate
pointer_sized_int	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod pointer_sized_int;$/;"	n
pool	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^mod position;$/;"	n
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:str
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:u8
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	interface:InputIter
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:CompleteByteSlice
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:CompleteStr
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:Input
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod powf;$/;"	n
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod powf;$/;"	n
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf(self, x: Self) -> Self;$/;"	P	interface:Powf
powf_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_f32(x: f32, y: f32) -> f32;$/;"	f
powf_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_f64(x: f64, y: f64) -> f64;$/;"	f
powf_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v16f32(x: f32x16, y: f32x16) -> f32x16;$/;"	f
powf_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v2f32(x: f32x2, y: f32x2) -> f32x2;$/;"	f
powf_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v2f64(x: f64x2, y: f64x2) -> f64x2;$/;"	f
powf_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v4f32(x: f32x4, y: f32x4) -> f32x4;$/;"	f
powf_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v4f64(x: f64x4, y: f64x4) -> f64x4;$/;"	f
powf_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v8f32(x: f32x8, y: f32x8) -> f32x8;$/;"	f
powf_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v8f64(x: f64x8, y: f64x8) -> f64x8;$/;"	f
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn preceded() {$/;"	f	module:tests
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! preceded($/;"	M
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn preceded() {$/;"	f	module:tests
preceded_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! preceded_sep ($/;"	M
prelude	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^pub mod prelude;$/;"	n
prelude	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^    pub mod prelude {$/;"	n	module:lib::std
prepare_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn prepare_errors<O, E: Clone>(input: &[u8], res: IResult<&[u8], O, E>) -> Option<Vec<(Error/;"	f
print	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn print<T: Debug>(input: T) -> IResult<T, ()> {$/;"	f
print_codes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_codes(colors: &HashMap<u32, u8>, names: &HashMap<u32, &str>) -> String {$/;"	f
print_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_error<O, E: Clone>(input: &[u8], res: IResult<&[u8], O, E>) {$/;"	f
print_offsets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_offsets<E>(input: &[u8], from: usize, offsets: &[(ErrorKind<E>, usize, usize)]) -> /;"	f
print_overwritable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn print_overwritable(&self, s: String) {$/;"	P	implementation:CliReport
probe_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn probe_seq(&self, hash: u64) -> ProbeSeq {$/;"	P	implementation:RawTable
process_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod process_results_impl;$/;"	n
program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod program;$/;"	n
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ptr: NonNull<T>,$/;"	m	struct:Bucket
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod ptr;$/;"	n
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod ptr;$/;"	n
ptr_vals	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^macro_rules! ptr_vals {$/;"	M
pub_crate_named_mod	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  mod pub_crate_named_mod {$/;"	n	module:tests
pub_crate_named_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn pub_crate_named_test() {$/;"	f	module:tests
pub_named_mod	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  mod pub_named_mod {$/;"	n	module:tests
pub_named_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn pub_named_test() {$/;"	f	module:tests
push_next_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod put_back_n_impl;$/;"	n
r2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    r2: ConfidenceInterval,$/;"	m	struct:Context
raise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^macro_rules! raise($/;"	M
raw	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod raw;$/;"	n
rcbuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod rciter_impl;$/;"	n
re_bytes_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_capture() {$/;"	f	module:tests
re_bytes_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_capture ($/;"	M
re_bytes_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_capture_static() {$/;"	f	module:tests
re_bytes_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_capture_static ($/;"	M
re_bytes_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_captures() {$/;"	f	module:tests
re_bytes_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_captures ($/;"	M
re_bytes_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_captures_static() {$/;"	f	module:tests
re_bytes_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_captures_static ($/;"	M
re_bytes_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_find() {$/;"	f	module:tests
re_bytes_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_find ($/;"	M
re_bytes_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_find_static() {$/;"	f	module:tests
re_bytes_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_find_static ($/;"	M
re_bytes_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_match() {$/;"	f	module:tests
re_bytes_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_match ($/;"	M
re_bytes_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_match_static() {$/;"	f	module:tests
re_bytes_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_match_static ($/;"	M
re_bytes_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_matches() {$/;"	f	module:tests
re_bytes_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_matches ($/;"	M
re_bytes_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_matches_static() {$/;"	f	module:tests
re_bytes_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_matches_static ($/;"	M
re_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_capture() {$/;"	f	module:tests
re_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_capture ($/;"	M
re_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_capture_static() {$/;"	f	module:tests
re_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_capture_static ($/;"	M
re_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_captures() {$/;"	f	module:tests
re_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_captures ($/;"	M
re_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_captures_static() {$/;"	f	module:tests
re_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_captures_static ($/;"	M
re_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_find() {$/;"	f	module:tests
re_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_find ($/;"	M
re_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_find_static() {$/;"	f	module:tests
re_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_find_static ($/;"	M
re_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_match() {$/;"	f	module:tests
re_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_match ($/;"	M
re_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_match_static() {$/;"	f	module:tests
re_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_match_static ($/;"	M
re_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_matches() {$/;"	f	module:tests
re_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_matches ($/;"	M
re_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_matches_static() {$/;"	f	module:tests
re_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_matches_static ($/;"	M
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn read(&self) -> T {$/;"	P	implementation:Bucket
read_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn read_infos() -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
read_to_end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> io::Result<usize> {$/;"	f
read_write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn read_write() {$/;"	f
recognize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! recognize ($/;"	M
recognize_float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn recognize_float<T>(input: T) -> IResult<T, T, u32>$/;"	f
recognize_is_a_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn recognize_is_a_s() {$/;"	f	module:test
recpre	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod recpre;$/;"	n
recurse_half	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! recurse_half {$/;"	M
recv	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn recv(&mut self) -> &str {$/;"	P	implementation:Program
red	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn red(&self, s: String) -> String {$/;"	P	implementation:CliReport
reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod reductions;$/;"	n
reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod reductions;$/;"	n
ref_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! ref_ {$/;"	M
ref_mut_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! ref_mut_ {$/;"	M
regex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! regex ($/;"	M
regex_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! regex_bytes ($/;"	M
regexp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod regexp;$/;"	n
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn regression(data: Data<f64, f64>, config: &BenchmarkConfig) -> (Distribution<f64>, Estimate) {$/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub(crate) fn regression($/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn regression($/;"	f
rehash_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn rehash_in_place(&mut self, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
rel_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn rel_distributions($/;"	f
relative_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_distributions: Distributions,$/;"	m	struct:ComparisonData
relative_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_estimates: Estimates,$/;"	m	struct:ComparisonData
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove(self) -> V {$/;"	P	implementation:OccupiedEntry
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, k: &Q) -> Option<V>$/;"	f
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn remove<Q: ?Sized>(&mut self, value: &Q) -> bool$/;"	f
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry(self) -> (K, V) {$/;"	P	implementation:OccupiedEntry
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry<Q: ?Sized>(&mut self, k: &Q) -> Option<(K, V)>$/;"	f
remove_lowest_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn remove_lowest_bit(self) -> BitMask {$/;"	P	implementation:BitMask
repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^fn repeat(byte: u8) -> GroupWord {$/;"	f
repeat_10	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn repeat_10(bytes: &[u8]) -> Vec<u8> {$/;"	f	module:test
repeat_500	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn repeat_500(bytes: &[u8]) -> Vec<u8> {$/;"	f	module:test
repeat_call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod repeatn;$/;"	n
replace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn replace(&mut self, value: T) -> Option<T> {$/;"	f
replace_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_entry(self, value: V) -> (K, V) {$/;"	P	implementation:OccupiedEntry
replace_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_key(self) -> K {$/;"	P	implementation:OccupiedEntry
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    report: Box<Report>,$/;"	m	struct:Criterion
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod report;$/;"	n
reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    reports: Vec<Box<Report>>,$/;"	m	struct:Reports
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn reserve(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve_rehash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn reserve_rehash(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset_color	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn reset_color(v: &mut Vec<u8>) {$/;"	f
reset_peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
resize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn resize(&mut self, capacity: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
resize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn resize<S: Size>(&mut self, size: S) {$/;"	P	implementation:Compressed
resize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub fn resize<S: Size>(&mut self, size: S) {$/;"	P	implementation:Conventional
resize_fewer_columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn resize_fewer_columns() {$/;"	f	module:tests
resize_fewer_columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn resize_fewer_columns() {$/;"	f	module:tests
resize_fewer_rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn resize_fewer_rows() {$/;"	f	module:tests
resize_fewer_rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn resize_fewer_rows() {$/;"	f	module:tests
resize_more_columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn resize_more_columns() {$/;"	f	module:tests
resize_more_columns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn resize_more_columns() {$/;"	f	module:tests
resize_more_columns_rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn resize_more_columns_rows() {$/;"	f	module:tests
resize_more_rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn resize_more_rows() {$/;"	f	module:tests
resize_more_rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn resize_more_rows() {$/;"	f	module:tests
rest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest<T>(input: T) -> IResult<T, T>$/;"	f
rest_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest_len<T>(input: T) -> IResult<T, usize>$/;"	f
rest_len_on_slices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_len_on_slices() {$/;"	f	module:tests
rest_on_slices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_on_slices() {$/;"	f	module:tests
rest_on_strs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_on_strs() {$/;"	f	module:tests
rest_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest_s(input: &str) -> IResult<&str, &str> {$/;"	f
ret_int1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    fn ret_int1(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn ret_int1(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    fn ret_int2(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn ret_int2(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn retain<F>(&mut self, mut condition: F)$/;"	P	implementation:Compressed
retain_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn retain_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
return_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! return_error ($/;"	M
rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right(self) -> Option<R> {$/;"	P	implementation:Either
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right_and_then<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
rot90l	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn rot90l(self) -> Self {$/;"	P	implementation:Pt
routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod routine;$/;"	n
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<()>>,$/;"	m	struct:Benchmark
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<T>>,$/;"	m	struct:ParameterizedBenchmark
row	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^    fn row(&self) -> usize {$/;"	P	implementation:usize
row	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^    fn row(&self) -> usize;$/;"	P	interface:Position
row_finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^macro_rules! row_finish($/;"	M
row_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^macro_rules! row_range($/;"	M
row_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^macro_rules! row_start($/;"	M
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub rows: usize,$/;"	m	struct:Banded
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub rows: usize,$/;"	m	struct:Compressed
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub rows: usize,$/;"	m	struct:Conventional
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub rows: usize,$/;"	m	struct:Diagonal
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^    fn rows(&self) -> usize {$/;"	P	implementation:usize
rows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^    fn rows(&self) -> usize;$/;"	P	interface:Size
rsqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod rsqrte;$/;"	n
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn run(&self) -> Box<dyn Display>;$/;"	P	interface:Runner
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	P	implementation:Benchmark
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	f
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion);$/;"	P	interface:BenchmarkDefinition
run_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            run_result: Option<bool>,$/;"	m	struct:AocMeta::build::Builder
run_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    run_result: bool,$/;"	m	struct:AocMeta
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            runner: Option<syn::Ident>,$/;"	m	struct:AocMeta::build::Builder
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    runner: syn::Ident,$/;"	m	struct:AocMeta
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod runner;$/;"	n
runner_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/runner.rs	/^pub fn runner_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
s	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn s() -> Self {$/;"	P	implementation:Pt
sample	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn sample($/;"	P	interface:Routine
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub sample_size: usize,$/;"	m	struct:BenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    sample_size: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn sample_size(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
sample_time_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    sample_time_nanos: f64,$/;"	m	struct:CsvRow
sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub sample_times: &'a Sample<f64>,$/;"	m	struct:MeasurementData
save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save<D, P>(data: &D, path: &P) -> Result<()>$/;"	f
save_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn save_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
save_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save_string<P>(data: &str, path: &P) -> Result<()>$/;"	f
scalar_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_arithmetic;$/;"	n
scalar_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_bitwise;$/;"	n
scalar_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_mask_bitwise;$/;"	n
scalar_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_shifts;$/;"	n
scale_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn scale_self(&mut self, alpha: f64) {$/;"	P	implementation:f64
scale_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^    fn scale_self() {$/;"	f	module:tests
scale_self	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^    fn scale_self(&mut self, T);$/;"	P	interface:ScaleSelf
scale_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn scale_time(ns: f64) -> (f64, &'static str) {$/;"	f
se	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn se() -> Self {$/;"	P	implementation:Pt
sealed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod sealed;$/;"	n
select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod select;$/;"	n
send	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn send<T>(&mut self, line: T) -> &mut Program$/;"	P	implementation:Program
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! sep ($/;"	M
separated_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_list() {$/;"	f	module:tests
separated_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_list($/;"	M
separated_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_list_complete() {$/;"	f	module:tests
separated_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_list_complete {$/;"	M
separated_list_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! separated_list_sep ($/;"	M
separated_nonempty_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_nonempty_list() {$/;"	f	module:tests
separated_nonempty_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_nonempty_list($/;"	M
separated_nonempty_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_nonempty_list_complete() {$/;"	f	module:tests
separated_nonempty_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_nonempty_list_complete {$/;"	M
separated_pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn separated_pair() {$/;"	f	module:tests
separated_pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! separated_pair($/;"	M
separated_pair_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! separated_pair_sep ($/;"	M
sequence	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod sequence;$/;"	n
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod set;$/;"	n
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn set<'new>(v: HashSet<&'static str>) -> HashSet<&'new str> {$/;"	f	function:assert_covariance
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn set() {$/;"	f	module:tests
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn set<P: Position>(&mut self, position: P, value: T) {$/;"	P	implementation:Compressed
set_ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn set_ctrl(&self, index: usize, ctrl: u8) {$/;"	P	implementation:RawTable
set_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
shl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn shl(self, shift: usize) -> FakeUint {$/;"	P	implementation:tests::FakeUint
short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn short(n: f64) -> String {$/;"	f
short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn short_max_len() {$/;"	f	module:test
shr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn shr(self, shift: usize) -> FakeUint {$/;"	P	implementation:tests::FakeUint
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn shrink_to(&mut self, min_size: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod shuffle;$/;"	n
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle.rs	/^macro_rules! shuffle {$/;"	M
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod shuffle;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod shuffle1_dyn;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod shuffle1_dyn;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^    fn shuffle1_dyn(self, _: Self::Indices) -> Self;$/;"	P	interface:Shuffle1Dyn
sift_down	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
signed_short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn signed_short(n: f64) -> String {$/;"	f
signed_short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn signed_short_max_len() {$/;"	f	module:test
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub significance_level: f64,$/;"	m	struct:BenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    significance_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    significance_level: String,$/;"	m	struct:Comparison
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn significance_level(mut self, sl: f64) -> Criterion {$/;"	P	implementation:Criterion
significance_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub significance_threshold: f64,$/;"	m	struct:ComparisonData
simd_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_add<T>(x: T, y: T) -> T;$/;"	f
simd_and	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_and<T>(x: T, y: T) -> T;$/;"	f
simd_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_cast<T, U>(x: T) -> U;$/;"	f
simd_div	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_div<T>(x: T, y: T) -> T;$/;"	f
simd_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_eq<T, U>(x: T, y: T) -> U;$/;"	f
simd_extract	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_extract<T, U>(x: T, idx: u32) -> U;$/;"	f
simd_fma	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fma<T>(a: T, b: T, c: T) -> T;$/;"	f
simd_fmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fmax<T>(a: T, b: T) -> T;$/;"	f
simd_fmin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fmin<T>(a: T, b: T) -> T;$/;"	f
simd_fsqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fsqrt<T>(a: T) -> T;$/;"	f
simd_gather	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_gather<T, P, M>(value: T, pointers: P, mask: M) -> T;$/;"	f
simd_ge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_ge<T, U>(x: T, y: T) -> U;$/;"	f
simd_gt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_gt<T, U>(x: T, y: T) -> U;$/;"	f
simd_insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;$/;"	f
simd_le	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_le<T, U>(x: T, y: T) -> U;$/;"	f
simd_lt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_lt<T, U>(x: T, y: T) -> U;$/;"	f
simd_mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_mul<T>(x: T, y: T) -> T;$/;"	f
simd_ne	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_ne<T, U>(x: T, y: T) -> U;$/;"	f
simd_or	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_or<T>(x: T, y: T) -> T;$/;"	f
simd_reduce_add_ordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_add_ordered<T, U>(x: T, acc: U) -> U;$/;"	f
simd_reduce_add_unordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_add_unordered<T, U>(x: T) -> U;$/;"	f
simd_reduce_all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_all<T>(x: T) -> bool;$/;"	f
simd_reduce_and	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_and<T, U>(x: T) -> U;$/;"	f
simd_reduce_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_any<T>(x: T) -> bool;$/;"	f
simd_reduce_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_max<T, U>(x: T) -> U;$/;"	f
simd_reduce_max_nanless	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_max_nanless<T, U>(x: T) -> U;$/;"	f
simd_reduce_min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_min<T, U>(x: T) -> U;$/;"	f
simd_reduce_min_nanless	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_min_nanless<T, U>(x: T) -> U;$/;"	f
simd_reduce_mul_ordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_mul_ordered<T, U>(x: T, acc: U) -> U;$/;"	f
simd_reduce_mul_unordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_mul_unordered<T, U>(x: T) -> U;$/;"	f
simd_reduce_or	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_or<T, U>(x: T) -> U;$/;"	f
simd_reduce_xor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_xor<T, U>(x: T) -> U;$/;"	f
simd_rem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_rem<T>(x: T, y: T) -> T;$/;"	f
simd_scatter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_scatter<T, P, M>(value: T, pointers: P, mask: M);$/;"	f
simd_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_select<M, T>(m: M, a: T, b: T) -> T;$/;"	f
simd_shl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_shl<T>(x: T, y: T) -> T;$/;"	f
simd_shr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_shr<T>(x: T, y: T) -> T;$/;"	f
simd_sub	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_sub<T>(x: T, y: T) -> T;$/;"	f
simd_xor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_xor<T>(x: T, y: T) -> T;$/;"	f
simple_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod simple_errors;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sin;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin(self) -> Self;$/;"	P	interface:Sin
sin_cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin_cos_pi;$/;"	n
sin_cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^    fn sin_cos_pi(self) -> Self::Output;$/;"	P	interface:SinCosPi
sin_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_f32(x: f32) -> f32;$/;"	f
sin_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_f64(x: f64) -> f64;$/;"	f
sin_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin_pi;$/;"	n
sin_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^    fn sin_pi(self) -> Self;$/;"	P	interface:SinPi
sin_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v16f32(x: f32x16) -> f32x16;$/;"	f
sin_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v2f32(x: f32x2) -> f32x2;$/;"	f
sin_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v2f64(x: f64x2) -> f64x2;$/;"	f
sin_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v4f32(x: f32x4) -> f32x4;$/;"	f
sin_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v4f64(x: f64x4) -> f64x4;$/;"	f
sin_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v8f32(x: f32x8) -> f32x8;$/;"	f
sin_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v8f64(x: f64x8) -> f64x8;$/;"	f
singular_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^    fn singular_value() {$/;"	f	module:tests
singular_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^fn singular_value($/;"	f
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^macro_rules! size($/;"	M
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    pub size: usize,$/;"	m	struct:Packed
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^mod size;$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod size_hint {$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Keys
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ValuesMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawDrain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
sized_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn sized_buffer(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice(&self, range: R) -> Self;$/;"	P	interface:Slice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod slice;$/;"	n
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:str
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:u8
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize>;$/;"	P	interface:InputIter
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:CompleteStr
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:Input
slice_range_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! slice_range_impl {$/;"	M
slice_ranges_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! slice_ranges_impl {$/;"	M
slice_to_offsets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn slice_to_offsets(input: &[u8], s: &[u8]) -> (usize, usize) {$/;"	f
slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    slope: ConfidenceInterval,$/;"	m	struct:Context
solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub solver: Option<Solver>,$/;"	m	struct:Runner
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn sorted<I>(iterable: I) -> Vec<I::Item>$/;"	f
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sources	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod sources;$/;"	n
sp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^pub fn sp<'a, T>(input: T) -> IResult<T, T>$/;"	f
spaaaaace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn spaaaaace() {$/;"	f	module:tests
space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space<T>(input: T) -> IResult<T, T>$/;"	f
space0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space0<T>(input: T) -> IResult<T, T>$/;"	f
space1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space1<T>(input: T) -> IResult<T, T>$/;"	f
spawn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn spawn(cmd: &mut Command) -> Program {$/;"	P	implementation:Program
special_is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn special_is_empty(ctrl: u8) -> bool {$/;"	f
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteByteSlice
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteStr
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:T
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:str
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:u8
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	interface:InputTakeAtPosition
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteByteSlice
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteStr
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:T
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:str
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:u8
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	interface:InputTakeAtPosition
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sqrt;$/;"	n
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sqrt;$/;"	n
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt(self) -> Self;$/;"	P	interface:Sqrt
sqrt_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_f32(x: f32) -> f32;$/;"	f
sqrt_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_f64(x: f64) -> f64;$/;"	f
sqrt_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v16f32(x: f32x16) -> f32x16;$/;"	f
sqrt_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v2f32(x: f32x2) -> f32x2;$/;"	f
sqrt_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v2f64(x: f64x2) -> f64x2;$/;"	f
sqrt_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v4f32(x: f32x4) -> f32x4;$/;"	f
sqrt_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v4f64(x: f64x4) -> f64x4;$/;"	f
sqrt_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v8f32(x: f32x8) -> f32x8;$/;"	f
sqrt_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v8f64(x: f64x8) -> f64x8;$/;"	f
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sqrte;$/;"	n
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sqrte;$/;"	n
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrte.rs	/^    fn sqrte(self) -> Self;$/;"	P	interface:Sqrte
sse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod sse;$/;"	n
sse2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod sse2;$/;"	n
standard_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    standard_error: f64,$/;"	m	struct:Estimate
star	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^fn star(r_u8: &u8) -> u8 {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, _: &()) -> Option<Program> {$/;"	P	implementation:Command
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, _: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program>;$/;"	P	interface:Routine
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    start: usize,$/;"	m	struct:Iterator
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^    fn stats(a: &Sample<f64>, b: &Sample<f64>) -> (f64, f64) {$/;"	f	function:estimates
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^    fn stats(sample: &Sample<f64>) -> (f64, f64, f64, f64) {$/;"	f	function:estimates
std	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^  pub mod std {$/;"	n	module:lib
std_dev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    std_dev: ConfidenceInterval,$/;"	m	struct:Context
stderr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stderr: ChildStderr,$/;"	m	struct:Program
stdin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdin: ChildStdin,$/;"	m	struct:Program
stdout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdout: BufReader<ChildStdout>,$/;"	m	struct:Program
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step_buffering	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
storage	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^macro_rules! storage($/;"	M
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod str;$/;"	n
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsBytes for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl Offset for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b str> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b str> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindToken<&'a u8> for &'b str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, R: FromStr> ParseTo<R> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsBytes for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AtEof for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<char> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<u8> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputIter for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputLength for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTake for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> Offset for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl HexDisplay for str {$/;"	c
str_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn str_test() {$/;"	f	module:tests
structs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod structs {$/;"	n
sub	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn sub(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
sub_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    sub_benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexBenchmark
sub_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
subdiagonals	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub subdiagonals: usize,$/;"	m	struct:Banded
succ	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! succ ($/;"	M
success	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^macro_rules! success($/;"	M
sum2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn sum2(a: u8, b: u8) -> u8 {$/;"	f	function:tests::apply_test
sum3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn sum3(a: u8, b: u8, c: u8) -> u8 {$/;"	f	function:tests::apply_test
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Html
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, _context: &ReportContext, _all_ids: &[BenchmarkId]) {}$/;"	P	interface:Report
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Reports
summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod summary;$/;"	n
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn summary_scale(mut self, new_scale: AxisScale) -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    summary_scale: AxisScale,$/;"	m	struct:PlotConfiguration
superdiagonals	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub superdiagonals: usize,$/;"	m	struct:Banded
sw	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn sw() -> Self {$/;"	P	implementation:Pt
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod swap_bytes;$/;"	n
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod swap_bytes;$/;"	n
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^    fn swap_bytes(self) -> Self;$/;"	P	interface:SwapBytes
sweep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep($/;"	f
sweep_and_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep_and_estimate($/;"	f
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn switch() {$/;"	f	module:tests
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! switch ($/;"	M
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn switch() {$/;"	f	module:tests
switch_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! switch_sep ($/;"	M
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn symmetric_difference<'a, 'new>($/;"	f	function:assert_covariance
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn symmetric_difference<'a>($/;"	f
symmetric_eigen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^    fn symmetric_eigen() {$/;"	f	module:tests
symmetric_eigen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^fn symmetric_eigen(matrix: &mut [f64], values: &mut [f64], m: usize) -> Result<()> {$/;"	f
t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t_distribution	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_distribution: Distribution<f64>,$/;"	m	struct:ComparisonData
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn t_test($/;"	f
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn t_test($/;"	f
t_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_value: f64,$/;"	m	struct:ComparisonData
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:OccupiedEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:VacantEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: RawTable<(K, V)>,$/;"	m	struct:HashMap
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    table: NonNull<RawTable<T>>,$/;"	m	struct:RawDrain
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! tag ($/;"	M
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn tag() {$/;"	f	module:tests
tag_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn tag_bits() {$/;"	f	module:tests
tag_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! tag_bits ($/;"	M
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_cl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn tag_cl<'a, 'b>(rec: &'a [u8]) -> Box<Fn(&'b [u8]) -> IResult<&'b [u8], &'b [u8]> + 'a> {$/;"	f
tag_closure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn tag_closure() {$/;"	f	module:tests
tag_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! tag_no_case ($/;"	M
tag_no_case_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! tag_no_case_s ($/;"	M
tag_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  macro_rules! tag_s ($/;"	M	module:tests
tag_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! tag_s ($/;"	M
tag_str_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_error() {$/;"	f	module:test
tag_str_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_incomplete() {$/;"	f	module:test
tag_str_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_succeed() {$/;"	f	module:test
tag_stuff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    fn tag_stuff(mut self: Parser<'a>, input: &'a str, something: &'a str) -> (Parser<'a>, ::IRe/;"	P	implementation:tests::Parser
tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn take<Q: ?Sized>(&mut self, value: &Q) -> Option<T>$/;"	f
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! take($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take ($/;"	M
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  macro_rules! take($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! take ($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! take ($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:str
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:u8
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self;$/;"	P	interface:InputTake
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:CompleteByteSlice
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:CompleteStr
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:Input
take_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn take_bits() {$/;"	f	module:tests
take_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! take_bits ($/;"	M
take_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  macro_rules! take_s ($/;"	M	module:tests
take_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_s ($/;"	M
take_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_s_incomplete() {$/;"	f	module:test
take_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_s_succeed() {$/;"	f	module:test
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:str
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:u8
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self);$/;"	P	interface:InputTake
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:CompleteByteSlice
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:CompleteStr
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:Input
take_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_str ($/;"	M
take_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_till ($/;"	M
take_till1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_till1 ($/;"	M
take_till1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_till1_s ($/;"	M
take_till_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_till_s ($/;"	M
take_till_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_till_s_succeed() {$/;"	f	module:test
take_until	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until ($/;"	M
take_until1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until1 ($/;"	M
take_until_and_consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_and_consume ($/;"	M
take_until_and_consume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_and_consume1 ($/;"	M
take_until_and_consume_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_until_and_consume_s ($/;"	M
take_until_and_consume_s_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_error() {$/;"	f	module:test
take_until_and_consume_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_incomplete() {$/;"	f	module:test
take_until_and_consume_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_succeed() {$/;"	f	module:test
take_until_either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either ($/;"	M
take_until_either1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either1 ($/;"	M
take_until_either_and_consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either_and_consume ($/;"	M
take_until_either_and_consume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either_and_consume1 ($/;"	M
take_until_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_until_s ($/;"	M
take_until_s_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_error() {$/;"	f	module:test
take_until_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_incomplete() {$/;"	f	module:test
take_until_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_succeed() {$/;"	f	module:test
take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while ($/;"	M
take_while1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while1 ($/;"	M
take_while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s() {$/;"	f	module:test
take_while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_while1_s ($/;"	M
take_while1_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s_fail() {$/;"	f	module:test
take_while1_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s_succeed() {$/;"	f	module:test
take_while_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while_m_n ($/;"	M
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
take_while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s() {$/;"	f	module:test
take_while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_while_s ($/;"	M
take_while_s_succeed_none	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s_succeed_none() {$/;"	f	module:test
take_while_s_succeed_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s_succeed_some() {$/;"	f	module:test
taken	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    taken: usize,$/;"	m	struct:Iterator
taken	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    taken: usize,$/;"	m	struct:IteratorMut
tap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! tap ($/;"	M
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tee;$/;"	n
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn terminated() {$/;"	f	module:tests
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! terminated($/;"	M
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn terminated() {$/;"	f	module:tests
terminated_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! terminated_sep ($/;"	M
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn test(&mut self, parameter: &T) {$/;"	P	interface:Routine
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_a_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_a_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_not_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_not_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::tag_str_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_till_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while1_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while1_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while_s_succeed_none
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while_s_succeed_some
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    fn test(&self) -> bool;$/;"	P	interface:Mask
test_apply_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_apply_m() {$/;"	f	module:tests
test_benchmark_id_make_directory_name_unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_benchmark_id_make_directory_name_unique() {$/;"	f	module:test
test_cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_cmp<T>($/;"	f
test_cmp_partial_ord_int	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! test_cmp_partial_ord_int {$/;"	M
test_cmp_partial_ord_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! test_cmp_partial_ord_mask {$/;"	M
test_if	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! test_if {$/;"	M
test_le	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_le<T>($/;"	f
test_lt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_lt<T>($/;"	f
test_make_filename_safe_replaces_characters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_replaces_characters() {$/;"	f	module:test
test_make_filename_safe_respects_character_boundaries	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_respects_character_boundaries() {$/;"	f	module:test
test_make_filename_safe_truncates_long_strings	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_truncates_long_strings() {$/;"	f	module:test
test_method_call_abc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_abc() {$/;"	f	module:tests
test_method_call_bcd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_bcd() {$/;"	f	module:tests
test_method_call_chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_chain() {$/;"	f	module:tests
test_method_call_hij	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_hij() {$/;"	f	module:tests
test_method_call_ijk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_ijk() {$/;"	f	module:tests
test_method_call_peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_peek() {$/;"	f	module:tests
test_method_simple_call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_simple_call() {$/;"	f	module:tests
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    test_mode: bool,$/;"	m	struct:Criterion
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub test_mode: bool,$/;"	m	struct:ReportContext
test_offset_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn test_offset_str() {$/;"	f	module:tests
test_offset_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn test_offset_u8() {$/;"	f	module:tests
test_reduction_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/min_max.rs	/^macro_rules! test_reduction_float_min_max {$/;"	M
test_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/select.rs	/^macro_rules! test_select {$/;"	M
test_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! test_shuffle1_dyn {$/;"	M
test_shuffle1_dyn_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! test_shuffle1_dyn_mask {$/;"	M
testing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod testing;$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/convert.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/operation.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/convert.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/decomposition/acceleration.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/acceleration.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/convert.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/convert.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/operation.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^mod tests {$/;"	n
tests	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^mod tests {$/;"	n
text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn text_overwrite(&self) {$/;"	P	implementation:CliReport
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput(mut self, throughput: Throughput) -> Benchmark {$/;"	P	implementation:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput<F>(mut self, throughput: F) -> ParameterizedBenchmark<T>$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Box<Fn(&T) -> Throughput>>,$/;"	m	struct:ParameterizedBenchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Throughput>,$/;"	m	struct:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn throughput(throughput: &Throughput, ns: f64) -> String {$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    throughput: Option<ConfidenceInterval>,$/;"	m	struct:Context
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:BenchmarkId
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:MeasurementData
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:Context
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:SummaryContext
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:Context
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:SummaryContext
till_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn till_s(c: char) -> bool {$/;"	f	function:test::take_till_s_succeed
time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn time(ns: f64) -> String {$/;"	f
time_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn time_interval(est: &Estimate) -> ConfidenceInterval {$/;"	f	method:Html::measurement_complete
title	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    title: String,$/;"	m	struct:Context
to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub to: PathBuf,$/;"	m	struct:CopyError
to_camelcase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn to_camelcase(dp: &DayPart) -> syn::Ident {$/;"	f
to_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn to_complete(&self, defaults: &BenchmarkConfig) -> BenchmarkConfig {$/;"	P	implementation:PartialBenchmarkConfig
to_components	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn to_components(id: &BenchmarkId) -> Vec<&str> {$/;"	f	method:Html::final_summary
to_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^    fn to_gnuplot(self) -> Scale {$/;"	P	implementation:AxisScale
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:CompleteByteSlice
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:str
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:u8
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String;$/;"	P	interface:HexDisplay
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:CompleteByteSlice
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:str
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:u8
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String;$/;"	P	interface:HexDisplay
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64 {$/;"	P	implementation:Duration
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64;$/;"	P	interface:DurationExt
to_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn to_s(i: Vec<u8>) -> String {$/;"	f	module:tests
to_snakecase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn to_snakecase(dp: &DayPart) -> syn::Ident {$/;"	f
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
trailing_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn trailing_zeros(self) -> usize {$/;"	P	implementation:BitMask
traits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod traits;$/;"	n
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/operation.rs	/^    fn transpose(&self) -> Self {$/;"	P	implementation:Banded
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/operation.rs	/^    fn transpose() {$/;"	f	module:tests
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn transpose(&self) -> Self {$/;"	P	implementation:Compressed
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/operation.rs	/^    fn transpose() {$/;"	f	module:tests
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^    fn transpose(&self) -> Self {$/;"	P	implementation:Conventional
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/operation/mod.rs	/^    fn transpose() {$/;"	f	module:tests
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/operation.rs	/^    fn transpose(&self) -> Self {$/;"	P	implementation:Diagonal
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/operation.rs	/^    fn transpose(&self) -> Self {$/;"	P	implementation:Packed
transpose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/operation.rs	/^    fn transpose(&self) -> Self;$/;"	P	interface:Transpose
transpose_lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/operation.rs	/^    fn transpose_lower() {$/;"	f	module:tests
transpose_upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/operation.rs	/^    fn transpose_upper() {$/;"	f	module:tests
tree_fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
try_else_return	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! try_else_return {$/;"	M
try_gen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn try_gen(input: ArcStr) -> Result<Self, Box<dyn Error>> where Self: Sized {$/;"	P	interface:Runner
try_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_left {$/;"	M
try_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! try_parse ($/;"	M
try_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_right {$/;"	M
try_run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn try_run(&self) -> Result<Box<dyn Display>, Box<dyn Error>> {$/;"	P	interface:Runner
tst	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn tst(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f	function:tests::infinite_many
tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! tuple ($/;"	M
tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn tuple() {$/;"	f	module:tests
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! tuple_parser ($/;"	M
tuple_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! tuple_sep ($/;"	M
tuple_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn tuple_test() {$/;"	f	module:tests
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
types	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod types;$/;"	n
types	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod types;$/;"	n
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u128 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u128(/;"	M
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for u128 {$/;"	c
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u128 {$/;"	c
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u128 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u16 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u16($i/;"	M
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u16 {$/;"	c
u24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn u24_tests() {$/;"	f	module:tests
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u32 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u32($i/;"	M
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u32 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u64 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u64($i/;"	M
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u64 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u64 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u64 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsBytes for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsChar for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl Offset for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b [u8]> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b str> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b [u8]> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b str> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindToken<&'a u8> for &'b [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, R: FromStr> ParseTo<R> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsBytes for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsChar for &'a u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<char> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<u8> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputIter for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTake for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> Offset for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl HexDisplay for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u8 {$/;"	c
unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn union<'a, 'new>($/;"	f	function:assert_covariance
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn union<'a>(&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S> {$/;"	f
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod unique_impl;$/;"	n
unlikely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn unlikely(b: bool) -> bool {$/;"	f
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    upper: String,$/;"	m	struct:ConfidenceInterval
upper_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    upper_bound: f64,$/;"	m	struct:ConfidenceInterval
upper_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod upper_hex;$/;"	n
url	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    url: String,$/;"	m	struct:Plot
used	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^impl Position for (usize, usize) {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/position.rs	/^impl Position for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^impl Size for (usize, usize) {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/size.rs	/^impl Size for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputLength for (&'a [u8], usize) {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for usize {$/;"	c
utf8_indexing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn utf8_indexing() {$/;"	f	module:test
util	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod util;$/;"	n
utils	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod utils;$/;"	n
utils	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing.rs	/^crate mod utils;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v128;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v16;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v256;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v32;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v512;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v64;$/;"	n
vPtr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod vPtr;$/;"	n
vPtr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod vPtr;$/;"	n
vSize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod vSize;$/;"	n
vSize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod vSize;$/;"	n
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn validate(&self) {$/;"	P	implementation:Banded
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn validate(&self) {$/;"	P	implementation:Compressed
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn validate(&self) {$/;"	P	implementation:Diagonal
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^    fn validate(&self);$/;"	P	interface:Validate
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/mod.rs	/^macro_rules! validate($/;"	M
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    fn validate(&self) {$/;"	P	implementation:Packed
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn validate(value: u8) -> Result<ValidValue, ParseError> {$/;"	f	function:tests::map_res_err
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    value: Option<&'a str>,$/;"	m	struct:CsvRow
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! value ($/;"	M
value_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub value_str: Option<String>,$/;"	m	struct:BenchmarkId
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    values: Vec<T>,$/;"	m	struct:ParameterizedBenchmark
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values(&self) -> Values<K, V> {$/;"	f
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    pub values: Vec<T>,$/;"	m	struct:Banded
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub values: Vec<T>,$/;"	m	struct:Compressed
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub values: Vec<T>,$/;"	m	struct:Conventional
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub values: Vec<T>,$/;"	m	struct:Diagonal
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    pub values: Vec<T>,$/;"	m	struct:Packed
values_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_key<'a, 'new>(v: Values<'a, &'static str, u8>) -> Values<'a, &'new str, u8> {$/;"	f	function:assert_covariance
values_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut<K, V> {$/;"	f
values_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_val<'a, 'new>(v: Values<'a, u8, &'static str>) -> Values<'a, u8, &'new str> {$/;"	f	function:assert_covariance
variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub variant: Variant,$/;"	m	struct:Compressed
variant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    pub variant: Variant,$/;"	m	struct:Packed
vector_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_arithmetic;$/;"	n
vector_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_bitwise;$/;"	n
vector_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_float_min_max;$/;"	n
vector_int_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_int_min_max;$/;"	n
vector_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_mask_bitwise;$/;"	n
vector_neg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_neg;$/;"	n
vector_rotates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_rotates;$/;"	n
vector_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_shifts;$/;"	n
verbose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub verbose: bool,$/;"	m	struct:CliReport
verbose_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod verbose_errors;$/;"	n
verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn verify() {$/;"	f	module:tests
verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! verify ($/;"	M
vertical	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod vertical;$/;"	n
violin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn violin($/;"	f
violin_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    violin_plot: Option<String>,$/;"	m	struct:SummaryContext
visit_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
w	/home/atraii/Downloads/tmp/advent2018-rs/src/utils.rs	/^    pub fn w() -> Self {$/;"	P	implementation:Pt
wait_on_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn wait_on_gnuplot(children: Vec<Child>) {$/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	P	implementation:Command
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up(&mut self, how_long_ns: Duration) -> (u64, u64) {$/;"	P	implementation:Program
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up(&mut self, m: &mut Option<Program>, how_long: Duration, parameter: &T)$/;"	P	interface:Routine
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub warm_up_time: Duration,$/;"	m	struct:BenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    warm_up_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn warm_up_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, _id: &BenchmarkId, _context: &ReportContext, _warmup_ns: f64) {}$/;"	P	interface:Report
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, _: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:CliReport
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, context: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:Reports
while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while1_s(c: char) -> bool {$/;"	f	function:test::take_while1_s_fail
while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while1_s(c: char) -> bool {$/;"	f	function:test::take_while1_s_succeed
while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while_s(c: char) -> bool {$/;"	f	function:test::take_while_s_succeed_none
while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while_s(c: char) -> bool {$/;"	f	function:test::take_while_s_succeed_some
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
whitespace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod whitespace;$/;"	n
width	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    width: usize,$/;"	m	struct:LandClaim
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn with_capacity(capacity: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity(capacity: usize) -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    pub fn with_capacity<S: Size>(size: S, variant: Variant, capacity: usize) -> Self {$/;"	P	implementation:Compressed
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {$/;"	f
with_filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_filter<S: Into<String>>(mut self, filter: S) -> Criterion {$/;"	P	implementation:Criterion
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, f: F) -> ParameterizedBenchmark<T>$/;"	f
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, mut f: F) -> Benchmark$/;"	P	implementation:Benchmark
with_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub(crate) fn with_functions($/;"	f
with_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn with_generator(&mut self, generator: Generator) {$/;"	P	implementation:Runner
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_hasher(hasher: S) -> HashSet<T, S> {$/;"	f
with_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    pub fn with_key(key: u64) -> FnvHasher {$/;"	P	implementation:FnvHasher
with_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod with_position;$/;"	n
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S, F>(mut self, id: S, program: F) -> ParameterizedBenchmark<T>$/;"	f
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S>(mut self, id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
with_solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn with_solver(&mut self, solver: Solver) {$/;"	P	implementation:Runner
with_uninitialized	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    pub unsafe fn with_uninitialized<S: Size>(size: S) -> Self {$/;"	P	implementation:Conventional
with_uninitialized	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    pub unsafe fn with_uninitialized<S: Size>(size: S) -> Self {$/;"	P	implementation:Diagonal
with_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
without_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn without_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn work2(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn work2(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
wrap_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! wrap_sep ($/;"	M
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/fnv-1.0.6/lib.rs	/^    fn write(&mut self, bytes: &[u8]) {$/;"	P	implementation:FnvHasher
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write(&mut self, mut bytes: &[u8]) {$/;"	P	implementation:FxHasher
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn write(&self, val: T) {$/;"	P	implementation:Bucket
write_color	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn write_color(v: &mut Vec<u8>, color: u8) {$/;"	f
write_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_data(&mut self, id: &BenchmarkId, data: &MeasurementData) -> Result<()> {$/;"	P	implementation:CsvReportWriter
write_file	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_file($/;"	P	implementation:FileCsvReport
write_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn write_infos(map: &InnerMap, year: u32) -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
write_to_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice.rs	/^mod write_to_slice;$/;"	n
write_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u16(&mut self, i: u16) {$/;"	P	implementation:FxHasher
write_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u32(&mut self, i: u32) {$/;"	P	implementation:FxHasher
write_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u64(&mut self, i: u64) {$/;"	P	implementation:FxHasher
write_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u8(&mut self, i: u8) {$/;"	P	implementation:FxHasher
write_usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_usize(&mut self, i: usize) {$/;"	P	implementation:FxHasher
writer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    writer: Writer<W>,$/;"	m	struct:CsvReportWriter
ws	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! ws ($/;"	M
x	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    x: usize,$/;"	m	struct:LandClaim
x86_intr_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_intr_impl {$/;"	M
x86_m32x4_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m32x4_impl {$/;"	M
x86_m32x4_sse_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse.rs	/^macro_rules! x86_m32x4_sse_impl {$/;"	M
x86_m32x8_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m32x8_avx_impl {$/;"	M
x86_m32x8_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m32x8_impl {$/;"	M
x86_m64x2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m64x2_impl {$/;"	M
x86_m64x2_sse2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse2.rs	/^macro_rules! x86_m64x2_sse2_impl {$/;"	M
x86_m64x4_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m64x4_avx_impl {$/;"	M
x86_m64x4_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m64x4_impl {$/;"	M
x86_m8x16_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x16_impl {$/;"	M
x86_m8x16_sse2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse2.rs	/^macro_rules! x86_m8x16_sse2_impl {$/;"	M
x86_m8x32_avx2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx2.rs	/^macro_rules! x86_m8x32_avx2_impl {$/;"	M
x86_m8x32_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m8x32_avx_impl {$/;"	M
x86_m8x32_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x32_impl {$/;"	M
x86_m8x8_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x8_impl {$/;"	M
x86_m8x8_mmx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/mmx.rs	/^macro_rules! x86_m8x8_mmx_impl {$/;"	M
y	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    y: usize,$/;"	m	struct:LandClaim
year	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    year: u32,$/;"	m	struct:LibInfos
yellow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn yellow(&self, s: String) -> String {$/;"	P	implementation:CliReport
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/element.rs	/^    fn zero() -> Self;$/;"	P	interface:Element
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/banded/mod.rs	/^    fn zero<S: Size>(size: S) -> Self {$/;"	P	implementation:Banded
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/compressed/mod.rs	/^    fn zero<S: Size>(size: S) -> Self {$/;"	P	implementation:Compressed
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/conventional/mod.rs	/^    fn zero<S: Size>(size: S) -> Self {$/;"	P	implementation:Conventional
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/diagonal/mod.rs	/^    fn zero<S: Size>(size: S) -> Self {$/;"	P	implementation:Diagonal
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/format/packed/mod.rs	/^    fn zero<S: Size>(size: S) -> Self {$/;"	P	implementation:Packed
zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/matrix-0.21.12/src/lib.rs	/^    fn zero<S: Size>(S) -> Self;$/;"	P	interface:Matrix
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
ziptuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod ziptuple;$/;"	n
