!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
Abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^crate trait Abs {$/;"	i
AccessError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct AccessError {$/;"	s
Action	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^enum Action {$/;"	g
All	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^crate trait All: crate::marker::Sized {$/;"	i
Alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Alpha,$/;"	e	enum:ErrorKind
AlphaNumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  AlphaNumeric,$/;"	e	enum:ErrorKind
AlreadyConsumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    AlreadyConsumed,$/;"	e	enum:MapError
Alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Alt,$/;"	e	enum:ErrorKind
Any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^crate trait Any: crate::marker::Sized {$/;"	i
AocMeta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^impl AocMeta {$/;"	c
AocMeta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^struct AocMeta {$/;"	s
Append	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^trait Append<T> {$/;"	i
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl AsRef<[u8]> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^impl AsRef<str> for ArcStr {$/;"	c
ArcStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub struct ArcStr(Arc<str>);$/;"	s
AsBytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AsBytes {$/;"	i
AsChar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AsChar {$/;"	i
Asleep	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    Asleep,$/;"	e	enum:Action
AtEof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait AtEof {$/;"	i
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum AxisScale {$/;"	g
AxisScale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^impl AxisScale {$/;"	c
B	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  struct B {$/;"	s	module:tests
B	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<L, R, A, B> ParallelExtend<Either<L, R>> for (A, B)$/;"	c
BTreeMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, K, V> ParallelExtend<(&'a K, &'a V)> for BTreeMap<K, V>$/;"	c
BTreeMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<K, V> ParallelExtend<(K, V)> for BTreeMap<K, V>$/;"	c
BTreeMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<K, V> FromParallelIterator<(K, V)> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T> ParallelExtend<&'a T> for BTreeSet<T>$/;"	c
BTreeSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<T> ParallelExtend<T> for BTreeSet<T>$/;"	c
BTreeSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<V> FromParallelIterator<V> for BTreeSet<V>$/;"	c
Baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Baseline {$/;"	g
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<B, F, I> Iterator for Batching<I, F>$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Batching<I, F> where I: fmt::Debug {$/;"	c
Batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Batching<I, F> {$/;"	s
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Bencher {$/;"	c
Bencher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Bencher {$/;"	s
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl BenchmarkDefinition for Benchmark {$/;"	c
Benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct Benchmark {$/;"	s
BenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct BenchmarkConfig {$/;"	s
BenchmarkDefinition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub trait BenchmarkDefinition: Sized {$/;"	i
BenchmarkId	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct BenchmarkId {$/;"	s
Big	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  Big,$/;"	e	enum:Endianness
BinaryHeap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^impl<T: Ord + Send> IntoParallelIterator for BinaryHeap<T> {$/;"	c
BinaryHeap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T> ParallelExtend<&'a T> for BinaryHeap<T>$/;"	c
BinaryHeap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<T> ParallelExtend<T> for BinaryHeap<T>$/;"	c
BinaryHeap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<T> FromParallelIterator<T> for BinaryHeap<T>$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl IntoIterator for BitMask {$/;"	c
BitMask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMask(pub BitMaskWord);$/;"	s
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^impl Iterator for BitMaskIter {$/;"	c
BitMaskIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^pub struct BitMaskIter(BitMask);$/;"	s
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub type BitMaskWord = GroupWord;$/;"	t
BitMaskWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub type BitMaskWord = u16;$/;"	t
Both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Both(A, B),$/;"	e	enum:EitherOrBoth
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for Bucket<T> {$/;"	c
Bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct Bucket<T> {$/;"	s
Buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;$/;"	t	interface:TupleCollect
Builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^        struct Builder {$/;"	s	method:AocMeta::build
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Bytes(u32),$/;"	e	enum:Throughput
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Bytes,$/;"	e	enum:ValueType
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for Bytes<'ch> {$/;"	c
Bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct Bytes<'ch> {$/;"	s
BytesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> UnindexedProducer for BytesProducer<'ch> {$/;"	c
BytesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct BytesProducer<'ch> {$/;"	s
C	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  struct C {$/;"	s	module:tests
CHARS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^static CHARS: &'static [u8] = b"0123456789abcdef";$/;"	v
COMPARISON_COLORS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^static COMPARISON_COLORS: [Color; NUM_COLORS] = [$/;"	v
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^        impl<'a, T, CB> ProducerCallback<&'a T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^        impl<I, CB> ProducerCallback<I> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^        impl<T, F, CB> ProducerCallback<T> for Callback<CB, F>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^        struct Callback<CB, F> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB, T>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^        struct Callback<CB, T> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^        impl<T, F, R, CB> ProducerCallback<T> for Callback<CB, F>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^        struct Callback<CB, F> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^        impl<T, INIT, U, F, R, CB> ProducerCallback<T> for Callback<CB, INIT, F>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^        impl<T, U, F, R, CB> ProducerCallback<T> for Callback<CB, U, F>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^        struct Callback<CB, INIT, F> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^        struct Callback<CB, U, F> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    impl<C, I> ProducerCallback<I> for Callback<C>$/;"	c	function:bridge
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    struct Callback<C> {$/;"	s	function:bridge
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^        impl<T, CB> ProducerCallback<T> for Callback<CB>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^        struct Callback<CB> {$/;"	s	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^        impl<T, F, CB> ProducerCallback<T> for Callback<CB, F>$/;"	c	function:with_producer
Callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^        struct Callback<CB, F> {$/;"	s	function:with_producer
CallbackA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^        impl<CB, B> ProducerCallback<B::Item> for CallbackA<CB, B>$/;"	c	function:with_producer
CallbackA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^        struct CallbackA<CB, B> {$/;"	s	function:with_producer
CallbackA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^        impl<CB, ITEM, B> ProducerCallback<ITEM> for CallbackA<CB, B>$/;"	c	function:with_producer
CallbackA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^        struct CallbackA<CB, B> {$/;"	s	function:with_producer
CallbackB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^        impl<CB, A> ProducerCallback<A::Item> for CallbackB<CB, A>$/;"	c	function:with_producer
CallbackB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^        struct CallbackB<CB, A> {$/;"	s	function:with_producer
CallbackB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^        impl<CB, A, ITEM> ProducerCallback<ITEM> for CallbackB<CB, A>$/;"	c	function:with_producer
CallbackB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^        struct CallbackB<CB, A> {$/;"	s	function:with_producer
CallbackI	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^        impl<CB, J> ProducerCallback<J::Item> for CallbackI<CB, J>$/;"	c	function:with_producer
CallbackI	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^        struct CallbackI<CB, J> {$/;"	s	function:with_producer
CallbackJ	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^        impl<CB, I> ProducerCallback<I::Item> for CallbackJ<CB, I>$/;"	c	function:with_producer
CallbackJ	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^        struct CallbackJ<CB, I> {$/;"	s	function:with_producer
Cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^pub trait Cast<T>: crate::marker::Sized {$/;"	i
Chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> IndexedParallelIterator for Chain<A, B>$/;"	c
Chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> ParallelIterator for Chain<A, B>$/;"	c
Chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^pub struct Chain<A, B>$/;"	s
ChainProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> ChainProducer<A, B>$/;"	c
ChainProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> Producer for ChainProducer<A, B>$/;"	c
ChainProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^struct ChainProducer<A, B>$/;"	s
ChainSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> ChainSeq<A, B> {$/;"	c
ChainSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> DoubleEndedIterator for ChainSeq<A, B>$/;"	c
ChainSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> ExactSizeIterator for ChainSeq<A, B>$/;"	c
ChainSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^impl<A, B> Iterator for ChainSeq<A, B>$/;"	c
ChainSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^struct ChainSeq<A, B> {$/;"	s
Char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Char,$/;"	e	enum:ErrorKind
CharIndices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for CharIndices<'ch> {$/;"	c
CharIndices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct CharIndices<'ch> {$/;"	s
CharIndicesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> UnindexedProducer for CharIndicesProducer<'ch> {$/;"	c
CharIndicesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct CharIndicesProducer<'ch> {$/;"	s
Chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for Chars<'ch> {$/;"	c
Chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct Chars<'ch> {$/;"	s
CharsProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> UnindexedProducer for CharsProducer<'ch> {$/;"	c
CharsProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct CharsProducer<'ch> {$/;"	s
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Drop for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunk<'a, I>$/;"	c
Chunk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunk<'a, I: 'a>$/;"	s
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A> KeyFunction<A> for ChunkIndex {$/;"	c
ChunkIndex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct ChunkIndex {$/;"	s
ChunkProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<P> Producer for ChunkProducer<P>$/;"	c
ChunkProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^struct ChunkProducer<P>$/;"	s
ChunkSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<P> DoubleEndedIterator for ChunkSeq<P>$/;"	c
ChunkSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<P> ExactSizeIterator for ChunkSeq<P>$/;"	c
ChunkSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<P> Iterator for ChunkSeq<P>$/;"	c
ChunkSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^struct ChunkSeq<P> {$/;"	s
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> Iterator for Chunks<'a, I>$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Chunks<'a, I: 'a>$/;"	s
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<I> IndexedParallelIterator for Chunks<I>$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^impl<I> ParallelIterator for Chunks<I>$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^pub struct Chunks<I>$/;"	s
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> IndexedParallelIterator for Chunks<'data, T> {$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> ParallelIterator for Chunks<'data, T> {$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync> Clone for Chunks<'data, T> {$/;"	c
Chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct Chunks<'data, T: 'data + Sync> {$/;"	s
ChunksMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> IndexedParallelIterator for ChunksMut<'data, T> {$/;"	c
ChunksMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> ParallelIterator for ChunksMut<'data, T> {$/;"	c
ChunksMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct ChunksMut<'data, T: 'data + Send> {$/;"	s
ChunksMutProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: 'data + Send> Producer for ChunksMutProducer<'data, T> {$/;"	c
ChunksMutProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^struct ChunksMutProducer<'data, T: 'data + Send> {$/;"	s
ChunksProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: 'data + Sync> Producer for ChunksProducer<'data, T> {$/;"	c
ChunksProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^struct ChunksProducer<'data, T: 'data + Sync> {$/;"	s
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for CliReport {$/;"	c
CliReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct CliReport {$/;"	s
Cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, I> IndexedParallelIterator for Cloned<I>$/;"	c
Cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, I> ParallelIterator for Cloned<I>$/;"	c
Cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^pub struct Cloned<I: ParallelIterator> {$/;"	s
ClonedConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, C> Consumer<&'a T> for ClonedConsumer<C>$/;"	c
ClonedConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, C> UnindexedConsumer<&'a T> for ClonedConsumer<C>$/;"	c
ClonedConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<C> ClonedConsumer<C> {$/;"	c
ClonedConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^struct ClonedConsumer<C> {$/;"	s
ClonedFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, F> Folder<&'a T> for ClonedFolder<F>$/;"	c
ClonedFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^struct ClonedFolder<F> {$/;"	s
ClonedProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^impl<'a, T, P> Producer for ClonedProducer<P>$/;"	c
ClonedProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^struct ClonedProducer<P> {$/;"	s
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> fmt::Debug for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone, F: Clone> Clone for Coalesce<I, F>$/;"	c
Coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Coalesce<I, F>$/;"	s
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> CoalesceCore<I>$/;"	c
CoalesceCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct CoalesceCore<I>$/;"	s
Code	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  Code(I, ErrorKind<E>),$/;"	e	enum:Context
Code	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  Code(I, ErrorKind<E>),$/;"	e	enum:Context
Collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^impl<'c, T: Send + 'c> Collect<'c, T> {$/;"	c
Collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^struct Collect<'c, T: Send + 'c> {$/;"	s
CollectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^impl<'c, T: Send + 'c> CollectConsumer<'c, T> {$/;"	c
CollectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^impl<'c, T: Send + 'c> Consumer<T> for CollectConsumer<'c, T> {$/;"	c
CollectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^impl<'c, T: Send + 'c> UnindexedConsumer<T> for CollectConsumer<'c, T> {$/;"	c
CollectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^pub struct CollectConsumer<'c, T: Send + 'c> {$/;"	s
CollectFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^impl<'c, T: Send + 'c> Folder<T> for CollectFolder<'c, T> {$/;"	c
CollectFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^pub struct CollectFolder<'c, T: Send + 'c> {$/;"	s
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination = Tuple1Combination<I>;$/;"	t	implementation:Item
Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Combination: From<I> + Iterator<Item = Self>;$/;"	t	interface:HasCombination
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Iterator for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> fmt::Debug for Combinations<I>$/;"	c
Combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub struct Combinations<I: Iterator> {$/;"	s
Command	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Routine<()> for Command {$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl<F, T> Routine<T> for CommandFactory<F, T>$/;"	c
CommandFactory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct CommandFactory<F, T>$/;"	s
Compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Compare,$/;"	e	enum:Baseline
Compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Compare<T> {$/;"	i
CompareResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub enum CompareResult {$/;"	g
Comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Comparison {$/;"	s
ComparisonData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct ComparisonData {$/;"	s
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^enum ComparisonResult {$/;"	g
ComparisonResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^enum ComparisonResult {$/;"	g
Complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Complete,$/;"	e	enum:ErrorKind
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b str> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b str> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindToken<&'a u8> for CompleteByteSlice<'b> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> From<&'b &'a [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr> ParseTo<R> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsBytes for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AtEof for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Deref for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<char> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<u8> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> From<&'a [u8]> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputIter for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputLength for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputTake for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Offset for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<Range<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFrom<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFull> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeTo<usize>> for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> super::util::HexDisplay for CompleteByteSlice<'a> {$/;"	c
CompleteByteSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct CompleteByteSlice<'a>(pub &'a [u8]);$/;"	s
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> Compare<&'b str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindSubstring<&'b str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> FindToken<&'a u8> for CompleteStr<'b> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, 'b> From<&'b &'a str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr> ParseTo<R> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsBytes for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AsRef<str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> AtEof for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Deref for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Display for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> ExtendInto for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<char> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> FindToken<u8> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> From<&'a str> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputIter for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputLength for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> InputTake for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Offset for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<Range<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFrom<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeFull> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a> Slice<RangeTo<usize>> for CompleteStr<'a> {$/;"	c
CompleteStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct CompleteStr<'a>(pub &'a str);$/;"	s
CondReduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  CondReduce,$/;"	e	enum:ErrorKind
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct ConfidenceInterval {$/;"	s
ConfidenceInterval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct ConfidenceInterval {$/;"	s
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^impl<I, J> Clone for ConsTuples<I, J>$/;"	c
ConsTuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub struct ConsTuples<I, J>$/;"	s
Consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait Consumer<Item>: Send + Sized {$/;"	i
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Context {$/;"	s
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^impl<I, E> Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^impl<I, F, E: From<F>> Convert<Context<I, F>> for Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^pub enum Context<I, E = u32> {$/;"	g
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^impl<I, E> Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^impl<I, F, E: From<F>> Convert<Context<I, F>> for Context<I, E> {$/;"	c
Context	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^pub enum Context<I, E = u32> {$/;"	g
Continue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Continue(T),$/;"	e	enum:FoldWhile
Convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub trait Convert<T> {$/;"	i
CopyError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub struct CopyError {$/;"	s
CopyOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^impl<T> Drop for CopyOnDrop<T> {$/;"	c
CopyOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^struct CopyOnDrop<T> {$/;"	s
CopyOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^impl<T> Drop for CopyOnDrop<T> {$/;"	c
CopyOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^struct CopyOnDrop<T> {$/;"	s
Cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^crate trait Cos {$/;"	i
CosPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^crate trait CosPi {$/;"	i
Count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Count,$/;"	e	enum:ErrorKind
Cow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<'a, C: ?Sized, T> FromParallelIterator<T> for Cow<'a, C>$/;"	c
CrLf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  CrLf,$/;"	e	enum:ErrorKind
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for Criterion {$/;"	c
Criterion	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Criterion {$/;"	s
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl<W: Write> CsvReportWriter<W> {$/;"	c
CsvReportWriter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvReportWriter<W: Write> {$/;"	s
CsvRow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^struct CsvRow<'a> {$/;"	s
Custom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Custom(E),$/;"	e	enum:ErrorKind
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  impl From<u32> for CustomError {$/;"	c	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  pub struct CustomError(&'static str);$/;"	s	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  impl From<u32> for CustomError {$/;"	c	module:tests
CustomError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  struct CustomError;$/;"	s	module:tests
DEFAULT_FONT	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
Date	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^impl Display for Date {$/;"	c
Date	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^pub struct Date {$/;"	s
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Clone> Clone for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> fmt::Debug for Dedup<I>$/;"	c
Dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Dedup<I>$/;"	s
Descending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    Descending,$/;"	e	enum:MergesortResult
Diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub enum Diff<I, J>$/;"	g
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Difference<'a, T, S> {$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Difference<'a, T, S>$/;"	c
Difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Difference<'a, T: 'a, S: 'a> {$/;"	s
Digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Digit,$/;"	e	enum:ErrorKind
Disabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Disabled,$/;"	e	enum:plotting::Plotting
Distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Distributions = BTreeMap<Statistic, Distribution<f64>>;$/;"	t
Done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    Done(T),$/;"	e	enum:FoldWhile
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Drain<'a, K, V> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Drain<'a, K, V> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for Drain<'a, K, V>$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Drain<'a, K: 'a, V: 'a> {$/;"	s
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Drain<'a, K> {}$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Drain<'a, K> {$/;"	c
Drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Drain<'a, K: 'a> {$/;"	s
DropCounter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    impl<'a> Drop for DropCounter<'a> {$/;"	c	function:check_drops
DropCounter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    struct DropCounter<'a>(&'a AtomicUsize);$/;"	s	function:check_drops
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Dummy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^        struct Dummy {$/;"	s	method:Group::static_empty
Duration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl DurationExt for Duration {$/;"	c
DurationExt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^trait DurationExt {$/;"	i
E	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    type E = Either<I, I>;$/;"	t	function:check_either
E	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    type E = Either<Vec<i32>, HashSet<i32>>;$/;"	t	function:check_either_extend
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, A> Extend<A> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsMut<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R, Target> AsRef<Target> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> BufRead for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Deref for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DerefMut for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> DoubleEndedIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Error for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> ExactSizeIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> From<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Into<Result<R, L>> for Either<L, R> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Iterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Read for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> Write for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<L, R> fmt::Display for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(L, T), (R, T)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T, L, R> Either<(T, L), (T, R)> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^impl<T> Either<T, T> {$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^pub enum Either<L, R> {$/;"	g
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^impl<L, R, T> ParallelExtend<T> for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^impl<L, R> IndexedParallelIterator for Either<L, R>$/;"	c
Either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^impl<L, R> ParallelIterator for Either<L, R>$/;"	c
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^impl<A, B> EitherOrBoth<A, B> {$/;"	c
EitherOrBoth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^pub enum EitherOrBoth<A, B> {$/;"	g
Element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Element;$/;"	t	interface:Simd
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Elements(u32),$/;"	e	enum:Throughput
Elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Elements,$/;"	e	enum:ValueType
Empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^impl<T: Send> Clone for Empty<T> {$/;"	c
Empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^impl<T: Send> IndexedParallelIterator for Empty<T> {$/;"	c
Empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^impl<T: Send> ParallelIterator for Empty<T> {$/;"	c
Empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^impl<T: Send> fmt::Debug for Empty<T> {$/;"	c
Empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^pub struct Empty<T: Send> {$/;"	s
EmptyProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^impl<T: Send> Producer for EmptyProducer<T> {$/;"	c
EmptyProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^struct EmptyProducer<T: Send>(PhantomData<T>);$/;"	s
Enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        Enabled,$/;"	e	enum:plotting::Plotting
EncodeUtf16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for EncodeUtf16<'ch> {$/;"	c
EncodeUtf16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct EncodeUtf16<'ch> {$/;"	s
EncodeUtf16Producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> UnindexedProducer for EncodeUtf16Producer<'ch> {$/;"	c
EncodeUtf16Producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct EncodeUtf16Producer<'ch> {$/;"	s
End	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        End(i32, i32),$/;"	e	enum:sweepline::HorizontalSwipe
EndArea	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        EndArea(&'a LandClaim, i32),$/;"	e	enum:sweepline::SweepEvent
Endianness	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub enum Endianness {$/;"	g
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a + Debug, S: BuildHasher> Debug for Entry<'a, K, V, S> /;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Eq + Hash, V: Default, S: BuildHasher> Entry<'a, K, V, S> {$/;"	c
Entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub enum Entry<'a, K: 'a, V: 'a, S: 'a> {$/;"	g
Enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^impl<I> IndexedParallelIterator for Enumerate<I>$/;"	c
Enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^impl<I> ParallelIterator for Enumerate<I>$/;"	c
Enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^pub struct Enumerate<I: IndexedParallelIterator> {$/;"	s
EnumerateProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^impl<P> Producer for EnumerateProducer<P>$/;"	c
EnumerateProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^struct EnumerateProducer<P> {$/;"	s
Eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Eof,$/;"	e	enum:ErrorKind
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> Err<I, E> {$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> Error for Err<I, E>$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, E> fmt::Display for Err<I, E>$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl<I, F, E: From<F>> Convert<Err<I, F>> for Err<I, E> {$/;"	c
Err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub enum Err<I, E = u32> {$/;"	g
Err	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^        type Err = ParseError;$/;"	t	implementation:parsers::Event
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Error(Context<I, E>),$/;"	e	enum:Err
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Error,$/;"	e	enum:CompareResult
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Error = ();$/;"	t	implementation:private::Option
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Error = E;$/;"	t	implementation:private::Result
Error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Error;$/;"	t	interface:private::Try
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl<E> ErrorKind<E> {$/;"	c
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl<F, E: From<F>> Convert<ErrorKind<F>> for ErrorKind<E> {$/;"	c
ErrorKind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub enum ErrorKind<E = u32> {$/;"	g
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  impl From<u32> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  impl<'a> From<&'a str> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  pub struct ErrorStr(String);$/;"	s	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  impl From<u32> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  impl<'a> From<&'a str> for ErrorStr {$/;"	c	module:tests
ErrorStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  pub struct ErrorStr(String);$/;"	s	module:tests
Escaped	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Escaped,$/;"	e	enum:ErrorKind
EscapedTransform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  EscapedTransform,$/;"	e	enum:ErrorKind
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Estimate {$/;"	c
Estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^struct Estimate {$/;"	s
Estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub(crate) type Estimates = BTreeMap<Statistic, Estimate>;$/;"	t
Event	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    impl std::str::FromStr for Event {$/;"	c	module:parsers
Event	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^pub struct Event {$/;"	s
Exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^crate trait Exp {$/;"	i
ExprOpt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ExprOpt,$/;"	e	enum:ErrorKind
ExprRes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ExprRes,$/;"	e	enum:ErrorKind
ExtendInto	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait ExtendInto {$/;"	i
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = String;$/;"	t	implementation:char
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = String;$/;"	t	implementation:str
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender = Vec<u8>;$/;"	t	implementation:u8
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Extender: Extend<Self::Item>;$/;"	t	interface:ExtendInto
Extender	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Extender = String;$/;"	t	implementation:CompleteStr
F	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, A, K, F: ?Sized> KeyFunction<A> for F$/;"	c
FN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<FN: Sync + Send + Fn(char) -> bool> Pattern for FN {$/;"	c
Failure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Failure(Context<I, E>),$/;"	e	enum:Err
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl AddAssign for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl From<u8> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl Shl<usize> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  impl Shr<usize> for FakeUint {$/;"	c	module:tests
FakeUint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  struct FakeUint(u32);$/;"	s	module:tests
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^impl Report for FileCsvReport {$/;"	c
FileCsvReport	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^pub struct FileCsvReport;$/;"	s
Filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<I, P> ParallelIterator for Filter<I, P>$/;"	c
Filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<I: ParallelIterator + Debug, P> Debug for Filter<I, P> {$/;"	c
Filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^pub struct Filter<I: ParallelIterator, P> {$/;"	s
FilterConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<'p, C, P> FilterConsumer<'p, C, P> {$/;"	c
FilterConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<'p, T, C, P: 'p> Consumer<T> for FilterConsumer<'p, C, P>$/;"	c
FilterConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<'p, T, C, P: 'p> UnindexedConsumer<T> for FilterConsumer<'p, C, P>$/;"	c
FilterConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^struct FilterConsumer<'p, C, P: 'p> {$/;"	s
FilterFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^impl<'p, C, P, T> Folder<T> for FilterFolder<'p, C, P>$/;"	c
FilterFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^struct FilterFolder<'p, C, P: 'p> {$/;"	s
FilterMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<I, P, R> ParallelIterator for FilterMap<I, P>$/;"	c
FilterMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<I: ParallelIterator + Debug, P> Debug for FilterMap<I, P> {$/;"	c
FilterMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^pub struct FilterMap<I: ParallelIterator, P> {$/;"	s
FilterMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<'p, C, P: 'p> FilterMapConsumer<'p, C, P> {$/;"	c
FilterMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<'p, T, U, C, P> Consumer<T> for FilterMapConsumer<'p, C, P>$/;"	c
FilterMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<'p, T, U, C, P> UnindexedConsumer<T> for FilterMapConsumer<'p, C, P>$/;"	c
FilterMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^struct FilterMapConsumer<'p, C, P: 'p> {$/;"	s
FilterMapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^impl<'p, T, U, C, P> Folder<T> for FilterMapFolder<'p, C, P>$/;"	c
FilterMapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^struct FilterMapFolder<'p, C, P: 'p> {$/;"	s
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^impl<'p, P> FindConsumer<'p, P> {$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^impl<'p, T, P: 'p> Consumer<T> for FindConsumer<'p, P>$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^impl<'p, T, P: 'p> UnindexedConsumer<T> for FindConsumer<'p, P>$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^struct FindConsumer<'p, P: 'p> {$/;"	s
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^impl<'p, P> FindConsumer<'p, P> {$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^impl<'p, T, P> Consumer<T> for FindConsumer<'p, P>$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^impl<'p, T, P> UnindexedConsumer<T> for FindConsumer<'p, P>$/;"	c
FindConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^struct FindConsumer<'p, P: 'p> {$/;"	s
FindFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^impl<'p, T, P> Folder<T> for FindFolder<'p, T, P>$/;"	c
FindFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^struct FindFolder<'p, T, P: 'p> {$/;"	s
FindFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^impl<'p, P: 'p + Fn(&T) -> bool, T> Folder<T> for FindFolder<'p, T, P> {$/;"	c
FindFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^struct FindFolder<'p, T, P: 'p> {$/;"	s
FindReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^impl<T> Reducer<Option<T>> for FindReducer {$/;"	c
FindReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^struct FindReducer;$/;"	s
FindReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^impl<T> Reducer<Option<T>> for FindReducer {$/;"	c
FindReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^struct FindReducer {$/;"	s
FindSubstring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait FindSubstring<T> {$/;"	i
FindToken	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait FindToken<T> {$/;"	i
First	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    First(T),$/;"	e	enum:Position
FirstMismatch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    FirstMismatch(usize, PutBack<I>, PutBack<J>),$/;"	e	enum:Diff
Fissile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^pub trait Fissile<P>: Sized {$/;"	i
Fix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Fix,$/;"	e	enum:ErrorKind
FlatMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<I, F, PI> ParallelIterator for FlatMap<I, F>$/;"	c
FlatMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<I: ParallelIterator + Debug, F> Debug for FlatMap<I, F> {$/;"	c
FlatMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^pub struct FlatMap<I: ParallelIterator, F> {$/;"	s
FlatMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<'f, C, F> FlatMapConsumer<'f, C, F> {$/;"	c
FlatMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<'f, T, U, C, F> Consumer<T> for FlatMapConsumer<'f, C, F>$/;"	c
FlatMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<'f, T, U, C, F> UnindexedConsumer<T> for FlatMapConsumer<'f, C, F>$/;"	c
FlatMapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^struct FlatMapConsumer<'f, C, F: 'f> {$/;"	s
FlatMapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^impl<'f, T, U, C, F> Folder<T> for FlatMapFolder<'f, C, F, C::Result>$/;"	c
FlatMapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^struct FlatMapFolder<'f, C, F: 'f, R> {$/;"	s
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Flatten<I, J>$/;"	c
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Flatten<I, J> {$/;"	s
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^impl<I, PI> ParallelIterator for Flatten<I>$/;"	c
Flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^pub struct Flatten<I: ParallelIterator> {$/;"	s
Fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<I: ParallelIterator + Debug, ID, F> Debug for Fold<I, ID, F> {$/;"	c
Fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<U, I, ID, F> ParallelIterator for Fold<I, ID, F>$/;"	c
Fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^pub struct Fold<I, ID, F> {$/;"	s
FoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<'r, U, T, C, ID, F> Consumer<T> for FoldConsumer<'r, C, ID, F>$/;"	c
FoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<'r, U, T, C, ID, F> UnindexedConsumer<T> for FoldConsumer<'r, C, ID, F>$/;"	c
FoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^struct FoldConsumer<'c, C, ID: 'c, F: 'c> {$/;"	s
FoldFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<'r, C, ID, F, T> Folder<T> for FoldFolder<'r, C, ID, F>$/;"	c
FoldFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^struct FoldFolder<'r, C, ID, F: 'r> {$/;"	s
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T> FoldWhile<T> {$/;"	c
FoldWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub enum FoldWhile<T> {$/;"	g
FoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<I: ParallelIterator + Debug, U: Debug, F> Debug for FoldWith<I, U, F> {$/;"	c
FoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<U, I, F> ParallelIterator for FoldWith<I, U, F>$/;"	c
FoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^pub struct FoldWith<I, U, F> {$/;"	s
FoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<'r, U, T, C, F> Consumer<T> for FoldWithConsumer<'r, C, U, F>$/;"	c
FoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^impl<'r, U, T, C, F> UnindexedConsumer<T> for FoldWithConsumer<'r, C, U, F>$/;"	c
FoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^struct FoldWithConsumer<'c, C, U, F: 'c> {$/;"	s
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type Folder = ClonedFolder<C::Folder>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    type Folder = CollectFolder<'c, T>;$/;"	t	implementation:CollectConsumer
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    type Folder = FilterFolder<'p, C::Folder, P>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    type Folder = FilterMapFolder<'p, C::Folder, P>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    type Folder = FindFolder<'p, T, P>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    type Folder = FindFolder<'p, T, P>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    type Folder = FlatMapFolder<'f, C, F, C::Result>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    type Folder = FoldFolder<'r, C::Folder, U, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    type Folder = ForEachConsumer<'f, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type Folder = InspectFolder<'f, C::Folder, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type Folder = IntersperseFolder<C::Folder, T>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    type Folder = MapFolder<'f, C::Folder, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    type Folder = MapWithFolder<'f, C::Folder, U, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    type Folder = NoopConsumer;$/;"	t	implementation:NoopConsumer
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Folder: Folder<Item, Result = Self::Result>;$/;"	t	interface:Consumer
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait Folder<Item>: Sized {$/;"	i
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    type Folder = ProductFolder<P>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    type Folder = ReduceFolder<'r, R, T>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    type Folder = SumFolder<S>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    type Folder = TryFoldFolder<'r, C::Folder, U, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    type Folder = TryReduceFolder<'r, R, T>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    type Folder = TryReduceWithFolder<'r, R, T>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Folder = UnzipFolder<'a, OP, CA::Folder, CB::Folder>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type Folder = UpdateFolder<'f, C::Folder, F>;$/;"	t
Folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    type Folder = WhileSomeFolder<'f, C::Folder>;$/;"	t
ForEachConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^impl<'f, F, T> Consumer<T> for ForEachConsumer<'f, F>$/;"	c
ForEachConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^impl<'f, F, T> Folder<T> for ForEachConsumer<'f, F>$/;"	c
ForEachConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^impl<'f, F, T> UnindexedConsumer<T> for ForEachConsumer<'f, F>$/;"	c
ForEachConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^struct ForEachConsumer<'f, F: 'f> {$/;"	s
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I> Format<'a, I>$/;"	c
Format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct Format<'a, I> {$/;"	s
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^impl<'a, I, F> fmt::Display for FormatWith<'a, I, F>$/;"	c
FormatWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub struct FormatWith<'a, I, F> {$/;"	s
FromB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<A, B, FromA, FromB> ParallelExtend<(A, B)> for (FromA, FromB)$/;"	c
FromBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^pub trait FromBits<T>: crate::marker::Sized {$/;"	i
FromCast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^pub trait FromCast<T>: crate::marker::Sized {$/;"	i
FromParallelIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl FromParallelIterator<()> for () {$/;"	c
FromParallelIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait FromParallelIterator<T>$/;"	i
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl<I> Fun<I>$/;"	c
Fun	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct Fun<I: fmt::Debug> {$/;"	s
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^impl<F, T> Routine<T> for Function<F, T>$/;"	c
Function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub struct Function<F, T>$/;"	s
FxHashBuilder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub type FxHashBuilder = BuildHasherDefault<FxHasher>;$/;"	t
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Default for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^impl Hasher for FxHasher {$/;"	c
FxHasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^pub struct FxHasher {$/;"	s
GenResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    GenResult,$/;"	e	enum:MetaCommand
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    Generator(syn::Ident),$/;"	e	enum:MetaCommand
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Generator {$/;"	c
Generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Generator {$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^pub struct Group(GroupWord);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^impl Group {$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^pub struct Group(x86::__m128i);$/;"	s
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Drop for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Group<'a, K, I, F>$/;"	c
Group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Group<'a, K: 'a, I: 'a, F: 'a>$/;"	s
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> IntoIterator for &'a GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupBy<K, I, F>$/;"	c
GroupBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct GroupBy<K, I, F>$/;"	s
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<K, I, F> GroupInner<K, I, F>$/;"	c
GroupInner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^struct GroupInner<K, I, F>$/;"	s
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u32;$/;"	t
GroupWord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^type GroupWord = u64;$/;"	t
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, K, I, F> Iterator for Groups<'a, K, I, F>$/;"	c
Groups	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct Groups<'a, K: 'a, I: 'a, F: 'a>$/;"	s
Guard	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^struct Guard {$/;"	s
HasCombination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub trait HasCombination<I>: Sized {$/;"	i
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, Q: ?Sized, V, S> Index<&'a Q> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> Extend<(&'a K, &'a V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> IntoIterator for &'a mut HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'de, K, V, S> Deserialize<'de> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, H> Serialize for HashMap<K, V, H>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Debug for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Default for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Eq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> Extend<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> FromIterator<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> IntoIterator for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V, S> PartialEq for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Hash + Eq, V> HashMap<K, V, DefaultHashBuilder> {$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct HashMap<K, V, S = DefaultHashBuilder> {$/;"	s
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, K, V, S> ParallelExtend<(&'a K, &'a V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<K, V, S> ParallelExtend<(K, V)> for HashMap<K, V, S>$/;"	c
HashMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<K, V, S> FromParallelIterator<(K, V)> for HashMap<K, V, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitAnd<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitOr<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> BitXor<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, 'b, T, S> Sub<&'b HashSet<T, S>> for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Extend<&'a T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> IntoIterator for &'a HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'de, T, S> Deserialize<'de> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, H> Serialize for HashSet<T, H>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Default for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Eq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> Extend<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> FromIterator<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> IntoIterator for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> PartialEq for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T, S> fmt::Debug for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<T: Hash + Eq> HashSet<T, DefaultHashBuilder> {$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct HashSet<T, S = DefaultHashBuilder> {$/;"	s
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T, S> ParallelExtend<&'a T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<T, S> ParallelExtend<T> for HashSet<T, S>$/;"	c
HashSet	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<V, S> FromParallelIterator<V> for HashSet<V, S>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> HeadTail<I>$/;"	c
HeadTail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^struct HeadTail<I>$/;"	s
HexDigit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  HexDigit,$/;"	e	enum:ErrorKind
HexDisplay	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub trait HexDisplay {$/;"	i
HorizontalSwipe	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    impl std::cmp::Ord for HorizontalSwipe {$/;"	c	module:sweepline
HorizontalSwipe	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    pub enum HorizontalSwipe {$/;"	g	module:sweepline
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Report for Html {$/;"	c
Html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^pub struct Html {$/;"	s
I	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^impl<'data, I: 'data + ?Sized> IntoParallelRefIterator<'data> for I$/;"	c
I	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^impl<'data, I: 'data + ?Sized> IntoParallelRefMutIterator<'data> for I$/;"	c
I	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    type I = ::vec::IntoIter<i32>;$/;"	t	function:check_either
IResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub type IResult<I, O, E = u32> = Result<(I, O), Err<I, E>>;$/;"	t
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Improved	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Improved,$/;"	e	enum:ComparisonResult
Incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Incomplete(Needed),$/;"	e	enum:Err
Incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Incomplete,$/;"	e	enum:CompareResult
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndexBenchmark {$/;"	c
IndexBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexBenchmark {$/;"	s
IndexContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndexContext {$/;"	s
IndexedParallelIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait IndexedParallelIterator: ParallelIterator {$/;"	i
Indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^    type Indices;$/;"	t	interface:Shuffle1Dyn
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl IndividualBenchmark {$/;"	c
IndividualBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct IndividualBenchmark {$/;"	s
InnerMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub(crate) type InnerMap = HashMap<DayPart, Runner>;$/;"	t
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, R: FromStr, T: ParseTo<R>> ParseTo<R> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'a, T: FindToken<&'a u8>> FindToken<&'a u8> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'b, T: Compare<&'b str>> Compare<&'b str> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<'b, T: FindSubstring<&'b str>> FindSubstring<&'b str> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: AsBytes> AsBytes for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: FindToken<char>> FindToken<char> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: FindToken<u8>> FindToken<u8> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputIter> InputIter for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputLength> InputLength for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: InputTake> InputTake for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Offset> Offset for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<Range<usize>>> Slice<Range<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeFrom<usize>>> Slice<RangeFrom<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeFull>> Slice<RangeFull> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T: Slice<RangeTo<usize>>> Slice<RangeTo<usize>> for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^impl<T> AtEof for Input<T> {$/;"	c
Input	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^pub struct Input<T> {$/;"	s
InputIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputIter {$/;"	i
InputLength	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputLength {$/;"	i
InputTake	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputTake: Sized {$/;"	i
InputTakeAtPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait InputTakeAtPosition: Sized {$/;"	i
InsertionHole	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    impl<T> Drop for InsertionHole<T> {$/;"	c	function:insert_head
InsertionHole	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    struct InsertionHole<T> {$/;"	s	function:insert_head
Inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<I, F> IndexedParallelIterator for Inspect<I, F>$/;"	c
Inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<I, F> ParallelIterator for Inspect<I, F>$/;"	c
Inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<I: ParallelIterator + Debug, F> Debug for Inspect<I, F> {$/;"	c
Inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^pub struct Inspect<I: ParallelIterator, F> {$/;"	s
InspectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<'f, C, F> InspectConsumer<'f, C, F> {$/;"	c
InspectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<'f, T, C, F> Consumer<T> for InspectConsumer<'f, C, F>$/;"	c
InspectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<'f, T, C, F> UnindexedConsumer<T> for InspectConsumer<'f, C, F>$/;"	c
InspectConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^struct InspectConsumer<'f, C, F: 'f> {$/;"	s
InspectFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<'f, T, C, F> Folder<T> for InspectFolder<'f, C, F>$/;"	c
InspectFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^struct InspectFolder<'f, C, F: 'f> {$/;"	s
InspectProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^impl<'f, P, F> Producer for InspectProducer<'f, P, F>$/;"	c
InspectProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^struct InspectProducer<'f, P, F: 'f> {$/;"	s
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Interleave<I, J>$/;"	c
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Interleave<I, J> {$/;"	s
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> IndexedParallelIterator for Interleave<I, J>$/;"	c
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> ParallelIterator for Interleave<I, J>$/;"	c
Interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^pub struct Interleave<I, J>$/;"	s
InterleaveProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> InterleaveProducer<I, J>$/;"	c
InterleaveProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> Producer for InterleaveProducer<I, J>$/;"	c
InterleaveProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^pub struct InterleaveProducer<I, J>$/;"	s
InterleaveSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> DoubleEndedIterator for InterleaveSeq<I, J>$/;"	c
InterleaveSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> ExactSizeIterator for InterleaveSeq<I, J>$/;"	c
InterleaveSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^impl<I, J> Iterator for InterleaveSeq<I, J>$/;"	c
InterleaveSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^pub struct InterleaveSeq<I, J> {$/;"	s
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^impl<I, J> IndexedParallelIterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^impl<I, J> ParallelIterator for InterleaveShortest<I, J>$/;"	c
InterleaveShortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^pub struct InterleaveShortest<I, J>$/;"	s
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Intersection<'a, T, S> {$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Intersection<'a, T, S>$/;"	c
Intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Intersection<'a, T: 'a, S: 'a> {$/;"	s
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^impl<I> Iterator for Intersperse<I>$/;"	c
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<I> IndexedParallelIterator for Intersperse<I>$/;"	c
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<I> ParallelIterator for Intersperse<I>$/;"	c
Intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^pub struct Intersperse<I>$/;"	s
IntersperseConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<C, T> Consumer<T> for IntersperseConsumer<C, T>$/;"	c
IntersperseConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<C, T> IntersperseConsumer<C, T>$/;"	c
IntersperseConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<C, T> UnindexedConsumer<T> for IntersperseConsumer<C, T>$/;"	c
IntersperseConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^struct IntersperseConsumer<C, T> {$/;"	s
IntersperseFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<C, T> Folder<T> for IntersperseFolder<C, T>$/;"	c
IntersperseFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^struct IntersperseFolder<C, T> {$/;"	s
IntersperseIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<I> DoubleEndedIterator for IntersperseIter<I>$/;"	c
IntersperseIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<I> ExactSizeIterator for IntersperseIter<I>$/;"	c
IntersperseIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<I> Iterator for IntersperseIter<I>$/;"	c
IntersperseIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^struct IntersperseIter<I>$/;"	s
IntersperseProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<P> IntersperseProducer<P>$/;"	c
IntersperseProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^impl<P> Producer for IntersperseProducer<P>$/;"	c
IntersperseProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^struct IntersperseProducer<P>$/;"	s
IntoBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^pub trait IntoBits<T>: crate::marker::Sized {$/;"	i
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<'a, I> IntoIterator for &'a IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^impl<I> IntoChunks<I>$/;"	c
IntoChunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub struct IntoChunks<I>$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IntoIter<K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = Iter<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type IntoIter = IterMut<'a, K, V>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> ExactSizeIterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> FusedIterator for IntoIter<K, V> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K, V> Iterator for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<K: Debug, V: Debug> fmt::Debug for IntoIter<K, V> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IntoIter<K, V> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type IntoIter = BitMaskIter;$/;"	t	implementation:BitMask
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type IntoIter = RawIntoIter<T>;$/;"	t	implementation:RawTable
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = IntoIter<T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type IntoIter = Iter<'a, T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K: fmt::Debug> fmt::Debug for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> ExactSizeIterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> FusedIterator for IntoIter<K> {}$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<K> Iterator for IntoIter<K> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct IntoIter<K> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Chunks<'a, I>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type IntoIter = Groups<'a, K, I, F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type IntoIter = RcIter<I>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^pub struct IntoIter<T: Ord + Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^pub struct IntoIter<K: Ord + Send, V: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^pub struct IntoIter<T: Ord + Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^pub struct IntoIter<K: Hash + Eq + Send, V: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^pub struct IntoIter<T: Hash + Eq + Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^pub struct IntoIter<T: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^pub struct IntoIter<T: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    type IntoIter = ChainSeq<A::IntoIter, B::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    type IntoIter = ChunkSeq<P>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type IntoIter = iter::Cloned<P::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    type IntoIter = std::iter::Empty<T>;$/;"	t	implementation:EmptyProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    type IntoIter = iter::Zip<Range<usize>, P::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type IntoIter = iter::Inspect<P::IntoIter, &'f F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    type IntoIter = InterleaveSeq<I::IntoIter, J::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type IntoIter = IntersperseIter<P::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    type IntoIter = P::IntoIter;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    type IntoIter = iter::Map<P::IntoIter, &'f F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    type IntoIter = MapWithIter<'f, P::IntoIter, U, F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;$/;"	t	interface:Producer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    type IntoIter = Iter<T>;$/;"	t	implementation:RepeatNProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    type IntoIter = iter::Rev<P::IntoIter>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type IntoIter = UpdateSeq<P::IntoIter, &'f F>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    type IntoIter = iter::Zip<A::IntoIter, B::IntoIter>;$/;"	t	implementation:ZipProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type IntoIter = std::option::IntoIter<T>;$/;"	t	implementation:OptionProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<T: Send> IndexedParallelIterator for IntoIter<T> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<T: Send> ParallelIterator for IntoIter<T> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^pub struct IntoIter<T: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    type IntoIter = Range<T>;$/;"	t
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^pub struct IntoIter<T: Send> {$/;"	s
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type IntoIter = ::std::slice::Chunks<'data, T>;$/;"	t	implementation:ChunksProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type IntoIter = ::std::slice::ChunksMut<'data, T>;$/;"	t	implementation:ChunksMutProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type IntoIter = ::std::slice::Iter<'data, T>;$/;"	t	implementation:IterProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type IntoIter = ::std::slice::IterMut<'data, T>;$/;"	t	implementation:IterMutProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type IntoIter = ::std::slice::Windows<'data, T>;$/;"	t	implementation:WindowsProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type IntoIter = SliceDrain<'data, T>;$/;"	t	implementation:VecProducer
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<T: Send> IndexedParallelIterator for IntoIter<T> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<T: Send> ParallelIterator for IntoIter<T> {$/;"	c
IntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^pub struct IntoIter<T: Send> {$/;"	s
IntoParallelIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait IntoParallelIterator {$/;"	i
IntoParallelRefIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait IntoParallelRefIterator<'data> {$/;"	i
IntoParallelRefMutIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait IntoParallelRefMutIterator<'data> {$/;"	i
InvalidValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      InvalidValue(u8),$/;"	e	enum:tests::map_res_err::ParseError
IsA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsA,$/;"	e	enum:ErrorKind
IsAStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsAStr,$/;"	e	enum:ErrorKind
IsNot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsNot,$/;"	e	enum:ErrorKind
IsNotStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  IsNotStr,$/;"	e	enum:ErrorKind
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Item = L::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a K;$/;"	t	implementation:Keys
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a V;$/;"	t	implementation:Values
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = &'a mut V;$/;"	t	implementation:ValuesMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a V);$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (&'a K, &'a mut V);$/;"	t	implementation:IterMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Item = (K, V);$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMask
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    type Item = usize;$/;"	t	implementation:BitMaskIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = Bucket<T>;$/;"	t	implementation:RawIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawDrain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawIntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = T;$/;"	t	implementation:RawTable
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    type Item = usize;$/;"	t	implementation:ProbeSeq
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a K;$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = &'a T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:Drain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = K;$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = (I::Item,);$/;"	t	implementation:Tuple1Combination
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = B;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = J::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = Result<U, E>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    type Item = usize;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> HasCombination<I> for (I::Item,) {$/;"	c
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = (K, Group<'a, K, I, F>);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = Chunk<'a, I>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    type Item = EitherOrBoth<I::Item, J::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    type Item = I::Item;$/;"	t	implementation:PutBackN
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = A;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    type Item = St;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    type Item;$/;"	t	interface:TupleCollect
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    type Item = Position<I::Item>;$/;"	t	implementation:WithPosition
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    type Item = (I::Item, J::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    type Item = EitherOrBoth<T::Item, U::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = <T as InputIter>::RawItem;$/;"	t	implementation:T
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:CompleteStr
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:char
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = char;$/;"	t	implementation:str
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = u8;$/;"	t	implementation:CompleteByteSlice
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item = u8;$/;"	t	implementation:u8
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:ExtendInto
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:InputIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Item;$/;"	t	interface:InputTakeAtPosition
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = <T as InputIter>::Item;$/;"	t	implementation:Input
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = char;$/;"	t	implementation:CompleteStr
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Item = u8;$/;"	t	implementation:CompleteByteSlice
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    type Item = T;$/;"	t	implementation:BinaryHeap
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    type Item = &'a T;$/;"	t	implementation:VecDeque
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    type Item = &'a mut T;$/;"	t	implementation:VecDeque
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    type Item = A::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    type Item = Vec<I::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    type Item = Vec<P::Item>;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    type Item = T;$/;"	t	implementation:Empty
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    type Item = T;$/;"	t	implementation:EmptyProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    type Item = (usize, I::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    type Item = (usize, P::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    type Item = R;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    type Item = PI::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^    type Item = PI::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    type Item = U;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type Item = P::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type Item = P::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    type Item = P::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    type Item = F::Output;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    type Item = R;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item = <&'data I as IntoParallelIterator>::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item = <&'data mut I as IntoParallelIterator>::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item = T::Item;$/;"	t	implementation:T
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item: Send + 'data;$/;"	t	interface:IntoParallelRefIterator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item: Send + 'data;$/;"	t	interface:IntoParallelRefMutIterator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item: Send;$/;"	t	interface:IntoParallelIterator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Item: Send;$/;"	t	interface:ParallelIterator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    type Item = T;$/;"	t	implementation:Once
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    type Item = Iter::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Item;$/;"	t	interface:Producer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Item;$/;"	t	interface:UnindexedProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    type Item = T;$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    type Item = T;$/;"	t	implementation:RepeatNProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    type Item = T;$/;"	t	implementation:RepeatProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    type Item = P::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    type Item = D;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    type Item = U;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Item = OP::Left;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Item = OP::Right;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type Item = I::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type Item = P::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    type Item = T;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    type Item = (A::Item, B::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    type Item = (A::Item, B::Item);$/;"	t	implementation:ZipProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    type Item = (A::Item, B::Item);$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Item = &'a T;$/;"	t	implementation:Option
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Item = &'a mut T;$/;"	t	implementation:Option
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Item = T;$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Item = T;$/;"	t	implementation:Option
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Item = T;$/;"	t	implementation:OptionProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    type Item = L::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    type Item = <Iter<T> as ParallelIterator>::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    type Item = <Range<T> as Iterator>::Item;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Item = &'a T;$/;"	t	implementation:Result
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Item = &'a mut T;$/;"	t	implementation:Result
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Item = T;$/;"	t	implementation:Result
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data T;$/;"	t	implementation:Iter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data T;$/;"	t	implementation:IterProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data T;$/;"	t	implementation:T
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data T;$/;"	t	implementation:Vec
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data [T];$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data [T];$/;"	t	implementation:Chunks
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data [T];$/;"	t	implementation:ChunksProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data [T];$/;"	t	implementation:Windows
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data [T];$/;"	t	implementation:WindowsProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut T;$/;"	t	implementation:IterMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut T;$/;"	t	implementation:IterMutProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut T;$/;"	t	implementation:T
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut T;$/;"	t	implementation:Vec
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut [T];$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut [T];$/;"	t	implementation:ChunksMut
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Item = &'data mut [T];$/;"	t	implementation:ChunksMutProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    type Item = V;$/;"	t
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:Lines
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:Matches
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:MatchesProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:Split
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:SplitTerminator
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:SplitTerminatorProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = &'ch str;$/;"	t	implementation:SplitWhitespace
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = (usize, &'ch str);$/;"	t	implementation:MatchIndices
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = (usize, &'ch str);$/;"	t	implementation:MatchIndicesProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = (usize, char);$/;"	t	implementation:CharIndices
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = (usize, char);$/;"	t	implementation:CharIndicesProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = char;$/;"	t	implementation:Chars
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = char;$/;"	t	implementation:CharsProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = u16;$/;"	t	implementation:EncodeUtf16
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = u16;$/;"	t	implementation:EncodeUtf16Producer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = u8;$/;"	t	implementation:Bytes
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    type Item = u8;$/;"	t	implementation:BytesProducer
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type Item = T;$/;"	t	implementation:IntoIter
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type Item = T;$/;"	t	implementation:SliceDrain
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type Item = T;$/;"	t	implementation:Vec
Item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type Item = T;$/;"	t	implementation:VecProducer
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Iter<'a, K, V> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V: Debug> fmt::Debug for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Iter<'a, K: 'a, V: 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K: fmt::Debug> fmt::Debug for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Clone for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> ExactSizeIterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> FusedIterator for Iter<'a, K> {}$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, K> Iterator for Iter<'a, K> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Iter<'a, K: 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter = CharIndices<'a>;$/;"	t	implementation:str
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter = Enumerate<Self::IterElem>;$/;"	t	implementation:u8
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type Iter: Iterator<Item = (usize, Self::Item)>;$/;"	t	interface:InputIter
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = <T as InputIter>::Iter;$/;"	t	implementation:Input
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = CharIndices<'a>;$/;"	t	implementation:CompleteStr
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Iter = Enumerate<Self::IterElem>;$/;"	t	implementation:CompleteByteSlice
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    type Iter = IntoIter<T>;$/;"	t	implementation:BinaryHeap
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^impl<'a, T: Ord + Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^pub struct Iter<'a, T: Ord + Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^impl<'a, K: Ord + Sync, V: Sync> Clone for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^pub struct Iter<'a, K: Ord + Sync + 'a, V: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^impl<'a, T: Ord + Sync + 'a> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^pub struct Iter<'a, T: Ord + Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^impl<'a, K: Hash + Eq + Sync, V: Sync> Clone for Iter<'a, K, V> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^pub struct Iter<'a, K: Hash + Eq + Sync + 'a, V: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^impl<'a, T: Hash + Eq + Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^pub struct Iter<'a, T: Hash + Eq + Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^impl<'a, T: Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^pub struct Iter<'a, T: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    type Iter = Iter<'a, T>;$/;"	t	implementation:VecDeque
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    type Iter = IterMut<'a, T>;$/;"	t	implementation:VecDeque
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^impl<'a, T: Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^pub struct Iter<'a, T: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter = <&'data I as IntoParallelIterator>::Iter;$/;"	t
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter = <&'data mut I as IntoParallelIterator>::Iter;$/;"	t
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter = T;$/;"	t	implementation:T
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter: ParallelIterator<Item = Self::Item>;$/;"	t	interface:IntoParallelIterator
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter: ParallelIterator<Item = Self::Item>;$/;"	t	interface:IntoParallelRefIterator
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    type Iter: ParallelIterator<Item = Self::Item>;$/;"	t	interface:IntoParallelRefMutIterator
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T: Clone> DoubleEndedIterator for Iter<T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T: Clone> ExactSizeIterator for Iter<T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T: Clone> Iterator for Iter<T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^struct Iter<T: Clone> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Iter = IntoIter<T>;$/;"	t	implementation:Option
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Iter = Iter<'a, T>;$/;"	t	implementation:Option
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    type Iter = IterMut<'a, T>;$/;"	t	implementation:Option
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<'a, T: Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^pub struct Iter<'a, T: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    type Iter = Iter<T>;$/;"	t
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^pub struct Iter<T> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Iter = IntoIter<T>;$/;"	t	implementation:Result
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Iter = Iter<'a, T>;$/;"	t	implementation:Result
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    type Iter = IterMut<'a, T>;$/;"	t	implementation:Result
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^impl<'a, T: Sync> Clone for Iter<'a, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^pub struct Iter<'a, T: Sync + 'a> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Iter = Iter<'data, T>;$/;"	t	implementation:T
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Iter = Iter<'data, T>;$/;"	t	implementation:Vec
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Iter = IterMut<'data, T>;$/;"	t	implementation:T
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    type Iter = IterMut<'data, T>;$/;"	t	implementation:Vec
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> IndexedParallelIterator for Iter<'data, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> ParallelIterator for Iter<'data, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync> Clone for Iter<'data, T> {$/;"	c
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct Iter<'data, T: 'data + Sync> {$/;"	s
Iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    type Iter = IntoIter<T>;$/;"	t	implementation:Vec
IterBridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^impl<Iter: Iterator + Send> ParallelIterator for IterBridge<Iter>$/;"	c
IterBridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^pub struct IterBridge<Iter> {$/;"	s
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem = Chars<'a>;$/;"	t	implementation:str
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem = Map<Iter<'a, Self::Item>, fn(&u8) -> u8>;$/;"	t	implementation:u8
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type IterElem: Iterator<Item = Self::Item>;$/;"	t	interface:InputIter
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = <T as InputIter>::IterElem;$/;"	t	implementation:Input
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = Chars<'a>;$/;"	t	implementation:CompleteStr
IterElem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type IterElem = Map<Iter<'a, Self::Item>, fn(&u8) -> u8>; \/\/Iter<'a, Self::RawItem>;$/;"	t	implementation:CompleteByteSlice
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for IterMut<'a, K, V> {}$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for IterMut<'a, K, V> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for IterMut<'a, K, V>$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct IterMut<'a, K: 'a, V: 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^pub struct IterMut<'a, K: Ord + Sync + 'a, V: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^pub struct IterMut<'a, K: Hash + Eq + Sync + 'a, V: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^pub struct IterMut<'a, T: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^pub struct IterMut<'a, T: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^pub struct IterMut<'a, T: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^pub struct IterMut<'a, T: Send + 'a> {$/;"	s
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> IndexedParallelIterator for IterMut<'data, T> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> ParallelIterator for IterMut<'data, T> {$/;"	c
IterMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct IterMut<'data, T: 'data + Send> {$/;"	s
IterMutProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: 'data + Send> Producer for IterMutProducer<'data, T> {$/;"	c
IterMutProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^struct IterMutProducer<'data, T: 'data + Send> {$/;"	s
IterParallelProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^impl<'a, Iter: Iterator + 'a> Clone for IterParallelProducer<'a, Iter> {$/;"	c
IterParallelProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^impl<'a, Iter: Iterator + Send + 'a> UnindexedProducer for IterParallelProducer<'a, Iter>$/;"	c
IterParallelProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^struct IterParallelProducer<'a, Iter: Iterator + 'a> {$/;"	s
IterProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^impl<T> IntoIterator for IterProducer<T>$/;"	c
IterProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^struct IterProducer<T> {$/;"	s
IterProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: 'data + Sync> Producer for IterProducer<'data, T> {$/;"	c
IterProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^struct IterProducer<'data, T: 'data + Sync> {$/;"	s
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> Iterator for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Iterate<St, F>$/;"	c
Iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Iterate<St, F> {$/;"	s
Itertools	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub trait Itertools : Iterator {$/;"	i
KDE_POINTS	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static KDE_POINTS: usize = 500;$/;"	v
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Clone for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> Iterator for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I> fmt::Debug for KMerge<I>$/;"	c
KMerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMerge<I>$/;"	s
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> Iterator for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^impl<I, F> fmt::Debug for KMergeBy<I, F>$/;"	c
KMergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub struct KMergeBy<I, F>$/;"	s
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = K;$/;"	t
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key = usize;$/;"	t	implementation:ChunkIndex
Key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    type Key;$/;"	t	interface:KeyFunction
KeyFunction	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^trait KeyFunction<A> {$/;"	i
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Keys<'a, K, V> {}$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: Debug, V> fmt::Debug for Keys<'a, K, V> {$/;"	c
Keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Keys<'a, K: 'a, V: 'a> {$/;"	s
LandClaim	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^impl LandClaim {$/;"	c
LandClaim	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^pub struct LandClaim {$/;"	s
LanesType	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type LanesType;$/;"	t	interface:Simd
Last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Last(T),$/;"	e	enum:Position
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> Index<usize> for LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^impl<I> LazyBuffer<I>$/;"	c
LazyBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^struct LazyBuffer<I: Iterator> {$/;"	s
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Left(L),$/;"	e	enum:Either
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Left(A),$/;"	e	enum:EitherOrBoth
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Left = A;$/;"	t	implementation:Unzip
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Left = L;$/;"	t
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Left = T;$/;"	t
Left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Left: Send;$/;"	t	interface:UnzipOp
Leftmost	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    Leftmost,$/;"	e	enum:MatchPosition
LengthSplitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^impl LengthSplitter {$/;"	c
LengthSplitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^struct LengthSplitter {$/;"	s
LengthValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  LengthValue,$/;"	e	enum:ErrorKind
LengthValueFn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  LengthValueFn,$/;"	e	enum:ErrorKind
LexicographicallyOrdered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^pub struct LexicographicallyOrdered<T>(T);$/;"	s
LibInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^struct LibInfos {$/;"	s
Line	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    struct Line([u8; 32]);$/;"	s	function:part2_simd
Linear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Linear,$/;"	e	enum:AxisScale
Lines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for Lines<'ch> {$/;"	c
Lines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct Lines<'ch>(&'ch str);$/;"	s
LinkedList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T> ParallelExtend<&'a T> for LinkedList<T>$/;"	c
LinkedList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<T> ParallelExtend<T> for LinkedList<T>$/;"	c
LinkedList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<T> FromParallelIterator<T> for LinkedList<T>$/;"	c
List	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  List(Vec<(I, ErrorKind<E>)>),$/;"	e	enum:Context
Little	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  Little,$/;"	e	enum:Endianness
Ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^crate trait Ln {$/;"	i
Logarithmic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Logarithmic,$/;"	e	enum:AxisScale
Longer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Longer(usize, PutBack<J>),$/;"	e	enum:Diff
MainInfos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^enum MainInfos {$/;"	g
Many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Many0,$/;"	e	enum:ErrorKind
Many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Many1,$/;"	e	enum:ErrorKind
ManyMN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ManyMN,$/;"	e	enum:ErrorKind
ManyTill	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ManyTill,$/;"	e	enum:ErrorKind
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^impl Map {$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub struct Map {$/;"	s
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<I, F, R> IndexedParallelIterator for Map<I, F>$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<I, F, R> ParallelIterator for Map<I, F>$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<I: ParallelIterator + Debug, F> Debug for Map<I, F> {$/;"	c
Map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^pub struct Map<I: ParallelIterator, F> {$/;"	s
MapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<'f, C, F> MapConsumer<'f, C, F> {$/;"	c
MapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<'f, T, R, C, F> Consumer<T> for MapConsumer<'f, C, F>$/;"	c
MapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<'f, T, R, C, F> UnindexedConsumer<T> for MapConsumer<'f, C, F>$/;"	c
MapConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^struct MapConsumer<'f, C, F: 'f> {$/;"	s
MapError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^pub enum MapError {$/;"	g
MapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<'f, T, R, C, F> Folder<T> for MapFolder<'f, C, F>$/;"	c
MapFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^struct MapFolder<'f, C, F: 'f> {$/;"	s
MapInit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I, INIT, T, F, R> IndexedParallelIterator for MapInit<I, INIT, F>$/;"	c
MapInit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I, INIT, T, F, R> ParallelIterator for MapInit<I, INIT, F>$/;"	c
MapInit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I: ParallelIterator + Debug, INIT, F> Debug for MapInit<I, INIT, F> {$/;"	c
MapInit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^pub struct MapInit<I: ParallelIterator, INIT, F> {$/;"	s
MapInitConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, C, INIT, F> MapInitConsumer<'f, C, INIT, F> {$/;"	c
MapInitConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, T, INIT, U, R, C, F> Consumer<T> for MapInitConsumer<'f, C, INIT, F>$/;"	c
MapInitConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, T, INIT, U, R, C, F> UnindexedConsumer<T> for MapInitConsumer<'f, C, INIT, F>$/;"	c
MapInitConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapInitConsumer<'f, C, INIT: 'f, F: 'f> {$/;"	s
MapInitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, P, INIT, U, F, R> Producer for MapInitProducer<'f, P, INIT, F>$/;"	c
MapInitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapInitProducer<'f, P, INIT: 'f, F: 'f> {$/;"	s
MapOpt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MapOpt,$/;"	e	enum:ErrorKind
MapProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^impl<'f, P, F, R> Producer for MapProducer<'f, P, F>$/;"	c
MapProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^struct MapProducer<'f, P, F: 'f> {$/;"	s
MapRes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MapRes,$/;"	e	enum:ErrorKind
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F, T, U, E> Iterator for MapResults<I, F>$/;"	c
MapResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MapResults<I, F> {$/;"	s
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        impl<'de, K, V, S> Visitor<'de> for MapVisitor<K, V, S>$/;"	c	function:deserialize
MapVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^        struct MapVisitor<K, V, S> {$/;"	s	function:deserialize
MapWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I, T, F, R> IndexedParallelIterator for MapWith<I, T, F>$/;"	c
MapWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I, T, F, R> ParallelIterator for MapWith<I, T, F>$/;"	c
MapWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<I: ParallelIterator + Debug, T: Debug, F> Debug for MapWith<I, T, F> {$/;"	c
MapWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^pub struct MapWith<I: ParallelIterator, T, F> {$/;"	s
MapWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, C, U, F> MapWithConsumer<'f, C, U, F> {$/;"	c
MapWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, T, U, R, C, F> Consumer<T> for MapWithConsumer<'f, C, U, F>$/;"	c
MapWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, T, U, R, C, F> UnindexedConsumer<T> for MapWithConsumer<'f, C, U, F>$/;"	c
MapWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapWithConsumer<'f, C, U, F: 'f> {$/;"	s
MapWithFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, T, U, R, C, F> Folder<T> for MapWithFolder<'f, C, U, F>$/;"	c
MapWithFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapWithFolder<'f, C, U, F: 'f> {$/;"	s
MapWithIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, I, U, F, R> DoubleEndedIterator for MapWithIter<'f, I, U, F>$/;"	c
MapWithIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, I, U, F, R> ExactSizeIterator for MapWithIter<'f, I, U, F>$/;"	c
MapWithIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, I, U, F, R> Iterator for MapWithIter<'f, I, U, F>$/;"	c
MapWithIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapWithIter<'f, I, U, F: 'f> {$/;"	s
MapWithProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^impl<'f, P, U, F, R> Producer for MapWithProducer<'f, P, U, F>$/;"	c
MapWithProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^struct MapWithProducer<'f, P, U, F: 'f> {$/;"	s
Mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Mask {$/;"	i
MatchIndices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> ParallelIterator for MatchIndices<'ch, P> {$/;"	c
MatchIndices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct MatchIndices<'ch, P: Pattern> {$/;"	s
MatchIndicesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, 'pat, P: Pattern> UnindexedProducer for MatchIndicesProducer<'ch, 'pat, P> {$/;"	c
MatchIndicesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct MatchIndicesProducer<'ch, 'pat, P: Pattern + 'pat> {$/;"	s
MatchPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^enum MatchPosition {$/;"	g
Matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> ParallelIterator for Matches<'ch, P> {$/;"	c
Matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct Matches<'ch, P: Pattern> {$/;"	s
MatchesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, 'pat, P: Pattern> UnindexedProducer for MatchesProducer<'ch, 'pat, P> {$/;"	c
MatchesProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct MatchesProducer<'ch, 'pat, P: Pattern + 'pat> {$/;"	s
MaxLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<I> IndexedParallelIterator for MaxLen<I>$/;"	c
MaxLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<I> ParallelIterator for MaxLen<I>$/;"	c
MaxLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^pub struct MaxLen<I: IndexedParallelIterator> {$/;"	s
MaxLenProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<P> Producer for MaxLenProducer<P>$/;"	c
MaxLenProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^struct MaxLenProducer<P> {$/;"	s
Mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Mean,$/;"	e	enum:Statistic
MeasurementData	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct MeasurementData<'a> {$/;"	s
Median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Median,$/;"	e	enum:Statistic
MedianAbsDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    MedianAbsDev,$/;"	e	enum:Statistic
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> fmt::Debug for Merge<I, J>$/;"	c
Merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Merge<I, J>$/;"	s
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Clone for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> Iterator for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J, F> fmt::Debug for MergeBy<I, J, F>$/;"	c
MergeBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct MergeBy<I, J, F>$/;"	s
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Clone for MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> MergeCore<I, J>$/;"	c
MergeCore	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^struct MergeCore<I, J>$/;"	s
MergeHole	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    impl<T> Drop for MergeHole<T> {$/;"	c	function:merge
MergeHole	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    struct MergeHole<T> {$/;"	s	function:merge
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> Iterator for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^impl<I, J, F> fmt::Debug for MergeJoinBy<I, J, F>$/;"	c
MergeJoinBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub struct MergeJoinBy<I: Iterator, J: Iterator, F> {$/;"	s
MergesortResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^enum MergesortResult {$/;"	g
MetaCommand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^enum MetaCommand {$/;"	g
MetaCommand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^impl MetaCommand {$/;"	c
MidIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    MidIter { on_first_iter: bool },$/;"	e	enum:MultiProductIterState
Middle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Middle(T),$/;"	e	enum:Position
MinLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<I> IndexedParallelIterator for MinLen<I>$/;"	c
MinLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<I> ParallelIterator for MinLen<I>$/;"	c
MinLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^pub struct MinLen<I: IndexedParallelIterator> {$/;"	s
MinLenProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^impl<P> Producer for MinLenProducer<P>$/;"	c
MinLenProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^struct MinLenProducer<P> {$/;"	s
MinMax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    MinMax(T, T)$/;"	e	enum:MinMaxResult
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^impl<T: Clone> MinMaxResult<T> {$/;"	c
MinMaxResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub enum MinMaxResult<T> {$/;"	g
MulAdd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^crate trait MulAdd {$/;"	i
MulAddE	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^crate trait MulAddE {$/;"	i
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I: Iterator> MultiPeek<I> {$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> ExactSizeIterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> Iterator for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^impl<I> PeekingNext for MultiPeek<I>$/;"	c
MultiPeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub struct MultiPeek<I>$/;"	s
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> Iterator for MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProduct<I>$/;"	c
MultiProduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub struct MultiProduct<I>(Vec<MultiProductIter<I>>)$/;"	s
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^impl<I> MultiProductIter<I>$/;"	c
MultiProductIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^struct MultiProductIter<I>$/;"	s
MultiProductIterState	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^enum MultiProductIterState {$/;"	g
MultiSpace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  MultiSpace,$/;"	e	enum:ErrorKind
NT	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type NT;$/;"	t	interface:SimdArray
NamedRoutine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct NamedRoutine<T> {$/;"	s
Needed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^impl Needed {$/;"	c
Needed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^pub enum Needed {$/;"	g
NilError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  impl From<u32> for NilError {$/;"	c	module:tests
NilError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  pub struct NilError;$/;"	s	module:tests
NoDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    impl<T> Drop for NoDrop<T> {$/;"	c	function:insert_head
NoDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    struct NoDrop<T> {$/;"	s	function:insert_head
NoDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^impl<T> Drop for NoDrop<T> {$/;"	c
NoDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^struct NoDrop<T> {$/;"	s
NoElements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    NoElements,$/;"	e	enum:MinMaxResult
NonDescending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    NonDescending,$/;"	e	enum:MergesortResult
NonEmpty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  NonEmpty,$/;"	e	enum:ErrorKind
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NonSignificant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    NonSignificant,$/;"	e	enum:ComparisonResult
NoneOf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  NoneOf,$/;"	e	enum:ErrorKind
NoopConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^impl NoopConsumer {$/;"	c
NoopConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^impl<T> Consumer<T> for NoopConsumer {$/;"	c
NoopConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^impl<T> Folder<T> for NoopConsumer {$/;"	c
NoopConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^impl<T> UnindexedConsumer<T> for NoopConsumer {$/;"	c
NoopConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^pub struct NoopConsumer;$/;"	s
NoopReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^impl Reducer<()> for NoopReducer {$/;"	c
NoopReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^pub struct NoopReducer;$/;"	s
Not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Not,$/;"	e	enum:ErrorKind
NotAvailable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        NotAvailable,$/;"	e	enum:plotting::Plotting
Occupied	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Occupied(OccupiedEntry<'a, K, V, S>),$/;"	e	enum:Entry
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V, S> OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug, V: 'a + Debug, S> Debug for OccupiedEntry<'a, K, V, S> {$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct OccupiedEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Send for OccupiedEntry<'a, K, V, S>$/;"	c
OccupiedEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^unsafe impl<'a, K, V, S> Sync for OccupiedEntry<'a, K, V, S>$/;"	c
OctDigit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  OctDigit,$/;"	e	enum:ErrorKind
Offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Offset {$/;"	i
Ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  Ok,$/;"	e	enum:CompareResult
Ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Ok = T;$/;"	t	implementation:private::Option
Ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Ok = T;$/;"	t	implementation:private::Result
Ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        type Ok;$/;"	t	interface:private::Try
Once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^impl<T: Send> IndexedParallelIterator for Once<T> {$/;"	c
Once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^impl<T: Send> ParallelIterator for Once<T> {$/;"	c
Once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^pub struct Once<T: Send> {$/;"	s
One	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      One,$/;"	e	enum:tests::map_res_err::ValidValue
OneElement	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    OneElement(T),$/;"	e	enum:MinMaxResult
OneOf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  OneOf,$/;"	e	enum:ErrorKind
Only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    Only(T),$/;"	e	enum:Position
Option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    impl<T> Try for Option<T> {$/;"	c	module:private
Option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<'a, C, T> FromParallelIterator<Option<T>> for Option<C>$/;"	c
Option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<'a, T: Send> IntoParallelIterator for &'a mut Option<T> {$/;"	c
Option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<'a, T: Sync> IntoParallelIterator for &'a Option<T> {$/;"	c
Option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<T: Send> IntoParallelIterator for Option<T> {$/;"	c
OptionProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^impl<T: Send> Producer for OptionProducer<T> {$/;"	c
OptionProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^struct OptionProducer<T: Send> {$/;"	s
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    type Output = V;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    type Output = HashSet<T, S>;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    type Output = I::Item;$/;"	t
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    type Output = FakeUint;$/;"	t	implementation:tests::FakeUint
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^    type Output;$/;"	t	interface:SinCosPi
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx2<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx4<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::cptrx8<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x16;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x2;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x4;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f32x8;$/;"	t	implementation:f32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x2;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x4;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::f64x8;$/;"	t	implementation:f64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x1;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x2;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i128x4;$/;"	t	implementation:i128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x16;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x2;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x32;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x4;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i16x8;$/;"	t	implementation:i16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x16;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x2;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x4;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i32x8;$/;"	t	implementation:i32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x2;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x4;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i64x8;$/;"	t	implementation:i64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x16;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x2;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x32;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x4;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x64;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::i8x8;$/;"	t	implementation:i8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex2;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex4;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::isizex8;$/;"	t	implementation:isize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x1;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x2;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m128x4;$/;"	t	implementation:m128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x16;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x2;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x32;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x4;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m16x8;$/;"	t	implementation:m16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x16;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x2;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x4;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m32x8;$/;"	t	implementation:m32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x2;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x4;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m64x8;$/;"	t	implementation:m64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x16;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x2;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x32;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x4;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x64;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::m8x8;$/;"	t	implementation:m8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx2<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx4<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::mptrx8<T>;$/;"	t	implementation:T
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex2;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex4;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::msizex8;$/;"	t	implementation:msize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x1;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x2;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u128x4;$/;"	t	implementation:u128
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x16;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x2;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x32;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x4;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u16x8;$/;"	t	implementation:u16
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x16;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x2;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x4;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u32x8;$/;"	t	implementation:u32
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x2;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x4;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u64x8;$/;"	t	implementation:u64
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x16;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x2;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x32;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x4;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x64;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::u8x8;$/;"	t	implementation:u8
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex2;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex4;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^    type Output = crate::codegen::usizex8;$/;"	t	implementation:usize
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Output;$/;"	t	interface:Shuffle
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^        type Output = C::Result;$/;"	t	function:bridge
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Output;$/;"	t	interface:ProducerCallback
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^        type Output = ();$/;"	t	implementation:check_drops::Partial
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^        type Output = ();$/;"	t	implementation:check_indices_after_enumerate_split::WithProducer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
Output	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            type Output = CB::Output;$/;"	t	function:with_producer
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> DoubleEndedIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> ExactSizeIterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^impl<I, F> Iterator for PadUsing<I, F>$/;"	c
PadUsing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub struct PadUsing<I, F> {$/;"	s
ParallelBridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^pub trait ParallelBridge: Sized {$/;"	i
ParallelExtend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait ParallelExtend<T>$/;"	i
ParallelIterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub trait ParallelIterator: Sized + Send {$/;"	i
ParallelSlice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub trait ParallelSlice<T: Sync> {$/;"	i
ParallelSliceMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub trait ParallelSliceMut<T: Send> {$/;"	i
ParallelString	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub trait ParallelString {$/;"	i
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> BenchmarkDefinition for ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl<T> ParameterizedBenchmark<T>$/;"	c
ParameterizedBenchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^pub struct ParameterizedBenchmark<T: Debug> {$/;"	s
ParseError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    enum ParseError {$/;"	g	function:tests::map_res_err
ParseError	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    impl From<u32> for ParseError {$/;"	c	function:tests::map_res_err
ParseError	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    pub struct ParseError;$/;"	s	module:parsers
ParseTo	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait ParseTo<R> {$/;"	i
ParseTo	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  ParseTo,$/;"	e	enum:ErrorKind
Parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  impl<'a> Parser<'a> {$/;"	c	module:tests
Parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  struct Parser<'a> {$/;"	s	module:tests
Partial	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    impl<'a> ProducerCallback<DropCounter<'a>> for Partial {$/;"	c	function:check_drops
Partial	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    struct Partial;$/;"	s	function:check_drops
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl Default for PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^impl PartialBenchmarkConfig {$/;"	c
PartialBenchmarkConfig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^struct PartialBenchmarkConfig {$/;"	s
Partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<P, T> UnzipOp<T> for Partition<P>$/;"	c
Partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct Partition<P> {$/;"	s
PartitionMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<P, L, R, T> UnzipOp<T> for PartitionMap<P>$/;"	c
PartitionMap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct PartitionMap<P> {$/;"	s
Pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    pub trait Pattern: Sized + Sync + Send {$/;"	i	module:private
Peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for Peekable<I>$/;"	c
PeekingNext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub trait PeekingNext : Iterator {$/;"	i
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<'a, I, F> Iterator for PeekingTakeWhile<'a, I, F>$/;"	c
PeekingTakeWhile	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub struct PeekingTakeWhile<'a, I: 'a, F>$/;"	s
Permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Permutation,$/;"	e	enum:ErrorKind
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^impl Plot {$/;"	c
Plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct Plot {$/;"	s
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl Default for PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^impl PlotConfiguration {$/;"	c
PlotConfiguration	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub struct PlotConfiguration {$/;"	s
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    impl Plotting {$/;"	c	module:plotting
Plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub enum Plotting {$/;"	g	module:plotting
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<T> Position<T> {$/;"	c
Position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub enum Position<T> {$/;"	g
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Positions<I, F>$/;"	c
Positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Positions<I, F> {$/;"	s
Powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^crate trait Powf {$/;"	i
PrivateMarker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/private.rs	/^pub struct PrivateMarker;$/;"	s
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl Iterator for ProbeSeq {$/;"	c
ProbeSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^struct ProbeSeq {$/;"	s
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^impl<'a, I, T, E> Iterator for ProcessResults<'a, I, E>$/;"	c
ProcessResults	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub struct ProcessResults<'a, I, E: 'a> {$/;"	s
Producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait Producer: Send + Sized {$/;"	i
ProducerCallback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait ProducerCallback<T> {$/;"	i
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, J> Iterator for Product<I, J>$/;"	c
Product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Product<I, J>$/;"	s
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^impl<P, T> Consumer<T> for ProductConsumer<P>$/;"	c
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^impl<P, T> UnindexedConsumer<T> for ProductConsumer<P>$/;"	c
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^impl<P: Send> ProductConsumer<P> {$/;"	c
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^impl<P> Reducer<P> for ProductConsumer<P>$/;"	c
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^struct ProductConsumer<P: Send> {$/;"	s
ProductConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^unsafe impl<P: Send> Send for ProductConsumer<P> {}$/;"	c
ProductFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^impl<P, T> Folder<T> for ProductFolder<P>$/;"	c
ProductFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^struct ProductFolder<P> {$/;"	s
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^impl Program {$/;"	c
Program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^pub struct Program {$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> PutBack<I>$/;"	c
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct PutBack<I>$/;"	s
PutBack	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBack<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^impl<I> PeekingNext for PutBackN<I>$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> Iterator for PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^impl<I: Iterator> PutBackN<I> {$/;"	c
PutBackN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub struct PutBackN<I: Iterator> {$/;"	s
Range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^impl<T> IntoParallelIterator for Range<T>$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Drop for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> ExactSizeIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> FusedIterator for RawDrain<'a, T> {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> Iterator for RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawDrain<'a, T> {$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawDrain<'a, T: 'a> {$/;"	s
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Send for RawDrain<'a, T> where T: Send {}$/;"	c
RawDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<'a, T> Sync for RawDrain<'a, T> where T: Sync {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<'a, T> RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIntoIter<T> {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIntoIter<T> {$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIntoIter<T> {$/;"	s
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIntoIter<T> where T: Send {}$/;"	c
RawIntoIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIntoIter<T> where T: Sync {}$/;"	c
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem = char;$/;"	t	implementation:str
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem = u8;$/;"	t	implementation:u8
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  type RawItem;$/;"	t	interface:InputIter
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = <T as InputIter>::RawItem;$/;"	t	implementation:Input
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = char;$/;"	t	implementation:CompleteStr
RawItem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type RawItem = u8;$/;"	t	implementation:CompleteByteSlice
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Clone for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> ExactSizeIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> FusedIterator for RawIter<T> {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Iterator for RawIter<T> {$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawIter<T> {$/;"	s
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawIter<T> where T: Send {}$/;"	c
RawIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawIter<T> where T: Sync {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T: Clone> Clone for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> Drop for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> IntoIterator for RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^impl<T> RawTable<T> {$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^pub struct RawTable<T> {$/;"	s
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Send for RawTable<T> where T: Send {}$/;"	c
RawTable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^unsafe impl<T> Sync for RawTable<T> where T: Sync {}$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<'a, I> IntoIterator for &'a RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<A, I> Iterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> Clone for RcIter<I> {$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^impl<I> DoubleEndedIterator for RcIter<I>$/;"	c
RcIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub struct RcIter<I> {$/;"	s
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, ID, T> Consumer<T> for ReduceConsumer<'r, R, ID>$/;"	c
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, ID, T> Reducer<T> for ReduceConsumer<'r, R, ID>$/;"	c
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, ID, T> UnindexedConsumer<T> for ReduceConsumer<'r, R, ID>$/;"	c
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, ID> Clone for ReduceConsumer<'r, R, ID> {$/;"	c
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, ID> Copy for ReduceConsumer<'r, R, ID> {}$/;"	c
ReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^struct ReduceConsumer<'r, R: 'r, ID: 'r> {$/;"	s
ReduceFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^impl<'r, R, T> Folder<T> for ReduceFolder<'r, R, T>$/;"	c
ReduceFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^struct ReduceFolder<'r, R: 'r, T> {$/;"	s
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    type Reducer = NoopReducer;$/;"	t	implementation:CollectConsumer
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    type Reducer = FindReducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    type Reducer = FindReducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    type Reducer = NoopReducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    type Reducer = NoopReducer;$/;"	t	implementation:NoopConsumer
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Reducer: Reducer<Self::Result>;$/;"	t	interface:Consumer
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait Reducer<Result> {$/;"	i
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    type Reducer = Self;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    type Reducer = Self;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    type Reducer = Self;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    type Reducer = Self;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    type Reducer = Self;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Reducer = UnzipReducer<CA::Reducer, CB::Reducer>;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type Reducer = C::Reducer;$/;"	t
Reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    type Reducer = C::Reducer;$/;"	t
Ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    Ref { lib: pm2::Ident },$/;"	e	enum:MainInfos
RegexpCapture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpCapture,$/;"	e	enum:ErrorKind
RegexpCaptures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpCaptures,$/;"	e	enum:ErrorKind
RegexpFind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpFind,$/;"	e	enum:ErrorKind
RegexpMatch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpMatch,$/;"	e	enum:ErrorKind
RegexpMatches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  RegexpMatches,$/;"	e	enum:ErrorKind
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
Regressed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Regressed,$/;"	e	enum:ComparisonResult
Repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T> ParallelIterator for Repeat<T>$/;"	c
Repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T> Repeat<T>$/;"	c
Repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^pub struct Repeat<T: Clone + Send> {$/;"	s
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, F> Iterator for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<F> fmt::Debug for RepeatCall<F>$/;"	c
RepeatCall	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct RepeatCall<F> {$/;"	s
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> DoubleEndedIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> ExactSizeIterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^impl<A> Iterator for RepeatN<A>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub struct RepeatN<A> {$/;"	s
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T> IndexedParallelIterator for RepeatN<T>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T> ParallelIterator for RepeatN<T>$/;"	c
RepeatN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^pub struct RepeatN<T: Clone + Send> {$/;"	s
RepeatNProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T: Clone + Send> Producer for RepeatNProducer<T> {$/;"	c
RepeatNProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^struct RepeatNProducer<T: Clone + Send> {$/;"	s
RepeatProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^impl<T: Clone + Send> UnindexedProducer for RepeatProducer<T> {$/;"	c
RepeatProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^struct RepeatProducer<T: Clone + Send> {$/;"	s
Report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) trait Report {$/;"	i
ReportContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub struct ReportContext {$/;"	s
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Report for Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^impl Reports {$/;"	c
Reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub(crate) struct Reports {$/;"	s
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    type Result = F::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    type Result = ();$/;"	t	implementation:CollectConsumer
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    type Result = ();$/;"	t	implementation:CollectFolder
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    type Result = Option<T>;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    type Result = Option<T>;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    type Result = Option<T>;$/;"	t	implementation:FindFolder
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    type Result = ();$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    impl<T, E> Try for Result<T, E> {$/;"	c	module:private
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    type Result = ();$/;"	t	implementation:NoopConsumer
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Result: Send;$/;"	t	interface:Consumer
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    type Result;$/;"	t	interface:Folder
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    type Result = P;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    type Result = T;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    type Result = S;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    type Result = T;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    type Result = Option<T>;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Result = (CA::Result, CB::Result);$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Result = (FA::Result, FB::Result);$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    type Result = C::Result;$/;"	t
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^impl<'a, C, T, E> FromParallelIterator<Result<T, E>> for Result<C, E>$/;"	c
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^impl<'a, T: Send, E> IntoParallelIterator for &'a mut Result<T, E> {$/;"	c
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^impl<'a, T: Sync, E> IntoParallelIterator for &'a Result<T, E> {$/;"	c
Result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^impl<T: Send, E> IntoParallelIterator for Result<T, E> {$/;"	c
Rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^impl<I> IndexedParallelIterator for Rev<I>$/;"	c
Rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^impl<I> ParallelIterator for Rev<I>$/;"	c
Rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^pub struct Rev<I: IndexedParallelIterator> {$/;"	s
RevProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^impl<P> Producer for RevProducer<P>$/;"	c
RevProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^struct RevProducer<P> {$/;"	s
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    Right(R),$/;"	e	enum:Either
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    Right(B),$/;"	e	enum:EitherOrBoth
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Right = B;$/;"	t	implementation:Unzip
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Right = R;$/;"	t
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Right = T;$/;"	t
Right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    type Right: Send;$/;"	t	interface:UnzipOp
Rightmost	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    Rightmost,$/;"	e	enum:MatchPosition
Routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^pub trait Routine<T> {$/;"	i
Run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^struct Run {$/;"	s
RunResult	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    RunResult,$/;"	e	enum:MetaCommand
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub trait Runner {$/;"	i
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    Runner(syn::Ident),$/;"	e	enum:MetaCommand
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Runner {$/;"	c
Runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Runner {$/;"	s
SIZE	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static SIZE: Size = Size(1280, 720);$/;"	v
Save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    Save,$/;"	e	enum:Baseline
SeparatedList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  SeparatedList,$/;"	e	enum:ErrorKind
SeparatedNonEmptyList	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  SeparatedNonEmptyList,$/;"	e	enum:ErrorKind
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'a, 'de, T, S> Visitor<'de> for SeqInPlaceVisitor<'a, T, S>$/;"	c	function:deserialize_in_place
SeqInPlaceVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqInPlaceVisitor<'a, T: 'a, S: 'a>(&'a mut HashSet<T, S>);$/;"	s	function:deserialize_in_place
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        impl<'de, T, S> Visitor<'de> for SeqVisitor<T, S>$/;"	c	function:deserialize
SeqVisitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^        struct SeqVisitor<T, S> {$/;"	s	function:deserialize
ShiftStart	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    ShiftStart(usize),$/;"	e	enum:Action
Shorter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^    Shorter(usize, PutBack<I>),$/;"	e	enum:Diff
Shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Shuffle<Lanes> {$/;"	i
Shuffle1Dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^pub trait Shuffle1Dyn {$/;"	i
Simd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^pub struct Simd<A: sealed::SimdArray>($/;"	s
Simd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait Simd {$/;"	i
SimdArray	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^pub trait SimdArray {$/;"	i
Sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^crate trait Sin {$/;"	i
SinCosPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^crate trait SinCosPi: Sized {$/;"	i
SinPi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^crate trait SinPi {$/;"	i
Size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Size(usize),$/;"	e	enum:Needed
SizeHint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub type SizeHint = (usize, Option<usize>);$/;"	t
Skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^impl<I> IndexedParallelIterator for Skip<I>$/;"	c
Skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^impl<I> ParallelIterator for Skip<I>$/;"	c
Skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^pub struct Skip<I> {$/;"	s
SleepMin	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^type SleepMin = HashMap<usize, Guard>;$/;"	t
Slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait Slice<R> {$/;"	i
SliceDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data> DoubleEndedIterator for SliceDrain<'data, T> {$/;"	c
SliceDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data> Drop for SliceDrain<'data, T> {$/;"	c
SliceDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data> ExactSizeIterator for SliceDrain<'data, T> {$/;"	c
SliceDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data> Iterator for SliceDrain<'data, T> {$/;"	c
SliceDrain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^struct SliceDrain<'data, T: 'data> {$/;"	s
Slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    Slope,$/;"	e	enum:Statistic
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^impl Solver {$/;"	c
Solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^pub(crate) struct Solver {$/;"	s
Sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    Sorted,$/;"	e	enum:MergesortResult
Space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Space,$/;"	e	enum:ErrorKind
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^impl<D, S> ParallelIterator for Split<D, S>$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^impl<D: Debug, S> Debug for Split<D, S> {$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^pub struct Split<D, S> {$/;"	s
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T, P: Clone> Clone for Split<'data, T, P> {$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T, P> ParallelIterator for Split<'data, T, P>$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Debug, P> Debug for Split<'data, T, P> {$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct Split<'data, T: 'data, P> {$/;"	s
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> ParallelIterator for Split<'ch, P> {$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> Split<'ch, P> {$/;"	c
Split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct Split<'ch, P: Pattern> {$/;"	s
SplitMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T, P> ParallelIterator for SplitMut<'data, T, P>$/;"	c
SplitMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Debug, P> Debug for SplitMut<'data, T, P> {$/;"	c
SplitMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct SplitMut<'data, T: 'data, P> {$/;"	s
SplitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^impl<'a, D, S> UnindexedProducer for SplitProducer<'a, D, S>$/;"	c
SplitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^struct SplitProducer<'a, D, S: 'a> {$/;"	s
SplitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^impl<'p, P, V> SplitProducer<'p, P, V>$/;"	c
SplitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^impl<'p, P, V> UnindexedProducer for SplitProducer<'p, P, V>$/;"	c
SplitProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^pub struct SplitProducer<'p, P: 'p, V> {$/;"	s
SplitTerminator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> ParallelIterator for SplitTerminator<'ch, P> {$/;"	c
SplitTerminator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> SplitTerminator<'ch, P> {$/;"	c
SplitTerminator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct SplitTerminator<'ch, P: Pattern> {$/;"	s
SplitTerminatorProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, 'sep, P: Pattern + 'sep> SplitTerminatorProducer<'ch, 'sep, P> {$/;"	c
SplitTerminatorProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, 'sep, P: Pattern + 'sep> UnindexedProducer for SplitTerminatorProducer<'ch, 'sep, P> {$/;"	c
SplitTerminatorProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^struct SplitTerminatorProducer<'ch, 'sep, P: Pattern + 'sep> {$/;"	s
SplitWhitespace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch> ParallelIterator for SplitWhitespace<'ch> {$/;"	c
SplitWhitespace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^pub struct SplitWhitespace<'ch>(&'ch str);$/;"	s
Splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^impl Splitter {$/;"	c
Splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^struct Splitter {$/;"	s
Sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^crate trait Sqrt {$/;"	i
Sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrte.rs	/^crate trait Sqrte {$/;"	i
Standalone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    Standalone { year: u32 },$/;"	e	enum:MainInfos
Start	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        Start(i32, i32),$/;"	e	enum:sweepline::HorizontalSwipe
StartArea	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        StartArea(&'a LandClaim, i32),$/;"	e	enum:sweepline::SweepEvent
StartOfIter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    StartOfIter,$/;"	e	enum:MultiProductIterState
State	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        type State<T> = Result<T, Option<T>>;$/;"	t	method:Itertools::tree_fold1
State	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    impl<T> Drop for State<T> {$/;"	c	function:par_merge
State	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    struct State<T> {$/;"	s	function:par_merge
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^impl fmt::Display for Statistic {$/;"	c
Statistic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^pub enum Statistic {$/;"	g
StdDev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    StdDev,$/;"	e	enum:Statistic
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> ExactSizeIterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> Iterator for Step<I>$/;"	c
Step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Step<I> {$/;"	s
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl ParallelExtend<String> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl ParallelExtend<char> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a> ParallelExtend<&'a char> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a> ParallelExtend<&'a str> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a> ParallelExtend<Cow<'a, str>> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl FromParallelIterator<String> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl FromParallelIterator<char> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<'a> FromParallelIterator<&'a char> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<'a> FromParallelIterator<&'a str> for String {$/;"	c
String	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<'a> FromParallelIterator<Cow<'a, str>> for String {$/;"	c
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^impl<S, T> Consumer<T> for SumConsumer<S>$/;"	c
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^impl<S, T> UnindexedConsumer<T> for SumConsumer<S>$/;"	c
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^impl<S: Send> SumConsumer<S> {$/;"	c
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^impl<S> Reducer<S> for SumConsumer<S>$/;"	c
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^struct SumConsumer<S: Send> {$/;"	s
SumConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^unsafe impl<S: Send> Send for SumConsumer<S> {}$/;"	c
SumFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^impl<S, T> Folder<T> for SumFolder<S>$/;"	c
SumFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^struct SumFolder<S> {$/;"	s
SummaryContext	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^struct SummaryContext {$/;"	s
SwapBytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^crate trait SwapBytes {$/;"	i
SweepEvent	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    impl<'a> std::cmp::Ord for SweepEvent<'a> {$/;"	c	module:sweepline
SweepEvent	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    impl<'a> std::cmp::PartialOrd for SweepEvent<'a> {$/;"	c	module:sweepline
SweepEvent	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    pub enum SweepEvent<'a> {$/;"	g	module:sweepline
Switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Switch,$/;"	e	enum:ErrorKind
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for SymmetricDifference<'a, T, S> {$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for SymmetricDifference<'a, T, S>$/;"	c
SymmetricDifference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct SymmetricDifference<'a, T: 'a, S: 'a> {$/;"	s
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^impl<T: ?Sized> Itertools for T where T: Iterator { }$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, T> AtEof for &'a [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, T> InputLength for &'a [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<I: AtEof, T> AtEof for (I, T) {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<T: InputLength + InputIter + InputTake + AtEof + Clone + UnspecializedInput> InputTakeAtPos/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^impl<T, U> Cast<U> for T$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^impl<T> FromCast<T> for T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^impl<T, U> IntoBits<U> for T$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^impl<T> FromBits<T> for T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 2]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 2]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 4]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 4]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 8]> for *const T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl<T> Shuffle<[u32; 8]> for *mut T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type T;$/;"	t	interface:SimdArray
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^impl<T: ParallelIterator> IntoParallelIterator for T {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^impl<T: Iterator + Send> ParallelBridge for T$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T, P> Fissile<P> for &'data [T]$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T, P> Fissile<P> for &'data mut [T]$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> IntoParallelIterator for &'data mut [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> IntoParallelIterator for &'data [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<T: Send> ParallelSliceMut<T> for [T] {$/;"	c
T	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<T: Sync> ParallelSlice<T> for [T] {$/;"	c
Tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Tag,$/;"	e	enum:ErrorKind
TagBits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagBits,$/;"	e	enum:ErrorKind
TagClosure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagClosure,$/;"	e	enum:ErrorKind
TagStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TagStr,$/;"	e	enum:ErrorKind
Take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^impl<I> IndexedParallelIterator for Take<I>$/;"	c
Take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^impl<I> ParallelIterator for Take<I>$/;"	c
Take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^pub struct Take<I> {$/;"	s
TakeTill1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeTill1,$/;"	e	enum:ErrorKind
TakeUntil	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntil,$/;"	e	enum:ErrorKind
TakeUntilAndConsume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsume,$/;"	e	enum:ErrorKind
TakeUntilAndConsume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsume1,$/;"	e	enum:ErrorKind
TakeUntilAndConsumeStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilAndConsumeStr,$/;"	e	enum:ErrorKind
TakeUntilEither	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilEither,$/;"	e	enum:ErrorKind
TakeUntilEitherAndConsume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilEitherAndConsume,$/;"	e	enum:ErrorKind
TakeUntilStr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeUntilStr,$/;"	e	enum:ErrorKind
TakeWhile1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhile1,$/;"	e	enum:ErrorKind
TakeWhile1Str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhile1Str,$/;"	e	enum:ErrorKind
TakeWhileMN	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  TakeWhileMN,$/;"	e	enum:ErrorKind
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> Iterator for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<'a, I, F> fmt::Debug for TakeWhileRef<'a, I, F>$/;"	c
TakeWhileRef	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TakeWhileRef<'a, I: 'a, F> {$/;"	s
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    type Target = L::Target;$/;"	t
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Target = &'a [u8];$/;"	t	implementation:CompleteByteSlice
Target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  type Target = &'a str;$/;"	t	implementation:CompleteStr
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> ExactSizeIterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^impl<I> Iterator for Tee<I>$/;"	c
Tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub struct Tee<I>$/;"	s
TeeBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^struct TeeBuffer<A, I> {$/;"	s
Throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub enum Throughput {$/;"	g
Try	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    pub trait Try {$/;"	i	module:private
TryFold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<U, I, ID, F> ParallelIterator for TryFold<I, U, ID, F>$/;"	c
TryFold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<U, I: ParallelIterator + Debug, ID, F> Debug for TryFold<I, U, ID, F> {$/;"	c
TryFold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^pub struct TryFold<I, U, ID, F> {$/;"	s
TryFoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<'r, U, T, C, ID, F> Consumer<T> for TryFoldConsumer<'r, U, C, ID, F>$/;"	c
TryFoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<'r, U, T, C, ID, F> UnindexedConsumer<T> for TryFoldConsumer<'r, U, C, ID, F>$/;"	c
TryFoldConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^struct TryFoldConsumer<'c, U, C, ID: 'c, F: 'c> {$/;"	s
TryFoldFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<'r, C, U, F, T> Folder<T> for TryFoldFolder<'r, C, U, F>$/;"	c
TryFoldFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^struct TryFoldFolder<'r, C, U: Try, F: 'r> {$/;"	s
TryFoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<I: ParallelIterator + Debug, U: Try, F> Debug for TryFoldWith<I, U, F>$/;"	c
TryFoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<U, I, F> ParallelIterator for TryFoldWith<I, U, F>$/;"	c
TryFoldWith	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^pub struct TryFoldWith<I, U: Try, F> {$/;"	s
TryFoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<'r, U, T, C, F> Consumer<T> for TryFoldWithConsumer<'r, C, U, F>$/;"	c
TryFoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^impl<'r, U, T, C, F> UnindexedConsumer<T> for TryFoldWithConsumer<'r, C, U, F>$/;"	c
TryFoldWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^struct TryFoldWithConsumer<'c, C, U: Try, F: 'c> {$/;"	s
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, ID, T> Consumer<T> for TryReduceConsumer<'r, R, ID>$/;"	c
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, ID, T> Reducer<T> for TryReduceConsumer<'r, R, ID>$/;"	c
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, ID, T> UnindexedConsumer<T> for TryReduceConsumer<'r, R, ID>$/;"	c
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, ID> Clone for TryReduceConsumer<'r, R, ID> {$/;"	c
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, ID> Copy for TryReduceConsumer<'r, R, ID> {}$/;"	c
TryReduceConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^struct TryReduceConsumer<'r, R: 'r, ID: 'r> {$/;"	s
TryReduceFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^impl<'r, R, T> Folder<T> for TryReduceFolder<'r, R, T>$/;"	c
TryReduceFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^struct TryReduceFolder<'r, R: 'r, T: Try> {$/;"	s
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R, T> Consumer<T> for TryReduceWithConsumer<'r, R>$/;"	c
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R, T> Reducer<Option<T>> for TryReduceWithConsumer<'r, R>$/;"	c
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R, T> UnindexedConsumer<T> for TryReduceWithConsumer<'r, R>$/;"	c
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R> Clone for TryReduceWithConsumer<'r, R> {$/;"	c
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R> Copy for TryReduceWithConsumer<'r, R> {}$/;"	c
TryReduceWithConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^struct TryReduceWithConsumer<'r, R: 'r> {$/;"	s
TryReduceWithFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^impl<'r, R, T> Folder<T> for TryReduceWithFolder<'r, R, T>$/;"	c
TryReduceWithFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^struct TryReduceWithFolder<'r, R: 'r, T: Try> {$/;"	s
Tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    type Tuple: Copy + Clone;$/;"	t	interface:SimdArray
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I: Iterator> Iterator for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I> From<I> for Tuple1Combination<I> {$/;"	c
Tuple1Combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Tuple1Combination<I> {$/;"	s
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> ExactSizeIterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> Iterator for TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<T> TupleBuffer<T>$/;"	c
TupleBuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleBuffer<T>$/;"	s
TupleCollect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub trait TupleCollect: Sized {$/;"	i
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, T> Iterator for TupleCombinations<I, T>$/;"	c
TupleCombinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct TupleCombinations<I, T>$/;"	s
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for TupleWindows<I, T>$/;"	c
TupleWindows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct TupleWindows<I, T>$/;"	s
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Iterator for Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^impl<I, T> Tuples<I, T>$/;"	c
Tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub struct Tuples<I, T>$/;"	s
Two	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      Two,$/;"	e	enum:tests::map_res_err::ValidValue
UnEither	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<L, R> UnzipOp<Either<L, R>> for UnEither$/;"	c
UnEither	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnEither;$/;"	s
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<A, St, F> Iterator for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^impl<St, F> fmt::Debug for Unfold<St, F>$/;"	c
Unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub struct Unfold<St, F> {$/;"	s
UnindexedConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait UnindexedConsumer<I>: Consumer<I> {$/;"	i
UnindexedProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub trait UnindexedProducer: Send + Sized {$/;"	i
UnindexedRangeLen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^trait UnindexedRangeLen<L> {$/;"	i
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Clone for Union<'a, T, S> {$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> FusedIterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> Iterator for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^impl<'a, T, S> fmt::Debug for Union<'a, T, S>$/;"	c
Union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^pub struct Union<'a, T: 'a, S: 'a> {$/;"	s
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> Iterator for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I> fmt::Debug for Unique<I>$/;"	c
Unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct Unique<I: Iterator> {$/;"	s
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> Iterator for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^impl<I, V, F> fmt::Debug for UniqueBy<I, V, F>$/;"	c
UniqueBy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub struct UniqueBy<I: Iterator, V, F> {$/;"	s
Unknown	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  Unknown,$/;"	e	enum:Needed
UnspecializedInput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub trait UnspecializedInput {}$/;"	i
Unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<A: Send, B: Send> UnzipOp<(A, B)> for Unzip {$/;"	c
Unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct Unzip;$/;"	s
UnzipA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<'b, I, OP, FromB> ParallelIterator for UnzipA<'b, I, OP, FromB>$/;"	c
UnzipA	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnzipA<'b, I, OP, FromB: 'b> {$/;"	s
UnzipB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<'r, I, OP, CA> ParallelIterator for UnzipB<'r, I, OP, CA>$/;"	c
UnzipB	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnzipB<'r, I, OP, CA>$/;"	s
UnzipConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<'a, T, OP, CA, CB> Consumer<T> for UnzipConsumer<'a, OP, CA, CB>$/;"	c
UnzipConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<'a, T, OP, CA, CB> UnindexedConsumer<T> for UnzipConsumer<'a, OP, CA, CB>$/;"	c
UnzipConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnzipConsumer<'a, OP: 'a, CA, CB> {$/;"	s
UnzipFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<'a, T, OP, FA, FB> Folder<T> for UnzipFolder<'a, OP, FA, FB>$/;"	c
UnzipFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnzipFolder<'a, OP: 'a, FA, FB> {$/;"	s
UnzipOp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^trait UnzipOp<T>: Sync + Send {$/;"	i
UnzipReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^impl<A, B, RA, RB> Reducer<(A, B)> for UnzipReducer<RA, RB>$/;"	c
UnzipReducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^struct UnzipReducer<RA, RB> {$/;"	s
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> DoubleEndedIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> ExactSizeIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, F> Iterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct Update<I, F> {$/;"	s
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I, F> IndexedParallelIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I, F> ParallelIterator for Update<I, F>$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I: ParallelIterator + Debug, F> Debug for Update<I, F> {$/;"	c
Update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^pub struct Update<I: ParallelIterator, F> {$/;"	s
UpdateConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<'f, C, F> UpdateConsumer<'f, C, F> {$/;"	c
UpdateConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<'f, T, C, F> Consumer<T> for UpdateConsumer<'f, C, F>$/;"	c
UpdateConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<'f, T, C, F> UnindexedConsumer<T> for UpdateConsumer<'f, C, F>$/;"	c
UpdateConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^struct UpdateConsumer<'f, C, F: 'f> {$/;"	s
UpdateFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<'f, T, C, F> Folder<T> for UpdateFolder<'f, C, F>$/;"	c
UpdateFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^struct UpdateFolder<'f, C, F: 'f> {$/;"	s
UpdateProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<'f, P, F> Producer for UpdateProducer<'f, P, F>$/;"	c
UpdateProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^struct UpdateProducer<'f, P, F: 'f> {$/;"	s
UpdateSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I, F> DoubleEndedIterator for UpdateSeq<I, F>$/;"	c
UpdateSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I, F> ExactSizeIterator for UpdateSeq<I, F>$/;"	c
UpdateSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^impl<I, F> Iterator for UpdateSeq<I, F>$/;"	c
UpdateSeq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^struct UpdateSeq<I, F> {$/;"	s
Vacant	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    Vacant(VacantEntry<'a, K, V, S>),$/;"	e	enum:Entry
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Debug + Eq + Hash, V: 'a, S: 'a + BuildHasher> Debug for VacantEntry<'a, K, V, /;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K: 'a + Eq + Hash, V: 'a, S: BuildHasher> VacantEntry<'a, K, V, S> {$/;"	c
VacantEntry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct VacantEntry<'a, K: 'a, V: 'a, S: 'a> {$/;"	s
ValidValue	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    enum ValidValue {$/;"	g	function:tests::map_res_err
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    Value,$/;"	e	enum:ValueType
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            type Value = HashMap<K, V, S>;$/;"	t	function:deserialize
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            type Value = HashSet<T, S>;$/;"	t	function:deserialize
ValueType	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^pub enum ValueType {$/;"	g
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V: Debug> fmt::Debug for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Clone for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for Values<'a, K, V> {}$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for Values<'a, K, V> {$/;"	c
Values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct Values<'a, K: 'a, V: 'a> {$/;"	s
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> ExactSizeIterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> FusedIterator for ValuesMut<'a, K, V> {}$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> Iterator for ValuesMut<'a, K, V> {$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^impl<'a, K, V> fmt::Debug for ValuesMut<'a, K, V>$/;"	c
ValuesMut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^pub struct ValuesMut<'a, K: 'a, V: 'a> {$/;"	s
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^impl<T> Append<T> for Vec<T> {$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^impl<T> ParallelExtend<T> for Vec<T>$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T> ParallelExtend<&'a T> for Vec<T>$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<T> FromParallelIterator<T> for Vec<T>$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Send + 'data> IntoParallelIterator for &'data mut Vec<T> {$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> IntoParallelIterator for &'data Vec<T> {$/;"	c
Vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<T: Send> IntoParallelIterator for Vec<T> {$/;"	c
VecDeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^impl<'a, T: Send> IntoParallelIterator for &'a mut VecDeque<T> {$/;"	c
VecDeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^impl<'a, T: Sync> IntoParallelIterator for &'a VecDeque<T> {$/;"	c
VecDeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<'a, T> ParallelExtend<&'a T> for VecDeque<T>$/;"	c
VecDeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^impl<T> ParallelExtend<T> for VecDeque<T>$/;"	c
VecDeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^impl<T> FromParallelIterator<T> for VecDeque<T>$/;"	c
VecProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data + Send> Drop for VecProducer<'data, T> {$/;"	c
VecProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^impl<'data, T: 'data + Send> Producer for VecProducer<'data, T> {$/;"	c
VecProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^struct VecProducer<'data, T: 'data + Send> {$/;"	s
Verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  Verify,$/;"	e	enum:ErrorKind
Wake	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    Wake,$/;"	e	enum:Action
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^impl<I, A> Iterator for WhileSome<I>$/;"	c
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub struct WhileSome<I> {$/;"	s
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^impl<I, T> ParallelIterator for WhileSome<I>$/;"	c
WhileSome	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^pub struct WhileSome<I: ParallelIterator> {$/;"	s
WhileSomeConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^impl<'f, T, C> Consumer<Option<T>> for WhileSomeConsumer<'f, C>$/;"	c
WhileSomeConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^impl<'f, T, C> UnindexedConsumer<Option<T>> for WhileSomeConsumer<'f, C>$/;"	c
WhileSomeConsumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^struct WhileSomeConsumer<'f, C> {$/;"	s
WhileSomeFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^impl<'f, T, C> Folder<Option<T>> for WhileSomeFolder<'f, C>$/;"	c
WhileSomeFolder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^struct WhileSomeFolder<'f, C> {$/;"	s
Windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> IndexedParallelIterator for Windows<'data, T> {$/;"	c
Windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync + 'data> ParallelIterator for Windows<'data, T> {$/;"	c
Windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: Sync> Clone for Windows<'data, T> {$/;"	c
Windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^pub struct Windows<'data, T: 'data + Sync> {$/;"	s
WindowsProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^impl<'data, T: 'data + Sync> Producer for WindowsProducer<'data, T> {$/;"	c
WindowsProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^struct WindowsProducer<'data, T: 'data + Sync> {$/;"	s
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I: Iterator> Iterator for WithPosition<I> {$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^impl<I> ExactSizeIterator for WithPosition<I>$/;"	c
WithPosition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub struct WithPosition<I>$/;"	s
WithProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    impl<'a> ProducerCallback<(usize, &'a i32)> for WithProducer {$/;"	c	function:check_indices_after_enumerate_split
WithProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    struct WithProducer;$/;"	s	function:check_indices_after_enumerate_split
WriteOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^impl<T> Drop for WriteOnDrop<T> {$/;"	c
WriteOnDrop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^struct WriteOnDrop<T> {$/;"	s
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub struct Zip<T> {$/;"	s
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^impl<A, B> IndexedParallelIterator for Zip<A, B>$/;"	c
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^impl<A, B> ParallelIterator for Zip<A, B>$/;"	c
Zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^pub struct Zip<A: IndexedParallelIterator, B: IndexedParallelIterator> {$/;"	s
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> ExactSizeIterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^impl<I, J> Iterator for ZipEq<I, J>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub struct ZipEq<I, J> {$/;"	s
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^impl<A, B> IndexedParallelIterator for ZipEq<A, B>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^impl<A, B> ParallelIterator for ZipEq<A, B>$/;"	c
ZipEq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^pub struct ZipEq<A: IndexedParallelIterator, B: IndexedParallelIterator> {$/;"	s
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> DoubleEndedIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> ExactSizeIterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^impl<T, U> Iterator for ZipLongest<T, U>$/;"	c
ZipLongest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub struct ZipLongest<T, U> {$/;"	s
ZipProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^impl<A: Producer, B: Producer> Producer for ZipProducer<A, B> {$/;"	c
ZipProducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^struct ZipProducer<A: Producer, B: Producer> {$/;"	s
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            _align: [GroupWord; 0],$/;"	m	struct:Group::static_empty::Dummy
_align	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            _align: [x86::__m128i; 0],$/;"	m	struct:Group::static_empty::Dummy
_child	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _child: Child,$/;"	m	struct:Program
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a HashMap<K, V>>,$/;"	m	struct:Iter
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    _marker: PhantomData<&'a mut HashMap<K, V>>,$/;"	m	struct:IterMut
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    _marker: PhantomData<&'a RawTable<T>>,$/;"	m	struct:RawDrain
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    _marker: PhantomData<*const P>,$/;"	m	struct:ProductConsumer
_marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    _marker: PhantomData<*const S>,$/;"	m	struct:SumConsumer
_mi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mi: PhantomData<I>,$/;"	m	struct:TupleCombinations
_mt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    _mt: PhantomData<T>$/;"	m	struct:TupleCombinations
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:CommandFactory
_phantom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    _phantom: PhantomData<T>,$/;"	m	struct:Function
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn a() -> Either<u32, u32> {$/;"	f	function:macros
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Fuse<I>,$/;"	m	struct:Interleave
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: I,$/;"	m	struct:Product
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a: Peekable<I>,$/;"	m	struct:MergeCore
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    a: I,$/;"	m	struct:ZipEq
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    a: Fuse<T>,$/;"	m	struct:ZipLongest
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    a: u8,$/;"	m	struct:tests::B
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    a: u8,$/;"	m	struct:tests::C
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    a: A,$/;"	m	struct:Chain
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    a: A,$/;"	m	struct:ChainProducer
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    a: A,$/;"	m	struct:Zip
a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    a: A,$/;"	m	struct:ZipProducer
a_cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    a_cur: Option<I::Item>,$/;"	m	struct:Product
a_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            a_len: usize,$/;"	m	struct:with_producer::CallbackA
a_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            a_len: usize,$/;"	m	struct:with_producer::CallbackB
a_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    a_len: usize,$/;"	m	struct:ChainProducer
a_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            a_producer: A,$/;"	m	struct:with_producer::CallbackB
a_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            a_producer: A,$/;"	m	struct:with_producer::CallbackB
aarch64_128_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! aarch64_128_neon_impl {$/;"	M
aarch64_64_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! aarch64_64_neon_impl {$/;"	M
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod abs;$/;"	n
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod abs;$/;"	n
abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn abs(self) -> Self;$/;"	P	interface:Abs
abs_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn abs_distributions($/;"	f
absolute_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub absolute_estimates: Estimates,$/;"	m	struct:MeasurementData
acc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! acc ($/;"	M
action	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    action: Action,$/;"	m	struct:Event
adaptors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod adaptors;$/;"	n
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn add(&mut self, names: &[&str], idb: IndexBenchmark) {$/;"	P	implementation:IndexBenchmark
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^fn add<T: Sum>(left: T, right: T) -> T {$/;"	f
add_assign	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn add_assign(&mut self, other: FakeUint) {$/;"	P	implementation:tests::FakeUint
add_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn add_err() {$/;"	f	module:tests
add_error_pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn add_error_pattern<'a, I: Clone + Hash + Eq, O, E: Clone + Hash + Eq>($/;"	f
add_return_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! add_return_error ($/;"	M
add_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn add_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
add_to_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn add_to_hash(&mut self, i: usize) {$/;"	P	implementation:FxHasher
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Comparison
additional_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    additional_plots: Vec<Plot>,$/;"	m	struct:Context
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn all<F>(&mut self, f: F) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn all<G>(&mut self, mut f: G) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn all<I, F>(iterable: I, f: F) -> bool$/;"	f
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^    unsafe fn all(self) -> bool;$/;"	P	interface:All
all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn all<P>(self, predicate: P) -> bool$/;"	P	interface:ParallelIterator
all_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn all_equal(&mut self) -> bool$/;"	P	interface:Itertools
alloc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    alloc: Option<(NonNull<u8>, Layout)>,$/;"	m	struct:RawIntoIter
alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha<T>(input: T) -> IResult<T, T, u32>$/;"	f
alpha0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha0<T>(input: T) -> IResult<T, T, u32>$/;"	f
alpha1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alpha1<T>(input: T) -> IResult<T, T, u32>$/;"	f
alphanumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric<T>(input: T) -> IResult<T, T>$/;"	f
alphanumeric0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric0<T>(input: T) -> IResult<T, T>$/;"	f
alphanumeric1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn alphanumeric1<T>(input: T) -> IResult<T, T>$/;"	f
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt() {$/;"	f	module:tests
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! alt ($/;"	M
alt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn alt() {$/;"	f	module:tests
alt1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt1(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt1(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt2(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt2(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn alt3(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn alt3(i: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
alt_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt_complete() {$/;"	f	module:tests
alt_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! alt_complete ($/;"	M
alt_complete_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! alt_complete_sep ($/;"	M
alt_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn alt_incomplete() {$/;"	f	module:tests
alt_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! alt_sep ($/;"	M
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod analysis;$/;"	n
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, _: &ReportContext) {$/;"	P	implementation:CliReport
analysis	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn analysis(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
and_modify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn and_modify<F>(self, f: F) -> Self$/;"	P	implementation:Entry
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn any<I, F>(iterable: I, f: F) -> bool$/;"	f
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^    unsafe fn any(self) -> bool;$/;"	P	interface:Any
any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn any<P>(self, predicate: P) -> bool$/;"	P	interface:ParallelIterator
any_bit_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn any_bit_set(self) -> bool {$/;"	P	implementation:BitMask
anychar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^pub fn anychar<T>(input: T) -> IResult<T, char>$/;"	f
anychar_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn anychar_str() {$/;"	f	module:tests
aoc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_generator(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_lib	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_lib(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_main(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^pub fn aoc_runner_derive(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
aoc_runner_derive_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^pub fn aoc_runner_derive_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
api	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod api;$/;"	n
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(mut self, item: T) -> Vec<T> {$/;"	P	implementation:Vec
append_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^    fn append_(self, item: T) -> Self;$/;"	P	interface:Append
apply	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! apply ($/;"	M
apply_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! apply_m ($/;"	M
apply_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn apply_test() {$/;"	f	module:tests
arch_specific	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod arch_specific;$/;"	n
arm_128_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_128_v7_neon_impl {$/;"	M
arm_m16x4_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m16x4_v7_neon_impl {$/;"	M
arm_m32x2_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m32x2_v7_neon_impl {$/;"	M
arm_m8x8_v7_neon_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! arm_m8x8_v7_neon_impl {$/;"	M
array_impls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! array_impls {$/;"	M
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:str
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:u8
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_bytes(&self) -> &[u8];$/;"	P	interface:AsBytes
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CompleteByteSlice
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:CompleteStr
as_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:Input
as_bytes_array_impls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! as_bytes_array_impls {$/;"	M
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char {$/;"	P	implementation:char
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char {$/;"	P	implementation:u8
as_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn as_char(self) -> char;$/;"	P	interface:AsChar
as_consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    fn as_consumer(&mut self) -> CollectConsumer<T> {$/;"	P	implementation:Collect
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_mut(&mut self) -> &mut Target {$/;"	f
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_mut(&mut self) -> Either<&mut L, &mut R> {$/;"	P	implementation:Either
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_mut<'a>(&self) -> &'a mut T {$/;"	P	implementation:Bucket
as_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_mut(&mut self) -> EitherOrBoth<&mut A, &mut B> {$/;"	P	implementation:EitherOrBoth
as_parallel_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn as_parallel_slice(&self) -> &[T] {$/;"	P	implementation:T
as_parallel_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn as_parallel_slice(&self) -> &[T];$/;"	P	interface:ParallelSlice
as_parallel_slice_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn as_parallel_slice_mut(&mut self) -> &mut [T] {$/;"	P	implementation:T
as_parallel_slice_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn as_parallel_slice_mut(&mut self) -> &mut [T];$/;"	P	interface:ParallelSliceMut
as_parallel_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn as_parallel_string(&self) -> &str {$/;"	P	implementation:str
as_parallel_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn as_parallel_string(&self) -> &str;$/;"	P	interface:ParallelString
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:ArcStr
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn as_ref(&self) -> &Target {$/;"	f
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn as_ref(&self) -> Either<&L, &R> {$/;"	P	implementation:Either
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn as_ref<'a>(&self) -> &'a T {$/;"	P	implementation:Bucket
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn as_ref(&self) -> EitherOrBoth<&A, &B> {$/;"	P	implementation:EitherOrBoth
as_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn as_ref(&self) -> &str {$/;"	P	implementation:CompleteStr
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn assert_covariance() {$/;"	f
assert_covariance	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^fn assert_covariance() {$/;"	f
assert_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn assert_equal<I, J>(a: I, b: J)$/;"	f
assert_iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn assert_iterated(&mut self) {$/;"	P	implementation:Bencher
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:T
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:str
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn at_eof(&self) -> bool;$/;"	P	interface:AtEof
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:CompleteByteSlice
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:CompleteStr
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn at_eof(&self) -> bool {$/;"	P	implementation:Input
at_eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  pub at_eof: bool,$/;"	m	struct:Input
avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub avg_times: LabeledSample<'a, f64>,$/;"	m	struct:MeasurementData
avx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod avx;$/;"	n
avx2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod avx2;$/;"	n
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn b() -> Either<String, &'static str> {$/;"	f	function:macros
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Fuse<J>,$/;"	m	struct:Interleave
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: J,$/;"	m	struct:Product
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b: Peekable<J>,$/;"	m	struct:MergeCore
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    b: J,$/;"	m	struct:ZipEq
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    b: Fuse<U>,$/;"	m	struct:ZipLongest
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    b: Option<u8>,$/;"	m	struct:tests::C
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    b: u8,$/;"	m	struct:tests::B
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            b: B,$/;"	m	struct:with_producer::CallbackA
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    b: B,$/;"	m	struct:Chain
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    b: B,$/;"	m	struct:ChainProducer
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    b: &'b mut FromB,$/;"	m	struct:UnzipA
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            b: B,$/;"	m	struct:with_producer::CallbackA
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    b: B,$/;"	m	struct:Zip
b	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    b: B,$/;"	m	struct:ZipProducer
b_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    b_orig: J,$/;"	m	struct:Product
backlog	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    backlog: VecDeque<A>,$/;"	m	struct:TeeBuffer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    base: P,$/;"	m	struct:ChunkProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    base: C,$/;"	m	struct:ClonedConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    base: F,$/;"	m	struct:ClonedFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    base: I,$/;"	m	struct:Cloned
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    base: P,$/;"	m	struct:ClonedProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    base: I,$/;"	m	struct:Enumerate
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    base: P,$/;"	m	struct:EnumerateProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    base: C,$/;"	m	struct:FilterConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    base: C,$/;"	m	struct:FilterFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    base: I,$/;"	m	struct:Filter
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    base: C,$/;"	m	struct:FilterMapConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    base: C,$/;"	m	struct:FilterMapFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    base: I,$/;"	m	struct:FilterMap
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    base: C,$/;"	m	struct:FlatMapConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    base: C,$/;"	m	struct:FlatMapFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    base: I,$/;"	m	struct:FlatMap
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^    base: I,$/;"	m	struct:Flatten
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    base: C,$/;"	m	struct:FoldConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    base: C,$/;"	m	struct:FoldFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    base: C,$/;"	m	struct:FoldWithConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    base: I,$/;"	m	struct:Fold
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    base: I,$/;"	m	struct:FoldWith
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    base: C,$/;"	m	struct:InspectConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    base: C,$/;"	m	struct:InspectFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    base: I,$/;"	m	struct:Inspect
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    base: P,$/;"	m	struct:InspectProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    base: C,$/;"	m	struct:IntersperseConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    base: C,$/;"	m	struct:IntersperseFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    base: Fuse<I>,$/;"	m	struct:IntersperseIter
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    base: I,$/;"	m	struct:Intersperse
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    base: P,$/;"	m	struct:IntersperseProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    base: I,$/;"	m	struct:MaxLen
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    base: I,$/;"	m	struct:MinLen
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    base: P,$/;"	m	struct:MaxLenProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    base: P,$/;"	m	struct:MinLenProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    base: C,$/;"	m	struct:MapConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    base: C,$/;"	m	struct:MapFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    base: I,$/;"	m	struct:Map
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    base: P,$/;"	m	struct:MapProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: C,$/;"	m	struct:MapInitConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: C,$/;"	m	struct:MapWithConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: C,$/;"	m	struct:MapWithFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: I,$/;"	m	struct:MapInit
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: I,$/;"	m	struct:MapWith
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: I,$/;"	m	struct:MapWithIter
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: P,$/;"	m	struct:MapInitProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    base: P,$/;"	m	struct:MapWithProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    base: I,$/;"	m	struct:Rev
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    base: P,$/;"	m	struct:RevProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    base: I,$/;"	m	struct:Skip
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    base: I,$/;"	m	struct:Take
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    base: C,$/;"	m	struct:TryFoldConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    base: C,$/;"	m	struct:TryFoldFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    base: C,$/;"	m	struct:TryFoldWithConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    base: I,$/;"	m	struct:TryFold
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    base: I,$/;"	m	struct:TryFoldWith
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    base: I,$/;"	m	struct:UnzipA
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    base: I,$/;"	m	struct:UnzipB
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    base: C,$/;"	m	struct:UpdateConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    base: C,$/;"	m	struct:UpdateFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    base: I,$/;"	m	struct:Update
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    base: I,$/;"	m	struct:UpdateSeq
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    base: P,$/;"	m	struct:UpdateProducer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    base: C,$/;"	m	struct:WhileSomeConsumer
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    base: C,$/;"	m	struct:WhileSomeFolder
base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    base: I,$/;"	m	struct:WhileSome
base_avg_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_avg_times: Vec<f64>,$/;"	m	struct:ComparisonData
base_dir_exists	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn base_dir_exists(id: &BenchmarkId, baseline: &str, output_directory: &str) -> bool {$/;"	f
base_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_estimates: Estimates,$/;"	m	struct:ComparisonData
base_iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_iter_counts: Vec<f64>,$/;"	m	struct:ComparisonData
base_sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub base_sample_times: Vec<f64>,$/;"	m	struct:ComparisonData
baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline: Baseline,$/;"	m	struct:Criterion
baseline_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    baseline_directory: String,$/;"	m	struct:Criterion
basic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn basic() {$/;"	f
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn batching<I, F>(iter: I, f: F) -> Batching<I, F> {$/;"	f
batching	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn batching<B, F>(self, f: F) -> Batching<Self, F>$/;"	P	interface:Itertools
bcd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    bcd: &'a str,$/;"	m	struct:tests::Parser
be_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_f32(input: &[u8]) -> IResult<&[u8], f32> {$/;"	f
be_f32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn be_f32_tests() {$/;"	f	module:tests
be_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_f64(input: &[u8]) -> IResult<&[u8], f64> {$/;"	f
be_f64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn be_f64_tests() {$/;"	f	module:tests
be_i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i128(i: &[u8]) -> IResult<&[u8], i128> {$/;"	f
be_i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i16(i: &[u8]) -> IResult<&[u8], i16> {$/;"	f
be_i24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i24(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
be_i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i32(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
be_i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i64(i: &[u8]) -> IResult<&[u8], i64> {$/;"	f
be_i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_i8(i: &[u8]) -> IResult<&[u8], i8> {$/;"	f
be_u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u128(i: &[u8]) -> IResult<&[u8], u128, u32> {$/;"	f
be_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
be_u24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u24(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
be_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
be_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u64(i: &[u8]) -> IResult<&[u8], u64, u32> {$/;"	f
be_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn be_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
begin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn begin(input: &[u8]) -> IResult<(), &[u8]> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench<B: BenchmarkDefinition>($/;"	P	implementation:Criterion
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, iters: &[u64]) -> Vec<f64> {$/;"	P	implementation:Program
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &()) -> Vec<f64> {$/;"	P	implementation:Command
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn bench(&mut self, program: &mut Option<Program>, iters: &[u64], _: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, _: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64> {$/;"	f
bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn bench(&mut self, m: &mut Option<Program>, iters: &[u64], parameter: &T) -> Vec<f64>;$/;"	P	interface:Routine
bench_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function<F>(&mut self, id: &str, f: F) -> &mut Criterion$/;"	P	implementation:Criterion
bench_function_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_function_over_inputs<I, F>(&mut self, id: &str, f: F, inputs: I) -> &mut Criter/;"	P	implementation:Criterion
bench_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_functions<I>(&mut self, id: &str, funs: Vec<Fun<I>>, input: I) -> &mut Criterio/;"	P	implementation:Criterion
bench_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program(&mut self, id: &str, program: Command) -> &mut Criterion {$/;"	P	implementation:Criterion
bench_program_over_inputs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn bench_program_over_inputs<I, F>($/;"	P	implementation:Criterion
benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod benchmark;$/;"	n
benchmark_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^macro_rules! benchmark_config {$/;"	M
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
benchmark_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn benchmark_start(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexContext
benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    benchmarks: Vec<IndividualBenchmark>,$/;"	m	struct:SummaryContext
best_found	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    best_found: &'p AtomicUsize,$/;"	m	struct:FindConsumer
best_found	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    best_found: &'p AtomicUsize,$/;"	m	struct:FindFolder
better_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^fn better_position(pos1: usize, pos2: usize, mp: MatchPosition) -> bool {$/;"	f
binary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod binary;$/;"	n
binary_heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod binary_heap;$/;"	n
bitand	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitand(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bitmask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod bitmask;$/;"	n
bitor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bits ($/;"	M
bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod bits;$/;"	n
bits_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bits_impl ($/;"	M
bits_to_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn bits_to_bytes() {$/;"	f	module:tests
bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod bitwise;$/;"	n
bitxor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn bitxor(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
black_box	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn black_box<T>(dummy: T) -> T {$/;"	f
body	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn body(infos: &DayParts, lib: Option<pm2::Ident>) -> pm2::TokenStream {$/;"	f
bold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn bold(&self, s: String) -> String {$/;"	P	implementation:CliReport
borrow_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn borrow_mut(&self) -> Result<RefMut<InnerMap>, MapError> {$/;"	P	implementation:Map
both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod both;$/;"	n
bottom_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    bottom_group: usize,$/;"	m	struct:GroupInner
boundary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    boundary: usize,$/;"	m	struct:FindFolder
branch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod branch;$/;"	n
break_patterns	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn break_patterns<T>(v: &mut [T]) {$/;"	f
bridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub fn bridge<I, C>(par_iter: I, consumer: C) -> C::Result$/;"	f
bridge_producer_consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub fn bridge_producer_consumer<P, C>(len: usize, producer: P, consumer: C) -> C::Result$/;"	f
bridge_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^pub fn bridge_unindexed<P, C>(producer: P, consumer: C) -> C::Result$/;"	f
bridge_unindexed_producer_consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^fn bridge_unindexed_producer_consumer<P, C>(migrated: bool,$/;"	f
btree_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod btree_map;$/;"	n
btree_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod btree_set;$/;"	n
bucket	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn bucket(&self, index: usize) -> Bucket<T> {$/;"	P	implementation:RawTable
bucket_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn bucket_index(&self, bucket: &Bucket<T>) -> usize {$/;"	P	implementation:RawTable
bucket_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    bucket_mask: usize,$/;"	m	struct:RawTable
bucket_mask_to_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn bucket_mask_to_capacity(bucket_mask: usize) -> usize {$/;"	f
buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn buckets(&self) -> usize {$/;"	P	implementation:RawTable
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    buf: VecDeque<I::Item>,$/;"	m	struct:MultiPeek
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:TupleBuffer
buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    buf: T::Buffer,$/;"	m	struct:Tuples
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    buffer: String,$/;"	m	struct:Program
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    buffer: Vec<I::Item>,$/;"	m	struct:LazyBuffer
buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    buffer: Vec<vec::IntoIter<I::Item>>,$/;"	m	struct:GroupInner
buffer_with_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn buffer_with_size() {$/;"	f	module:tests
build	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    fn build(cmds: impl Iterator<Item = MetaCommand>) -> Result<AocMeta, Box<error::Error>> {$/;"	P	implementation:AocMeta
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^            bytes: [u8; Group::WIDTH],$/;"	m	struct:Group::static_empty::Dummy
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bytes ($/;"	M
bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod bytes;$/;"	n
bytes_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! bytes_impl ($/;"	M
bytes_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn bytes_per_second(bytes_per_second: f64) -> String {$/;"	f
calculate_layout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn calculate_layout<T>(buckets: usize) -> Option<(Layout, usize)> {$/;"	f
call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! call ($/;"	M
call_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! call_m ($/;"	M
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, _arg: A) -> Self::Key {$/;"	P	implementation:ChunkIndex
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key {$/;"	f
call_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn call_mut(&mut self, arg: A) -> Self::Key;$/;"	P	interface:KeyFunction
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackA
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackB
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            fn callback<A>(self, a_producer: A) -> Self::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^            fn callback<B>(self, b_producer: B) -> Self::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackI
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackJ
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            fn callback<I>(self, i_producer: I) -> Self::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            fn callback<J>(self, j_producer: J) -> Self::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^        fn callback<P>(self, producer: P) -> C::Result$/;"	f	function:bridge
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn callback<P>(self, producer: P) -> Self::Output where P: Producer<Item = T>;$/;"	P	interface:ProducerCallback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^        fn callback<P>(self, producer: P)$/;"	P	implementation:check_drops::Partial
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^        fn callback<P>(self, producer: P)$/;"	P	implementation:check_indices_after_enumerate_split::WithProducer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^            callback: CB,$/;"	m	struct:with_producer::Callback
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^            fn callback<P>(self, base: P) -> CB::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackA
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            callback: CB,$/;"	m	struct:with_producer::CallbackB
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            fn callback<A>(self, a_producer: A) -> Self::Output$/;"	f	function:with_producer
callback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^            fn callback<B>(self, b_producer: B) -> Self::Output$/;"	f	function:with_producer
can_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn can_plot(&self) -> bool {$/;"	P	implementation:Criterion
cannot_collect_filtermap_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod cannot_collect_filtermap_data;$/;"	n
cannot_zip_filtered_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod cannot_zip_filtered_data;$/;"	n
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:RawTable
capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity_to_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn capacity_to_buckets(cap: usize) -> usize {$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn cartesian_product<I, J>(mut i: I, j: J) -> Product<I, J>$/;"	f
cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn cartesian_product<J>(self, other: J) -> Product<Self, J::IntoIter>$/;"	P	interface:Itertools
case_insensitive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn case_insensitive() {$/;"	f	module:test
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^crate mod cast;$/;"	n
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn cast(self) -> T;$/;"	P	interface:Cast
cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn cast(self) -> U {$/;"	f
cause	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn cause(&self) -> Option<&Error> {$/;"	f
cause	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn cause(&self) -> Option<&Error> {$/;"	f
cautious	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^    pub(crate) fn cautious(hint: Option<usize>) -> usize {$/;"	f	module:size_hint
cell_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod cell_par_iter;$/;"	n
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn chain<I, J>(i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>/;"	f
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    chain: iter::Chain<A, B>,$/;"	m	struct:ChainSeq
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn chain<C>(self, chain: C) -> Chain<Self, C::Iter>$/;"	P	interface:ParallelIterator
chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod chain;$/;"	n
chain_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn chain_bits() {$/;"	f	module:tests
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn change(pct: f64, signed: bool) -> String {$/;"	f
change	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    change: ConfidenceInterval,$/;"	m	struct:Comparison
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn char() {$/;"	f	module:tests
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! char ($/;"	M
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsChar for char {$/;"	c
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for char {$/;"	c
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsChar for &'a char {$/;"	c
char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl Pattern for char {$/;"	c
char_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn char_str() {$/;"	f	module:tests
character	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod character;$/;"	n
character	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn character() {$/;"	f	module:tests
character_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn character_s() {$/;"	f	module:tests
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:Bytes
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:BytesProducer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:CharIndices
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:CharIndicesProducer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:Chars
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:CharsProducer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:EncodeUtf16
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:EncodeUtf16Producer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:MatchIndices
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:MatchIndicesProducer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:Matches
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:MatchesProducer
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:Split
chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    chars: &'ch str,$/;"	m	struct:SplitTerminator
check	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    fn check(min: usize, max: usize) {$/;"	f	function:check_lengths
check	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    fn check<C>()$/;"	f	function:check_extend_items
check	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^    fn check<C>()$/;"	f	function:check_extend_pairs
check	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        fn check(left: &[u32], right: &[u32]) {$/;"	f	function:tests::test_split_for_merge
check_binary_heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_binary_heap() {$/;"	f
check_btree_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_btree_map() {$/;"	f
check_btree_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_btree_set() {$/;"	f
check_chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_chain() {$/;"	f
check_chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_chunks() {$/;"	f
check_chunks_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_chunks_empty() {$/;"	f
check_chunks_even_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_chunks_even_size() {$/;"	f
check_chunks_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_chunks_len() {$/;"	f
check_chunks_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_chunks_mut() {$/;"	f
check_chunks_uneven	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_chunks_uneven() {$/;"	f
check_chunks_zero_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_chunks_zero_size() {$/;"	f
check_cmp_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_direct() {$/;"	f
check_cmp_gt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_gt_direct() {$/;"	f
check_cmp_gt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_gt_to_seq() {$/;"	f
check_cmp_lengths	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_lengths() {$/;"	f
check_cmp_lt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_lt_direct() {$/;"	f
check_cmp_lt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_lt_to_seq() {$/;"	f
check_cmp_rng_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_rng_to_seq() {$/;"	f
check_cmp_short_circuit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_short_circuit() {$/;"	f
check_cmp_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_cmp_to_seq() {$/;"	f
check_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_count() {$/;"	f
check_div_round_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/math.rs	/^    fn check_div_round_up() {$/;"	f	module:tests
check_drops	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_drops() {$/;"	f
check_either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_either() {$/;"	f
check_either_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_either_extend() {$/;"	f
check_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_empty() {$/;"	f
check_empty_flat_map_sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_empty_flat_map_sum() {$/;"	f
check_enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_enumerate() {$/;"	f
check_enumerate_rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_enumerate_rev() {$/;"	f
check_eq_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_eq_direct() {$/;"	f
check_eq_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_eq_to_seq() {$/;"	f
check_extend_heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_extend_heap() {$/;"	f
check_extend_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_extend_items() {$/;"	f
check_extend_pairs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_extend_pairs() {$/;"	f
check_find_is_present	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_find_is_present() {$/;"	f
check_find_not_present	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_find_not_present() {$/;"	f
check_flat_map_nested_ranges	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_flat_map_nested_ranges() {$/;"	f
check_flatten_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_flatten_vec() {$/;"	f
check_flatten_vec_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_flatten_vec_empty() {$/;"	f
check_fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_fold_with() {$/;"	f
check_for_each_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_for_each_with() {$/;"	f
check_ge_equal_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ge_equal_direct() {$/;"	f
check_ge_equal_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ge_equal_to_seq() {$/;"	f
check_ge_greater_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ge_greater_direct() {$/;"	f
check_ge_greater_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ge_greater_to_seq() {$/;"	f
check_gt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_gt_direct() {$/;"	f
check_gt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_gt_to_seq() {$/;"	f
check_hash_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_hash_map() {$/;"	f
check_hash_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_hash_set() {$/;"	f
check_increment	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_increment() {$/;"	f
check_indices_after_enumerate_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_indices_after_enumerate_split() {$/;"	f
check_inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_inspect() {$/;"	f
check_interleave_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_interleave_eq() {$/;"	f
check_interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_interleave_shortest() {$/;"	f
check_interleave_uneven	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_interleave_uneven() {$/;"	f
check_le_equal_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_le_equal_direct() {$/;"	f
check_le_equal_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_le_equal_to_seq() {$/;"	f
check_le_less_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_le_less_direct() {$/;"	f
check_le_less_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_le_less_to_seq() {$/;"	f
check_lengths	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_lengths() {$/;"	f
check_linked_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_linked_list() {$/;"	f
check_lt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_lt_direct() {$/;"	f
check_lt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_lt_to_seq() {$/;"	f
check_map_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_map_indexed() {$/;"	f
check_map_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_map_with() {$/;"	f
check_move	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_move() {$/;"	f
check_ne_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ne_direct() {$/;"	f
check_ne_lengths	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ne_lengths() {$/;"	f
check_ne_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_ne_to_seq() {$/;"	f
check_once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_once() {$/;"	f
check_options	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_options() {$/;"	f
check_partial_cmp_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_direct() {$/;"	f
check_partial_cmp_gt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_gt_direct() {$/;"	f
check_partial_cmp_gt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_gt_to_seq() {$/;"	f
check_partial_cmp_late_nan_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_late_nan_direct() {$/;"	f
check_partial_cmp_late_nane_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_late_nane_to_seq() {$/;"	f
check_partial_cmp_lt_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_lt_direct() {$/;"	f
check_partial_cmp_lt_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_lt_to_seq() {$/;"	f
check_partial_cmp_nan_short_circuit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_nan_short_circuit() {$/;"	f
check_partial_cmp_none_direct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_none_direct() {$/;"	f
check_partial_cmp_none_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_none_to_seq() {$/;"	f
check_partial_cmp_rng_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_rng_to_seq() {$/;"	f
check_partial_cmp_short_circuit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_short_circuit() {$/;"	f
check_partial_cmp_to_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_partial_cmp_to_seq() {$/;"	f
check_partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_partition() {$/;"	f
check_partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_partition_map() {$/;"	f
check_range_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_range_indexed() {$/;"	f
check_range_split_at_overflow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^fn check_range_split_at_overflow() {$/;"	f
check_repeat_find_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeat_find_any() {$/;"	f
check_repeat_take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeat_take() {$/;"	f
check_repeat_unbounded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeat_unbounded() {$/;"	f
check_repeat_zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeat_zip() {$/;"	f
check_repeatn_zip_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeatn_zip_left() {$/;"	f
check_repeatn_zip_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_repeatn_zip_right() {$/;"	f
check_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_results() {$/;"	f
check_rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_rev() {$/;"	f
check_skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_skip() {$/;"	f
check_slice_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_slice_indexed() {$/;"	f
check_slice_mut_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_slice_mut_indexed() {$/;"	f
check_slice_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_slice_split() {$/;"	f
check_slice_split_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_slice_split_mut() {$/;"	f
check_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_split() {$/;"	f
check_sum_filtered_ints	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_sum_filtered_ints() {$/;"	f
check_sum_filtermap_ints	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_sum_filtermap_ints() {$/;"	f
check_take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_take() {$/;"	f
check_unix_lineending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn check_unix_lineending() {$/;"	f	module:tests
check_unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_unzip() {$/;"	f
check_unzip_into_vecs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_unzip_into_vecs() {$/;"	f
check_update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn check_update() {$/;"	f
check_vec_deque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_vec_deque() {$/;"	f
check_vec_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_vec_indexed() {$/;"	f
check_while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_while_some() {$/;"	f
check_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_windows() {$/;"	f
check_windows_lineending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn check_windows_lineending() {$/;"	f	module:tests
check_zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip() {$/;"	f
check_zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_eq() {$/;"	f
check_zip_eq_into_mut_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_eq_into_mut_par_iter() {$/;"	f
check_zip_eq_into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_eq_into_par_iter() {$/;"	f
check_zip_eq_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_eq_range() {$/;"	f
check_zip_into_mut_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_into_mut_par_iter() {$/;"	f
check_zip_into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_into_par_iter() {$/;"	f
check_zip_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn check_zip_range() {$/;"	f
choose_pivot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn choose_pivot<T, F>(v: &mut [T], is_less: &F) -> (usize, bool)$/;"	f
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    chunk_size: usize,$/;"	m	struct:ChunkProducer
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    chunk_size: usize,$/;"	m	struct:ChunkSeq
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    chunk_size: usize,$/;"	m	struct:Chunks
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    chunk_size: usize,$/;"	m	struct:ChunksMut
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    chunk_size: usize,$/;"	m	struct:ChunksMutProducer
chunk_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    chunk_size: usize,$/;"	m	struct:ChunksProducer
chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn chunks(self, size: usize) -> IntoChunks<Self>$/;"	P	interface:Itertools
chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn chunks(self, chunk_size: usize) -> Chunks<Self> {$/;"	P	interface:IndexedParallelIterator
chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod chunks;$/;"	n
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:RawTable
clear	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clear_no_drop(&mut self) {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Iter<'a, K, V> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Keys<'a, K, V> {$/;"	P	implementation:Keys
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn clone(&self) -> Values<'a, K, V> {$/;"	P	implementation:Values
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Bucket
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawIter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawTable
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Difference<'a, T, S> {$/;"	P	implementation:Difference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Intersection<'a, T, S> {$/;"	P	implementation:Intersection
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Iter<'a, K> {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> SymmetricDifference<'a, T, S> {$/;"	P	implementation:SymmetricDifference
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn clone(&self) -> Union<'a, T, S> {$/;"	P	implementation:Union
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> KMerge<I> {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn clone(&self) -> RcIter<I> {$/;"	P	implementation:RcIter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Empty
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:IterParallelProducer
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ReduceConsumer
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:TryReduceConsumer
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:TryReduceWithConsumer
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Chunks
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Iter
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Split
clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Windows
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! clone_fields {$/;"	M
clone_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^macro_rules! clone_fields {$/;"	M
clone_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    clone_first: Cell<bool>,$/;"	m	struct:IntersperseConsumer
clone_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    clone_first: bool,$/;"	m	struct:IntersperseFolder
clone_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    clone_first: bool,$/;"	m	struct:IntersperseIter
clone_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    clone_first: bool,$/;"	m	struct:IntersperseProducer
clone_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    clone_last: bool,$/;"	m	struct:IntersperseIter
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn cloned<'a, I, T: 'a>(iterable: I) -> iter::Cloned<I::IntoIter>$/;"	f
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/no_send_par_iter.rs	/^mod cloned {}$/;"	n
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn cloned<'a, T>(self) -> Cloned<Self>$/;"	P	interface:ParallelIterator
cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod cloned;$/;"	n
closure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! closure ($/;"	M
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    cmp: F,$/;"	m	struct:MergeBy
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod cmp;$/;"	n
cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn cmp<I>(self, other: I) -> Ordering$/;"	P	interface:IndexedParallelIterator
cmp	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:sweepline::HorizontalSwipe
cmp	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	P	implementation:sweepline::SweepEvent
cmp_fn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    cmp_fn: F$/;"	m	struct:MergeJoinBy
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn coalesce<I, F>(mut iter: I, f: F) -> Coalesce<I, F>$/;"	f
coalesce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn coalesce<F>(self, f: F) -> Coalesce<Self, F>$/;"	P	interface:Itertools
code_from_offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn code_from_offset<E>(v: &[(ErrorKind<E>, usize, usize)], offset: usize) -> Option<u32> {$/;"	f
codegen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod codegen;$/;"	n
collapse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^fn collapse(runs: &[Run]) -> Option<usize> {$/;"	f
collapse	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^fn collapse(input: impl IntoIterator<Item = u8>, polymer: &mut Vec<u8>) {$/;"	f
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn collect<C>(self) -> C$/;"	f
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn collect<C>(self) -> C$/;"	P	interface:ParallelIterator
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod collect;$/;"	n
collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn collect<C>(self) -> C$/;"	f
collect_extended	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^fn collect_extended<C, I>(par_iter: I) -> C$/;"	f
collect_from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter<I>(iter: I, buf: &mut Self::Buffer) -> Option<Self>$/;"	P	interface:TupleCollect
collect_from_iter_no_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn collect_from_iter_no_buf<I>(iter: I) -> Option<Self>$/;"	P	interface:TupleCollect
collect_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^pub fn collect_into_vec<I, T>(pi: I, v: &mut Vec<T>)$/;"	f
collect_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn collect_into_vec(self, target: &mut Vec<Self::Item>) {$/;"	P	interface:IndexedParallelIterator
collect_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_tuple<T>(mut self) -> Option<T>$/;"	P	interface:Itertools
collect_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn collect_vec(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
collections	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod collections;$/;"	n
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^pub fn combinations<I>(iter: I, n: usize) -> Combinations<I>$/;"	f
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn combinations(self, n: usize) -> Combinations<Self>$/;"	P	interface:Itertools
combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod combinations;$/;"	n
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^pub(crate) fn common($/;"	f
common	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^pub(crate) fn common<T>($/;"	f
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^mod compare;$/;"	n
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:u8
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:str
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:u8
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare(&self, t: T) -> CompareResult;$/;"	P	interface:Compare
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteStr
compare	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:Input
compare_error_paths	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn compare_error_paths<P: Clone + PartialEq, E: Clone + PartialEq>(e1: &Context<P, E>, e2: &/;"	f
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, _: &'b str) -> CompareResult {$/;"	P	implementation:str
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:u8
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:str
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:u8
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn compare_no_case(&self, t: T) -> CompareResult;$/;"	P	interface:Compare
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b [u8]) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteByteSlice
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:CompleteStr
compare_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn compare_no_case(&self, t: &'b str) -> CompareResult {$/;"	P	implementation:Input
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
compare_to_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn compare_to_threshold(estimate: &Estimate, noise: f64) -> ComparisonResult {$/;"	f
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    comparison: Option<Comparison>,$/;"	m	struct:Context
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn comparison(&self, measurements: &MeasurementData) -> Option<Comparison> {$/;"	P	implementation:Html
comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub comparison: Option<ComparisonData>,$/;"	m	struct:MeasurementData
compile_count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  pub fn compile_count_fixed(input: &[u8]) -> IResult<&[u8], ()> {$/;"	f	module:tests
compile_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod compile_fail;$/;"	n
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! complete ($/;"	M
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn complete() {$/;"	f	module:tests
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn complete(self) -> F::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn complete(self) {$/;"	P	implementation:CollectFolder
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    fn complete(self) {$/;"	P	implementation:Collect
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn complete(self) -> Self::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn complete(self) -> Self::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn complete(self) -> Self::Result {$/;"	P	implementation:FindFolder
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn complete(self) -> Self::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn complete(self) {}$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn complete(self) {}$/;"	P	implementation:NoopConsumer
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn complete(self) -> Self::Result;$/;"	P	interface:Folder
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn complete(self) -> P {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn complete(self) -> T {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn complete(self) -> S {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn complete(self) -> T {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn complete(self) -> Option<T> {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn complete(self) -> Self::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn complete(self) -> C::Result {$/;"	f
complete_char	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn complete_char() {$/;"	f	module:tests
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/concat_impl.rs	/^pub fn concat<I>(iterable: I) -> I::Item$/;"	f
concat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn concat(self) -> Self::Item$/;"	P	interface:Itertools
concat_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod concat_impl;$/;"	n
cond	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn cond() {$/;"	f	module:tests
cond	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond($/;"	M
cond_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond_reduce($/;"	M
cond_with_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! cond_with_error($/;"	M
cond_wrapping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn cond_wrapping() {$/;"	f	module:tests
confidence	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    confidence: String,$/;"	m	struct:Context
confidence_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_interval: ConfidenceInterval,$/;"	m	struct:Estimate
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    confidence_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub confidence_level: f64,$/;"	m	struct:BenchmarkConfig
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    confidence_level: f64,$/;"	m	struct:ConfidenceInterval
confidence_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn confidence_level(mut self, cl: f64) -> Criterion {$/;"	P	implementation:Criterion
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:Benchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    config: PartialBenchmarkConfig,$/;"	m	struct:ParameterizedBenchmark
config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    config: BenchmarkConfig,$/;"	m	struct:Criterion
configurable_endianness	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn configurable_endianness() {$/;"	f	module:tests
configure_from_args	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn configure_from_args(mut self) -> Criterion {$/;"	P	implementation:Criterion
cons_tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^pub fn cons_tuples<I, J>(iterable: I) -> ConsTuples<I, J>$/;"	f
cons_tuples_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod cons_tuples_impl;$/;"	n
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn consume(&self) -> Result<Ref<InnerMap>, MapError> {$/;"	P	implementation:Map
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn consume(&mut self, amt: usize) {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn consume(self, item: &'a T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn consume(mut self, item: T) -> CollectFolder<'c, T> {$/;"	P	implementation:CollectFolder
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn consume(mut self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn consume(mut self, item: T) -> Self {$/;"	P	implementation:FindFolder
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn consume(mut self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn consume(mut self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn consume(self, _item: T) -> Self {$/;"	P	implementation:NoopConsumer
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn consume(self, item: Item) -> Self;$/;"	P	interface:Folder
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn consume(self, item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn consume<FA, FB>(&self, item: (A, B), left: FA, right: FB) -> (FA, FB)$/;"	P	implementation:Unzip
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn consume<FA, FB>(&self, item: T, left: FA, right: FB) -> (FA, FB)$/;"	P	interface:UnzipOp
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn consume<FA, FB>(&self, item: T, left: FA, right: FB) -> (FA, FB)$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn consume<FL, FR>(&self, item: Either<L, R>, left: FL, right: FR) -> (FL, FR)$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn consume(self, mut item: T) -> Self {$/;"	f
consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn consume(mut self, item: Option<T>) -> Self {$/;"	f
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn consume_iter<I>(self, iter: I) -> Self where I: IntoIterator<Item=T> {$/;"	f
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn consume_iter<I>(mut self, iter: I) -> Self$/;"	f
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^   fn consume_iter<I>(self, iter: I) -> Self where I: IntoIterator<Item=T> {$/;"	P	implementation:NoopConsumer
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn consume_iter<I>(mut self, iter: I) -> Self$/;"	P	interface:Folder
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn consume_iter<I>(self, iter: I) -> Self$/;"	f
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn consume_iter<I>(self, iter: I) -> Self$/;"	f
consume_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn consume_iter<I>(self, iter: I) -> Self$/;"	f
consumed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    consumed: Cell<bool>,$/;"	m	struct:Map
consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^mod consumer;$/;"	n
consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^        consumer: C,$/;"	m	struct:bridge::Callback
contains	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn contains<Q: ?Sized>(&self, value: &Q) -> bool$/;"	f
contains_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, k: &Q) -> bool$/;"	f
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn convert(e: Err<I, F>) -> Self {$/;"	P	implementation:Err
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  fn convert(c: Context<I, F>) -> Self {$/;"	P	implementation:Context
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn convert(T) -> Self;$/;"	P	interface:Convert
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn convert(e: ErrorKind<F>) -> Self {$/;"	P	implementation:ErrorKind
convert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  fn convert(c: Context<I, F>) -> Self {$/;"	P	implementation:Context
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
convert_special_to_empty_and_full_to_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn convert_special_to_empty_and_full_to_deleted(&self) -> Group {$/;"	P	implementation:Group
copy_new_dir_to_base	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn copy_new_dir_to_base(id: &str, baseline: &str, output_directory: &str) {$/;"	f
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod cos;$/;"	n
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod cos;$/;"	n
cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos(self) -> Self;$/;"	P	interface:Cos
cos_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_f32(x: f32) -> f32;$/;"	f
cos_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_f64(x: f64) -> f64;$/;"	f
cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod cos_pi;$/;"	n
cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^    fn cos_pi(self) -> Self;$/;"	P	interface:CosPi
cos_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v16f32(x: f32x16) -> f32x16;$/;"	f
cos_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v2f32(x: f32x2) -> f32x2;$/;"	f
cos_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v2f64(x: f64x2) -> f64x2;$/;"	f
cos_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v4f32(x: f32x4) -> f32x4;$/;"	f
cos_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v4f64(x: f64x4) -> f64x4;$/;"	f
cos_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v8f32(x: f32x8) -> f32x8;$/;"	f
cos_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos.rs	/^    fn cos_v8f64(x: f64x8) -> f64x8;$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    count: usize,$/;"	m	struct:Positions
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count() {$/;"	f	module:tests
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! count($/;"	M
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn count(self) -> usize {$/;"	P	interface:ParallelIterator
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    count: usize,$/;"	m	struct:Iter
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    count: usize,$/;"	m	struct:RepeatN
count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    count: usize,$/;"	m	struct:RepeatNProducer
count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_fixed() {$/;"	f	module:tests
count_fixed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! count_fixed ($/;"	M
count_fixed_no_type	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_fixed_no_type() {$/;"	f	module:tests
count_new_keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^fn count_new_keys<I, K>(mut used: HashMap<K, ()>, iterable: I) -> usize$/;"	f
count_overlapped	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn count_overlapped(line: &BTreeSet<HorizontalSwipe>) -> i32 {$/;"	f
count_zero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn count_zero() {$/;"	f	module:tests
cp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn cp(from: &Path, to: &Path) -> Result<()> {$/;"	f
cr_lf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn cr_lf() {$/;"	f	module:tests
criterion_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_group {$/;"	M
criterion_main	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros.rs	/^macro_rules! criterion_main {$/;"	M
crlf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn crlf<T>(input: T) -> IResult<T, T>$/;"	f
csv_report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod csv_report;$/;"	n
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: *const u8,$/;"	m	struct:RawIter
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ctrl: NonNull<u8>,$/;"	m	struct:RawTable
ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn ctrl(&self, index: usize) -> *mut u8 {$/;"	P	implementation:RawTable
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    cur: Option<I::Item>,$/;"	m	struct:MultiProductIter
cur	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    cur: usize,$/;"	m	struct:TupleBuffer
curr_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn curr_iterator(&self) -> Vec<I::Item> {$/;"	f
current_elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_elt: Option<I::Item>,$/;"	m	struct:GroupInner
current_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    current_group: BitMask,$/;"	m	struct:RawIter
current_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn current_index(&self) -> usize {$/;"	P	implementation:FindConsumer
current_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    current_key: Option<K>,$/;"	m	struct:GroupInner
custom_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn custom_error(input: &[u8]) -> IResult<&[u8], &[u8], CustomError> {$/;"	f	module:tests
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: *const T,$/;"	m	struct:RawIter
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    data: NonNull<T>,$/;"	m	struct:RawTable
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    data: D,$/;"	m	struct:Split
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    data: D,$/;"	m	struct:SplitProducer
data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    data: V,$/;"	m	struct:SplitProducer
date	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    date: Date,$/;"	m	struct:Event
day	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    day: usize,$/;"	m	struct:Date
day01	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day01;$/;"	n
day02	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day02;$/;"	n
day03	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day03;$/;"	n
day04	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day04;$/;"	n
day05	/home/atraii/Downloads/tmp/advent2018-rs/src/lib.rs	/^mod day05;$/;"	n
days	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    days: [usize; 60],$/;"	m	struct:Guard
dbg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^macro_rules! dbg ($/;"	M
dbg_dmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^macro_rules! dbg_dmp ($/;"	M
debug	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod debug;$/;"	n
debug_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^fn debug_enabled() -> bool {$/;"	f
debug_fmt_fields	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/impl_macros.rs	/^macro_rules! debug_fmt_fields {$/;"	M
debug_script	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn debug_script(path: &PathBuf, figure: &Figure) {$/;"	f
decrement_and_get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn decrement_and_get<T>(ptr: &mut *mut T) -> *mut T {$/;"	f
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn dedup<I>(mut iter: I) -> Dedup<I>$/;"	f
dedup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dedup(self) -> Dedup<Self>$/;"	P	interface:Itertools
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn default() -> Self {$/;"	P	implementation:PartialBenchmarkConfig
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> Criterion {$/;"	P	implementation:Criterion
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn default() -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn default() -> FxHasher {$/;"	P	implementation:FxHasher
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn default() -> HashMap<K, V, S> {$/;"	f
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn default() -> HashSet<T, S> {$/;"	f
default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod default;$/;"	n
delegate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod delegate;$/;"	n
delegate_indexed_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/delegate.rs	/^macro_rules! delegate_indexed_iterator {$/;"	M
delegate_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/delegate.rs	/^macro_rules! delegate_iterator {$/;"	M
delimited	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn delimited() {$/;"	f	module:tests
delimited	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! delimited($/;"	M
delimited_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! delimited_sep ($/;"	M
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn deref() {$/;"	f
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn deref(&self) -> &Self::Target {$/;"	P	implementation:CompleteByteSlice
deref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn deref(&self) -> &Self::Target {$/;"	P	implementation:CompleteStr
deref_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
derive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod derive;$/;"	n
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn description(&self) -> &str {$/;"	f
description	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  pub fn description(&self) -> &str {$/;"	P	implementation:ErrorKind
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        dest: *mut T,$/;"	m	struct:insert_head::InsertionHole
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        dest: *mut T,$/;"	m	struct:merge::MergeHole
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        dest: *mut T,$/;"	m	struct:par_merge::State
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    dest: *mut T,$/;"	m	struct:CopyOnDrop
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    dest: *mut T,$/;"	m	struct:CopyOnDrop
dest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    dest: *mut T,$/;"	m	struct:WriteOnDrop
diff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod diff;$/;"	n
diff_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs	/^pub fn diff_with<I, J, F>(i: I, j: J, is_equal: F)$/;"	f
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn difference<'a, 'new>($/;"	f	function:assert_covariance
difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn difference<'a>(&'a self, other: &'a HashSet<T, S>) -> Difference<'a, T, S> {$/;"	f
digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit<T>(input: T) -> IResult<T, T>$/;"	f
digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit0<T>(input: T) -> IResult<T, T>$/;"	f
digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn digit1<T>(input: T) -> IResult<T, T>$/;"	f
directory_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    directory_name: String,$/;"	m	struct:BenchmarkId
distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub distributions: Distributions,$/;"	m	struct:MeasurementData
div_round_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/math.rs	/^pub fn div_round_up(n: usize, divisor: usize) -> usize {$/;"	f
divide_and_conquer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn divide_and_conquer<'scope>(scope: &Scope<'scope>, counter: &'scope AtomicUsize, size: usize) /;"	f
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn do_parse() {$/;"	f	module:tests
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! do_parse ($/;"	M
do_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn do_parse() {$/;"	f	module:tests
do_parse_dependency	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn do_parse_dependency() {$/;"	f	module:tests
do_parse_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! do_parse_sep ($/;"	M
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    done: bool,$/;"	m	struct:LazyBuffer
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    done: bool,$/;"	m	struct:GroupInner
done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    done: &'a AtomicBool,$/;"	m	struct:IterParallelProducer
dont_work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn dont_work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
dont_work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn dont_work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
double	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn double<T>(input: T) -> IResult<T, f64, u32>$/;"	f
double_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn double_s<T>(input: T) -> IResult<T, f64, u32>$/;"	f
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn drain<'new>($/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn drain(&mut self) -> Drain<K, V> {$/;"	f
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drain(&mut self) -> RawDrain<T> {$/;"	P	implementation:RawTable
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn drain<'new>(d: Drain<'static, &'static str>) -> Drain<'new, &'new str> {$/;"	f	function:assert_covariance
drain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn drain(&mut self) -> Drain<T> {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Empty
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result;$/;"	P	interface:IndexedParallelIterator
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Once
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    fn drive<C: Consumer<Self::Item>>(self, consumer: C) -> C::Result {$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IntoIter
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	f
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Chunks
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:ChunksMut
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Iter
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IterMut
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Windows
drive	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn drive<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IntoIter
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Empty
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result where C: UnindexedConsumer<Self::Item>/;"	P	interface:ParallelIterator
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Once
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IntoIter
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Chunks
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:ChunksMut
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Iter
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IterMut
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Windows
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	f
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Bytes
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:CharIndices
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Chars
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:EncodeUtf16
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Lines
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:MatchIndices
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Matches
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:Split
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:SplitTerminator
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:SplitWhitespace
drive_unindexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn drive_unindexed<C>(self, consumer: C) -> C::Result$/;"	P	implementation:IntoIter
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawDrain
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawIntoIter
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RawTable
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn drop(&self) {$/;"	P	implementation:Bucket
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^        fn drop(&mut self) {$/;"	P	implementation:check_drops::DropCounter
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        fn drop(&mut self) {$/;"	P	implementation:insert_head::InsertionHole
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        fn drop(&mut self) {$/;"	P	implementation:insert_head::NoDrop
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        fn drop(&mut self) {$/;"	P	implementation:merge::MergeHole
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        fn drop(&mut self) {$/;"	P	implementation:par_merge::State
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CopyOnDrop
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CopyOnDrop
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:NoDrop
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:WriteOnDrop
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn drop(&mut self) {$/;"	P	implementation:SliceDrain
drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn drop(&mut self) {$/;"	P	implementation:VecProducer
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&mut self, client: usize) {$/;"	f
drop_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn drop_group(&self, client: usize) {$/;"	f
dropped_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    dropped_group: usize,$/;"	m	struct:GroupInner
dropping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping(mut self, n: usize) -> Self$/;"	P	interface:Itertools
dropping_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn dropping_back(mut self, n: usize) -> Self$/;"	P	interface:Itertools
eat_separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! eat_separator ($/;"	M
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either<F, G, T>(self, f: F, g: G) -> T$/;"	P	implementation:Either
either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! either {$/;"	M
either_or_both	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod either_or_both;$/;"	n
either_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn either_with<Ctx, F, G, T>(self, ctx: Ctx, f: F, g: G) -> T$/;"	P	implementation:Either
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^macro_rules! elapsed {$/;"	M
elapsed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    elapsed: Duration,$/;"	m	struct:Bencher
elem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    elem: Bucket<(K, V)>,$/;"	m	struct:OccupiedEntry
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    element: I::Item,$/;"	m	struct:Intersperse
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    element: T,$/;"	m	struct:Iter
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    element: T,$/;"	m	struct:Repeat
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    element: T,$/;"	m	struct:RepeatN
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    element: T,$/;"	m	struct:RepeatNProducer
element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    element: T,$/;"	m	struct:RepeatProducer
elements_per_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn elements_per_second(elements_per_second: f64) -> String {$/;"	f
elt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    elt: Option<A>,$/;"	m	struct:RepeatN
empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^pub fn empty<T: Send>() -> Empty<T> {$/;"	f
empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod empty;$/;"	n
enable_text_coloring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_coloring: bool,$/;"	m	struct:CliReport
enable_text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub enable_text_overwrite: bool,$/;"	m	struct:CliReport
end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    end: *const u8,$/;"	m	struct:RawIter
end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        end: *mut T,$/;"	m	struct:merge::MergeHole
end_of_line	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn end_of_line() {$/;"	f	module:tests
end_of_line_completestr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  pub fn end_of_line_completestr(input: CompleteStr) -> IResult<CompleteStr, CompleteStr> {$/;"	f	module:tests
entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn entry(&mut self, key: K) -> Entry<K, V, S> {$/;"	f
enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn enumerate<I>(iterable: I) -> iter::Enumerate<I::IntoIter>$/;"	f
enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn enumerate(self) -> Enumerate<Self> {$/;"	P	interface:IndexedParallelIterator
enumerate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod enumerate;$/;"	n
eof	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! eof ($/;"	M
eol	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn eol<T>(input: T) -> IResult<T, T>$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn eq(&self, other: &HashMap<K, V, S>) -> bool {$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn eq(&self, other: &HashSet<T, S>) -> bool {$/;"	f
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod eq;$/;"	n
eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn eq<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn equal<I, J>(a: I, b: J) -> bool$/;"	f
erase_no_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn erase_no_drop(&mut self, item: &Bucket<T>) {$/;"	P	implementation:RawTable
err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn err() {$/;"	f	module:tests
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod error;$/;"	n
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn error() {$/;"	f
error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    error: &'a mut Result<(), E>,$/;"	m	struct:ProcessResults
error_node_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^macro_rules! error_node_position($/;"	M
error_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^macro_rules! error_position($/;"	M
error_to_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn error_to_list<P: Clone, E: Clone>(e: &Context<P, E>) -> Vec<(P, ErrorKind<E>)> {$/;"	f
error_to_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn error_to_string<P: Clone + PartialEq>(e: &Context<P, u32>) -> &'static str {$/;"	f	module:tests
error_to_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn error_to_u32<E>(e: &ErrorKind<E>) -> u32 {$/;"	f
escape_transform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escape_transform() {$/;"	f	module:tests
escape_underscores	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn escape_underscores(string: &str) -> String {$/;"	f
escaped	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! escaped ($/;"	M
escaped_transform	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! escaped_transform ($/;"	M
escaping	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escaping() {$/;"	f	module:tests
escaping_complete_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn escaping_complete_str() {$/;"	f	module:tests
estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod estimate;$/;"	n
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn estimates($/;"	f
estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn estimates(avg_times: &Sample<f64>, config: &BenchmarkConfig) -> (Distributions, Estimates) {$/;"	f
exact	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! exact ($/;"	M
execute	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn execute() {$/;"	f
execute	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^fn execute<I, OP, FromA, FromB>(pi: I, op: OP) -> (FromA, FromB)$/;"	f
execute_cloned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn execute_cloned() {$/;"	f
execute_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^fn execute_into<I, OP, FromA, FromB>(a: &mut FromA, b: &mut FromB, pi: I, op: OP)$/;"	f
execute_pseudo_indexed_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn execute_pseudo_indexed_range() {$/;"	f
execute_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn execute_range() {$/;"	f
execute_unindexed_range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn execute_unindexed_range() {$/;"	f
exercise_1_sl	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn exercise_1_sl(input: &Vec<LandClaim>) -> i32 {$/;"	f
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod exp;$/;"	n
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod exp;$/;"	n
exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp(self) -> Self;$/;"	P	interface:Exp
exp_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_f32(x: f32) -> f32;$/;"	f
exp_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_f64(x: f64) -> f64;$/;"	f
exp_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v16f32(x: f32x16) -> f32x16;$/;"	f
exp_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v2f32(x: f32x2) -> f32x2;$/;"	f
exp_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v2f64(x: f64x2) -> f64x2;$/;"	f
exp_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v4f32(x: f32x4) -> f32x4;$/;"	f
exp_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v4f64(x: f64x4) -> f64x4;$/;"	f
exp_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v8f32(x: f32x8) -> f32x8;$/;"	f
exp_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/exp.rs	/^    fn exp_v8f64(x: f64x8) -> f64x8;$/;"	f
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
explanation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    explanation: String,$/;"	m	struct:Comparison
expr_opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! expr_opt ($/;"	M
expr_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! expr_res ($/;"	M
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (&'a K, &'a V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn extend<T: IntoIterator<Item = (K, V)>>(&mut self, iter: T) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = &'a T>>(&mut self, iter: I) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^fn extend<C, I, F>(collection: &mut C, par_iter: I, reserve: F)$/;"	f
extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod extend;$/;"	n
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut Self::Extender);$/;"	P	interface:ExtendInto
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:char
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:str
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn extend_into(&self, acc: &mut Vec<u8>) {$/;"	P	implementation:u8
extend_into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn extend_into(&self, acc: &mut String) {$/;"	P	implementation:CompleteStr
extract_meta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn extract_meta($/;"	f
extract_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn extract_result(ty: &syn::Type) -> Option<syn::Type> {$/;"	f
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub f: Box<RefCell<Routine<T>>>,$/;"	m	struct:NamedRoutine
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    f: NamedRoutine<I>,$/;"	m	struct:Fun
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    f: F,$/;"	m	struct:CommandFactory
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    f: F,$/;"	m	struct:Function
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F$/;"	m	struct:MapResults
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Batching
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Coalesce
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Positions
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:TakeWhileRef
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    f: F,$/;"	m	struct:Update
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    f: F,$/;"	m	struct:PeekingTakeWhile
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Iterate
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:RepeatCall
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    f: F,$/;"	m	struct:Unfold
f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    f: F,$/;"	m	struct:UniqueBy
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for f32 {$/;"	c
f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for f32 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for f64 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for f64 {$/;"	c
f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for f64 {$/;"	c
fabs_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_f32(x: f32) -> f32;$/;"	f
fabs_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_f64(x: f64) -> f64;$/;"	f
fabs_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v16f32(x: f32x16) -> f32x16;$/;"	f
fabs_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v2f32(x: f32x2) -> f32x2;$/;"	f
fabs_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v2f64(x: f64x2) -> f64x2;$/;"	f
fabs_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v4f32(x: f32x4) -> f32x4;$/;"	f
fabs_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v4f64(x: f64x4) -> f64x4;$/;"	f
fabs_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v8f32(x: f32x8) -> f32x8;$/;"	f
fabs_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/abs.rs	/^    fn fabs_v8f64(x: f64x8) -> f64x8;$/;"	f
factor_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_first(self) -> (T, Either<L, R>) {$/;"	P	implementation:Either
factor_second	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn factor_second(self) -> (Either<L, R>, T) {$/;"	P	implementation:Either
faint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn faint(&self, s: String) -> String {$/;"	P	implementation:CliReport
fallback_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask.rs	/^mod fallback_impl;$/;"	n
fallback_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! fallback_impl {$/;"	M
fallback_to_other_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! fallback_to_other_impl {$/;"	M
fill_buf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fill_buf(&mut self) -> io::Result<&[u8]> {$/;"	f
filler	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    filler: F,$/;"	m	struct:PadUsing
filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    filter: Option<String>,$/;"	m	struct:Criterion
filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn filter<P>(self, filter_op: P) -> Filter<Self, P>$/;"	P	interface:ParallelIterator
filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod filter;$/;"	n
filter_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/no_send_par_iter.rs	/^mod filter_map {}$/;"	n
filter_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn filter_map<P, R>(self, filter_op: P) -> FilterMap<Self, P>$/;"	P	interface:ParallelIterator
filter_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod filter_map;$/;"	n
filter_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn filter_matches(&self, id: &str) -> bool {$/;"	P	implementation:Criterion
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    filter_op: &'p P,$/;"	m	struct:FilterConsumer
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    filter_op: &'p P,$/;"	m	struct:FilterFolder
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    filter_op: P,$/;"	m	struct:Filter
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    filter_op: &'p P,$/;"	m	struct:FilterMapConsumer
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    filter_op: &'p P,$/;"	m	struct:FilterMapFolder
filter_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    filter_op: P,$/;"	m	struct:FilterMap
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn final_summary(&self, report_context: &ReportContext) {$/;"	P	implementation:Html
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn final_summary(&self) {$/;"	P	implementation:Criterion
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, _context: &ReportContext) {}$/;"	P	interface:Report
final_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn final_summary(&self, context: &ReportContext) {$/;"	P	implementation:Reports
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn find(&self, hash: u64, eq: impl Fn(&T) -> bool) -> Option<Bucket<T>> {$/;"	P	implementation:RawTable
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^pub fn find<I, P>(pi: I, find_op: P) -> Option<I::Item>$/;"	f
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn find<P>(self, predicate: P) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod find;$/;"	n
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn find(&self, separator: &P, start: usize, end: usize) -> Option<usize> {$/;"	f
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn find(&self, separator: &P, start: usize, end: usize) -> Option<usize>;$/;"	P	interface:Fissile
find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn find(&self, separator: &P, start: usize, end: usize) -> Option<usize> {$/;"	P	implementation:str
find_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn find_any<P>(self, predicate: P) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
find_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn find_any() {$/;"	f
find_char_midpoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^fn find_char_midpoint(chars: &str) -> usize {$/;"	f
find_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^pub fn find_first<I, P>(pi: I, find_op: P) -> Option<I::Item>$/;"	f
find_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn find_first<P>(self, predicate: P) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
find_first_folder_does_not_clobber_first_found	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/test.rs	/^fn find_first_folder_does_not_clobber_first_found() {$/;"	f
find_first_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod find_first_last;$/;"	n
find_first_or_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn find_first_or_last() {$/;"	f
find_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn find_in(&self, &str) -> Option<usize>;$/;"	P	interface:private::Pattern
find_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn find_in(&self, chars: &str) -> Option<usize> {$/;"	P	implementation:FN
find_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn find_in(&self, chars: &str) -> Option<usize> {$/;"	P	implementation:char
find_insert_slot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn find_insert_slot(&self, hash: u64) -> usize {$/;"	P	implementation:RawTable
find_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^pub fn find_last<I, P>(pi: I, find_op: P) -> Option<I::Item>$/;"	f
find_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn find_last<P>(self, predicate: P) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
find_last_folder_yields_last_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/test.rs	/^fn find_last_folder_yields_last_match() {$/;"	f
find_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    find_op: &'p P,$/;"	m	struct:FindConsumer
find_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    find_op: &'p P,$/;"	m	struct:FindFolder
find_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    find_op: &'p P,$/;"	m	struct:FindConsumer
find_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    find_op: &'p P,$/;"	m	struct:FindFolder
find_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn find_position<P>(&mut self, mut pred: P) -> Option<(usize, Self::Item)>$/;"	P	interface:Itertools
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b [u8]) -> Option<usize> {$/;"	P	implementation:u8
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:str
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:u8
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_substring(&self, substr: T) -> Option<usize>;$/;"	P	interface:FindSubstring
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b [u8]) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:CompleteStr
find_substring	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_substring(&self, substr: &'b str) -> Option<usize> {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: T) -> bool;$/;"	P	interface:FindToken
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:str
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:u8
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &'a u8) -> bool {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: &u8) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: char) -> bool {$/;"	P	implementation:Input
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:CompleteByteSlice
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:CompleteStr
find_token	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn find_token(&self, token: u8) -> bool {$/;"	P	implementation:Input
finish	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:FxHasher
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    first: bool,$/;"	m	struct:Combinations
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Chunk
first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    first: Option<I::Item>,$/;"	m	struct:Group
fix_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^macro_rules! fix_error ($/;"	M
fix_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^macro_rules! fix_error ($/;"	M
flag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    flag: bool,$/;"	m	struct:Interleave
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^macro_rules! flat_map($/;"	M
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^macro_rules! flat_map($/;"	M
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn flat_map<F, PI>(self, map_op: F) -> FlatMap<Self, F>$/;"	P	interface:ParallelIterator
flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod flat_map;$/;"	n
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn flatten<I, J>(iterable: I) -> Flatten<I::IntoIter, J>$/;"	f
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn flatten(self) -> Flatten<Self, <Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	P	interface:ParallelIterator
flatten	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod flatten;$/;"	n
flip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn flip(self) -> Either<R, L> {$/;"	P	implementation:Either
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn float<T>(input: T) -> IResult<T, f32, u32>$/;"	f
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math.rs	/^mod float;$/;"	n
float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math.rs	/^crate mod float;$/;"	n
float_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod float_arithmetic;$/;"	n
float_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn float_s<T>(input: T) -> IResult<T, f32, u32>$/;"	f
float_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn float_test() {$/;"	f	module:tests
flush	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fma_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v16f32(x: f32x16, y: f32x16, z: f32x16) -> f32x16;$/;"	f
fma_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v2f32(x: f32x2, y: f32x2, z: f32x2) -> f32x2;$/;"	f
fma_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v2f64(x: f64x2, y: f64x2, z: f64x2) -> f64x2;$/;"	f
fma_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v4f32(x: f32x4, y: f32x4, z: f32x4) -> f32x4;$/;"	f
fma_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v4f64(x: f64x4, y: f64x4, z: f64x4) -> f64x4;$/;"	f
fma_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v8f32(x: f32x8, y: f32x8, z: f32x8) -> f32x8;$/;"	f
fma_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn fma_v8f64(x: f64x8, y: f64x8, z: f64x8) -> f64x8;$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/estimate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Statistic
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Entry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Keys
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OccupiedEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:VacantEntry
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Values
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Drain
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoIter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Iter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:CompleteStr
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod fmt;$/;"	n
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Empty
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Filter
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FilterMap
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FlatMap
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Fold
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FoldWith
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Inspect
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Map
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MapInit
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MapWith
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Split
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TryFold
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Update
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Split
fmt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SplitMut
fmt	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Date
fmuladd_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v16f32(x: f32x16, y: f32x16, z: f32x16) -> f32x16;$/;"	f
fmuladd_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v2f32(x: f32x2, y: f32x2, z: f32x2) -> f32x2;$/;"	f
fmuladd_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v2f64(x: f64x2, y: f64x2, z: f64x2) -> f64x2;$/;"	f
fmuladd_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v4f32(x: f32x4, y: f32x4, z: f32x4) -> f32x4;$/;"	f
fmuladd_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v4f64(x: f64x4, y: f64x4, z: f64x4) -> f64x4;$/;"	f
fmuladd_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v8f32(x: f32x8, y: f32x8, z: f32x8) -> f32x8;$/;"	f
fmuladd_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn fmuladd_v8f64(x: f64x8, y: f64x8, z: f64x8) -> f64x8;$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn fold<Acc, G>(self, init: Acc, f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, Fold>(self, init: Acc, mut fold_f: Fold) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(mut self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn fold<Acc, G>(self, mut accum: Acc, mut f: G) -> Acc$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn fold<I, B, F>(iterable: I, init: B, f: F) -> B$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^pub fn fold<U, I, ID, F>(base: I, identity: ID, fold_op: F) -> Fold<I, ID, F>$/;"	f
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn fold<T, ID, F>(self, identity: ID, fold_op: F) -> Fold<Self, ID, F>$/;"	P	interface:ParallelIterator
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod fold;$/;"	n
fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn fold<Acc, G>(self, init: Acc, mut g: G) -> Acc$/;"	f
fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold1<F>(mut self, f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many0
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many1
fold_into_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn fold_into_vec<T>(mut acc: Vec<T>, item: T) -> Vec<T> {$/;"	f	function:tests::fold_many_m_n
fold_is_full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn fold_is_full() {$/;"	f
fold_many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many0() {$/;"	f	module:tests
fold_many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many0($/;"	M
fold_many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many1() {$/;"	f	module:tests
fold_many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many1($/;"	M
fold_many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn fold_many_m_n() {$/;"	f	module:tests
fold_many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! fold_many_m_n($/;"	M
fold_map_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn fold_map_reduce() {$/;"	f
fold_match_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn fold_match_indices<'ch, F>(&self, &'ch str, folder: F, base: usize) -> F$/;"	P	interface:private::Pattern
fold_match_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_match_indices<'ch, F>(&self, chars: &'ch str, folder: F, base: usize) -> F$/;"	P	implementation:FN
fold_match_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_match_indices<'ch, F>(&self, chars: &'ch str, folder: F, base: usize) -> F$/;"	P	implementation:char
fold_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn fold_matches<'ch, F>(&self, &'ch str, folder: F) -> F$/;"	P	interface:private::Pattern
fold_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_matches<'ch, F>(&self, chars: &'ch str, folder: F) -> F$/;"	P	implementation:FN
fold_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_matches<'ch, F>(&self, chars: &'ch str, folder: F) -> F$/;"	P	implementation:char
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fold_op: &'c F,$/;"	m	struct:FoldConsumer
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fold_op: &'c F,$/;"	m	struct:FoldWithConsumer
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fold_op: &'r F,$/;"	m	struct:FoldFolder
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fold_op: F,$/;"	m	struct:Fold
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fold_op: F,$/;"	m	struct:FoldWith
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fold_op: &'c F,$/;"	m	struct:TryFoldConsumer
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fold_op: &'c F,$/;"	m	struct:TryFoldWithConsumer
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fold_op: &'r F,$/;"	m	struct:TryFoldFolder
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fold_op: F,$/;"	m	struct:TryFold
fold_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fold_op: F,$/;"	m	struct:TryFoldWith
fold_options	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_options<A, B, F>(&mut self, mut start: B, mut f: F) -> Option<B>$/;"	P	interface:Itertools
fold_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_results<A, E, B, F>(&mut self, mut start: B, mut f: F) -> Result<B, E>$/;"	P	interface:Itertools
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn fold_splits<F>(self, separator: &P, folder: F, skip_last: bool) -> F$/;"	f
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn fold_splits<F>(self, separator: &P, folder: F, skip_last: bool) -> F$/;"	P	interface:Fissile
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn fold_splits<'ch, F>(&self, &'ch str, folder: F, skip_last: bool) -> F$/;"	P	interface:private::Pattern
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_splits<'ch, F>(&self, chars: &'ch str, folder: F, skip_last: bool) -> F$/;"	P	implementation:FN
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_splits<'ch, F>(&self, chars: &'ch str, folder: F, skip_last: bool) -> F$/;"	P	implementation:char
fold_splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_splits<F>(self, separator: &P, folder: F, skip_last: bool) -> F$/;"	P	implementation:str
fold_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn fold_while<B, F>(&mut self, init: B, mut f: F) -> FoldWhile<B>$/;"	P	interface:Itertools
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn fold_with<F>(self, mut folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:EmptyProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^pub fn fold_with<U, I, F>(base: I, item: U, fold_op: F) -> FoldWith<I, U, F>$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn fold_with<G>(self, folder: G) -> G$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn fold_with<G>(self, folder: G) -> G$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn fold_with<G>(self, folder: G) -> G$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn fold_with<F, T>(self, init: T, fold_op: F) -> FoldWith<Self, T, F>$/;"	P	interface:ParallelIterator
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn fold_with<F>(self, mut folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn fold_with<F>(self, folder: F) -> F where F: Folder<Self::Item>;$/;"	P	interface:UnindexedProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	interface:Producer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:RepeatProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn fold_with<G>(self, folder: G) -> G$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    pub fn fold_with<F>(self, folder: F, skip_last: bool) -> F$/;"	f
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:BytesProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:CharIndicesProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:CharsProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:EncodeUtf16Producer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:MatchIndicesProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:MatchesProducer
fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn fold_with<F>(self, folder: F) -> F$/;"	P	implementation:SplitTerminatorProducer
for_each	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^pub fn for_each<I, F, T>(pi: I, op: &F)$/;"	f
for_each	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn for_each<OP>(self, op: OP)$/;"	P	interface:ParallelIterator
for_each	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod for_each;$/;"	n
for_each_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn for_each_init<OP, INIT, T>(self, init: INIT, op: OP)$/;"	P	interface:ParallelIterator
for_each_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn for_each_with<OP, T>(self, init: T, op: OP)$/;"	P	interface:ParallelIterator
foreach	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn foreach<F>(self, mut f: F)$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod format;$/;"	n
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    fn format<F>(&self, f: &mut fmt::Formatter, mut cb: F) -> fmt::Result$/;"	f
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format(self, sep: &str) -> Format<Self>$/;"	P	interface:Itertools
format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod format;$/;"	n
format_short_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^            fn format_short_estimate(estimate: &Estimate) -> String {$/;"	f	method:CliReport::measurement_complete
format_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn format_with<F>(self, sep: &str, format: F) -> FormatWith<Self, F>$/;"	P	interface:Itertools
found	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    found: &'p AtomicBool,$/;"	m	struct:FindConsumer
found	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    found: &'p AtomicBool,$/;"	m	struct:FindFolder
free	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod free;$/;"	n
free_buckets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn free_buckets(&mut self) {$/;"	P	implementation:RawTable
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    pub fn from(f: &str) -> ArcStr {$/;"	P	implementation:ArcStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub from: PathBuf,$/;"	m	struct:CopyError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn from(r: Result<R, L>) -> Self {$/;"	P	implementation:Either
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn from(iter: I) -> Self {$/;"	P	implementation:Tuple1Combination
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn from(i: u8) -> FakeUint {$/;"	P	implementation:tests::FakeUint
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn from(i: &'a str) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn from(i: u32) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^      fn from(_: u32) -> Self {$/;"	P	implementation:tests::map_res_err::ParseError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::CustomError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::NilError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^    fn from(_: u32) -> Self {$/;"	P	implementation:tests::CustomError
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'a [u8]) -> Self {$/;"	P	implementation:CompleteByteSlice
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'a str) -> Self {$/;"	P	implementation:CompleteStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'b &'a [u8]) -> Self {$/;"	P	implementation:CompleteByteSlice
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn from(src: &'b &'a str) -> Self {$/;"	P	implementation:CompleteStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn from(i: &'a str) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn from(i: u32) -> Self {$/;"	P	implementation:tests::ErrorStr
from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod from;$/;"	n
from_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from.rs	/^mod from_array;$/;"	n
from_attr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    fn from_attr(attr: &syn::Attribute) -> Option<Vec<MetaCommand>> {$/;"	P	implementation:MetaCommand
from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn from_bits(t: Self) -> Self {$/;"	P	implementation:T
from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn from_bits(t: T) -> Self;$/;"	P	interface:FromBits
from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn from_cast(_: T) -> Self;$/;"	P	interface:FromCast
from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^    fn from_cast(t: Self) -> Self {$/;"	P	implementation:T
from_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_error(_: ()) -> Self { None }$/;"	P	implementation:private::Option
from_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_error(v: E) -> Self { Err(v) }$/;"	P	implementation:private::Result
from_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_error(v: Self::Error) -> Self;$/;"	P	interface:private::Try
from_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn from_id(path_prefix: &str, id: &BenchmarkId) -> IndividualBenchmark {$/;"	P	implementation:IndividualBenchmark
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn from_iter<T: IntoIterator<Item = (K, V)>>(iter: T) -> HashMap<K, V, S> {$/;"	f
from_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> HashSet<T, S> {$/;"	f
from_ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_ok(v: Self::Ok) -> Self;$/;"	P	interface:private::Try
from_ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_ok(v: T) -> Self { Ok(v) }$/;"	P	implementation:private::Result
from_ok	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn from_ok(v: T) -> Self { Some(v) }$/;"	P	implementation:private::Option
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self$/;"	P	implementation:FromParallelIterator
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self$/;"	P	implementation:String
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/from_par_iter.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self$/;"	f
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self where I: IntoParallelIterator<Item = T>;$/;"	P	interface:FromParallelIterator
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod from_par_iter;$/;"	n
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self$/;"	f
from_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    fn from_par_iter<I>(par_iter: I) -> Self$/;"	f
from_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn from_ptr(ptr: *const T) -> Self {$/;"	P	implementation:Bucket
from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice.rs	/^mod from_slice;$/;"	n
from_str	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^        fn from_str(input: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:parsers::Event
from_vector	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from.rs	/^mod from_vector;$/;"	n
front	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    front: Option<J>,$/;"	m	struct:Flatten
fs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod fs;$/;"	n
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn full(&self) -> bool {$/;"	P	implementation:CollectConsumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn full(&self) -> bool {$/;"	P	implementation:CollectFolder
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn full(&self) -> bool {$/;"	P	implementation:FindFolder
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn full(&self) -> bool {$/;"	P	implementation:NoopConsumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn full(&self) -> bool;$/;"	P	interface:Consumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn full(&self) -> bool;$/;"	P	interface:Folder
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    full: &'r AtomicBool,$/;"	m	struct:TryReduceConsumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    full: &'r AtomicBool,$/;"	m	struct:TryReduceFolder
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    full: &'r AtomicBool,$/;"	m	struct:TryReduceWithConsumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    full: &'r AtomicBool,$/;"	m	struct:TryReduceWithFolder
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn full(&self) -> bool {$/;"	f
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    full: &'f AtomicBool,$/;"	m	struct:WhileSomeConsumer
full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    full: &'f AtomicBool,$/;"	m	struct:WhileSomeFolder
full_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    full_id: String,$/;"	m	struct:BenchmarkId
full_line_unix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn full_line_unix() {$/;"	f	module:tests
full_line_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn full_line_windows() {$/;"	f	module:tests
function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    function: Option<&'a str>,$/;"	m	struct:CsvRow
function_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub function_id: Option<String>,$/;"	m	struct:BenchmarkId
fused	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fused: Option<bool>,$/;"	m	struct:MergeCore
fx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod fx;$/;"	n
gather_scatter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr.rs	/^mod gather_scatter;$/;"	n
ge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn ge<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
gen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn gen(input: ArcStr) -> Self where Self: Sized;$/;"	P	interface:Runner
gen_binary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_binary_impl_table {$/;"	M
gen_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            gen_result: Option<bool>,$/;"	m	struct:AocMeta::build::Builder
gen_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    gen_result: bool,$/;"	m	struct:AocMeta
gen_tertiary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_tertiary_impl_table {$/;"	M
gen_unary_impl_table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! gen_unary_impl_table {$/;"	M
generate_colors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn generate_colors<E>(v: &[(ErrorKind<E>, usize, usize)]) -> HashMap<u32, u8> {$/;"	f
generate_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_plots($/;"	P	implementation:Html
generate_summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn generate_summary($/;"	P	implementation:Html
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            generator: Option<syn::Ident>,$/;"	m	struct:AocMeta::build::Builder
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    generator: Option<syn::Ident>,$/;"	m	struct:AocMeta
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod generator;$/;"	n
generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub generator: Option<Generator>,$/;"	m	struct:Runner
generator_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/generator.rs	/^pub fn generator_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get(&self) -> &V {$/;"	P	implementation:OccupiedEntry
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>$/;"	f
get	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn get<Q: ?Sized>(&self, value: &Q) -> Option<&T>$/;"	f
get_and_increment	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn get_and_increment<T>(ptr: &mut *mut T) -> *mut T {$/;"	f
get_key_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>$/;"	f
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut V {$/;"	P	implementation:OccupiedEntry
get_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, k: &Q) -> Option<&mut V>$/;"	f
get_name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn get_name(&self) -> syn::Ident {$/;"	P	implementation:Generator
get_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn get_next(&mut self) -> bool {$/;"	f
get_out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn get_out_t(&self) -> pm2::TokenStream {$/;"	P	implementation:Generator
get_sleepmin	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^fn get_sleepmin(input: &Vec<Event>) -> SleepMin {$/;"	f
global_writes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    global_writes: &'c AtomicUsize,$/;"	m	struct:CollectFolder
green	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn green(&self, s: String) -> String {$/;"	P	implementation:CliReport
group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    group: &'a str,$/;"	m	struct:CsvRow
group_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn group_by<K, F>(self, key: F) -> GroupBy<K, Self, F>$/;"	P	interface:Itertools
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    group_id: String,$/;"	m	struct:SummaryContext
group_id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub group_id: String,$/;"	m	struct:BenchmarkId
group_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn group_key(&mut self, client: usize) -> K {$/;"	f
group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod group_map;$/;"	n
groupbylazy	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod groupbylazy;$/;"	n
growth_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    growth_left: usize,$/;"	m	struct:RawTable
gt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn gt<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
h1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h1(hash: u64) -> usize {$/;"	f
h2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn h2(hash: u64) -> u8 {$/;"	f
handlebars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    handlebars: Handlebars,$/;"	m	struct:Html
handled_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    handled_first: bool,$/;"	m	struct:WithPosition
has_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_left(&self) -> bool {$/;"	P	implementation:EitherOrBoth
has_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn has_right(&self) -> bool {$/;"	P	implementation:EitherOrBoth
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    hash: usize,$/;"	m	struct:FxHasher
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash: u64,$/;"	m	struct:VacantEntry
hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod hash;$/;"	n
hash_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    hash_builder: S,$/;"	m	struct:HashMap
hash_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_map {$/;"	n
hash_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod hash_map;$/;"	n
hash_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^pub mod hash_set {$/;"	n
hash_set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod hash_set;$/;"	n
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn hasher(&self) -> &S {$/;"	f
head	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    head: I::Item,$/;"	m	struct:HeadTail
headers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn headers(map: &InnerMap, year: u32) -> pm2::TokenStream {$/;"	f
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMerge
heap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    heap: Vec<HeadTail<I>>,$/;"	m	struct:KMergeBy
heapify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn heapify<T, S>(data: &mut [T], mut less_than: S)$/;"	f
heapsort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn heapsort<T, F>(v: &mut [T], is_less: &F)$/;"	f
height	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    height: i32,$/;"	m	struct:LandClaim
helper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn helper<P, C>(len: usize,$/;"	f	function:bridge_producer_consumer
hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit0<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_digit1<T>(input: T) -> IResult<T, T>$/;"	f
hex_digit_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn hex_digit_test() {$/;"	f	module:tests
hex_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn hex_u32(input: &[u8]) -> IResult<&[u8], u32> {$/;"	f
hex_u32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn hex_u32_tests() {$/;"	f	module:tests
hour	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    hour: usize,$/;"	m	struct:Date
html	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod html;$/;"	n
i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    i: I,$/;"	m	struct:Chunks
i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i: Fuse<I>,$/;"	m	struct:InterleaveSeq
i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i: I,$/;"	m	struct:Interleave
i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i: I,$/;"	m	struct:InterleaveProducer
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i128 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i128(/;"	M
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for i128 {$/;"	c
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i128 {$/;"	c
i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i128 {$/;"	c
i128_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i128_tests() {$/;"	f	module:tests
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i16 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i16($i/;"	M
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i16 {$/;"	c
i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i16 {$/;"	c
i16_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i16_tests() {$/;"	f	module:tests
i24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i24_tests() {$/;"	f	module:tests
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i32 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i32($i/;"	M
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i32 {$/;"	c
i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i32 {$/;"	c
i32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i32_tests() {$/;"	f	module:tests
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! i64 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_i64($i/;"	M
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i64 {$/;"	c
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i64 {$/;"	c
i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i64 {$/;"	c
i64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i64_tests() {$/;"	f	module:tests
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for i8 {$/;"	c
i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for i8 {$/;"	c
i8_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn i8_tests() {$/;"	f	module:tests
i_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            i_len: usize,$/;"	m	struct:with_producer::CallbackI
i_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            i_len: usize,$/;"	m	struct:with_producer::CallbackJ
i_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i_len: usize,$/;"	m	struct:InterleaveProducer
i_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            i_next: bool,$/;"	m	struct:with_producer::CallbackI
i_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            i_next: bool,$/;"	m	struct:with_producer::CallbackJ
i_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i_next: bool$/;"	m	struct:InterleaveSeq
i_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    i_next: bool,$/;"	m	struct:InterleaveProducer
i_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            i_producer: I$/;"	m	struct:with_producer::CallbackJ
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub id: String,$/;"	m	struct:NamedRoutine
id	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    id: bool,$/;"	m	struct:Tee
id	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    id: i32,$/;"	m	struct:LandClaim
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^pub fn identity<T>(t: T) -> T {$/;"	f
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    identity: &'c ID,$/;"	m	struct:FoldConsumer
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    identity: ID,$/;"	m	struct:Fold
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    identity: &'r ID,$/;"	m	struct:ReduceConsumer
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    identity: &'c ID,$/;"	m	struct:TryFoldConsumer
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    identity: ID,$/;"	m	struct:TryFold
identity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    identity: &'r ID,$/;"	m	struct:TryReduceConsumer
imp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^mod imp;$/;"	n
impl_arch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/arch_specific.rs	/^macro_rules! impl_arch {$/;"	M
impl_binary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_binary_ {$/;"	M
impl_cmp_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/eq.rs	/^macro_rules! impl_cmp_eq {$/;"	M
impl_cmp_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/ord.rs	/^macro_rules! impl_cmp_ord {$/;"	M
impl_cmp_partial_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_eq.rs	/^macro_rules! impl_cmp_partial_eq {$/;"	M
impl_cmp_partial_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! impl_cmp_partial_ord {$/;"	M
impl_cmp_vertical	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/vertical.rs	/^macro_rules! impl_cmp_vertical {$/;"	M
impl_cons_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^macro_rules! impl_cons_iter($/;"	M
impl_const_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_const_p {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def32 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/cos_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_def64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^macro_rules! impl_def64 {$/;"	M
impl_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/default.rs	/^macro_rules! impl_default {$/;"	M
impl_f	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_f {$/;"	M
impl_fallback	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_fallback {$/;"	M
impl_fmt_binary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/binary.rs	/^macro_rules! impl_fmt_binary {$/;"	M
impl_fmt_debug	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/debug.rs	/^macro_rules! impl_fmt_debug {$/;"	M
impl_fmt_debug_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/debug.rs	/^macro_rules! impl_fmt_debug_tests {$/;"	M
impl_fmt_lower_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/lower_hex.rs	/^macro_rules! impl_fmt_lower_hex {$/;"	M
impl_fmt_octal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/octal.rs	/^macro_rules! impl_fmt_octal {$/;"	M
impl_fmt_upper_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt/upper_hex.rs	/^macro_rules! impl_fmt_upper_hex {$/;"	M
impl_fn_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! impl_fn_slice {$/;"	M
impl_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^macro_rules! impl_format {$/;"	M
impl_from_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_array.rs	/^macro_rules! impl_from_array {$/;"	M
impl_from_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_from_bits {$/;"	M
impl_from_bits_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_from_bits_ {$/;"	M
impl_from_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast {$/;"	M
impl_from_cast_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_ {$/;"	M
impl_from_cast_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_mask {$/;"	M
impl_from_cast_mask_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_from_cast_mask_ {$/;"	M
impl_from_vector	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_vector.rs	/^macro_rules! impl_from_vector {$/;"	M
impl_from_vectors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/from/from_vector.rs	/^macro_rules! impl_from_vectors {$/;"	M
impl_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/hash.rs	/^macro_rules! impl_hash {$/;"	M
impl_i	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_i {$/;"	M
impl_into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits/macros.rs	/^macro_rules! impl_into_bits {$/;"	M
impl_into_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast/macros.rs	/^macro_rules! impl_into_cast {$/;"	M
impl_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_m {$/;"	M
impl_macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod impl_macros;$/;"	n
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/aarch64.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/arm.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! impl_mask_reductions {$/;"	M
impl_mask_ty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/masks.rs	/^macro_rules! impl_mask_ty {$/;"	M
impl_math_float_abs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/abs.rs	/^macro_rules! impl_math_float_abs {$/;"	M
impl_math_float_cos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/cos.rs	/^macro_rules! impl_math_float_cos {$/;"	M
impl_math_float_exp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/exp.rs	/^macro_rules! impl_math_float_exp {$/;"	M
impl_math_float_ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/ln.rs	/^macro_rules! impl_math_float_ln {$/;"	M
impl_math_float_mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/mul_add.rs	/^macro_rules! impl_math_float_mul_add {$/;"	M
impl_math_float_mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/mul_adde.rs	/^macro_rules! impl_math_float_mul_adde {$/;"	M
impl_math_float_powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/powf.rs	/^macro_rules! impl_math_float_powf {$/;"	M
impl_math_float_recpre	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/recpre.rs	/^macro_rules! impl_math_float_recpre {$/;"	M
impl_math_float_rsqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/rsqrte.rs	/^macro_rules! impl_math_float_rsqrte {$/;"	M
impl_math_float_sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sin.rs	/^macro_rules! impl_math_float_sin {$/;"	M
impl_math_float_sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sqrt.rs	/^macro_rules! impl_math_float_sqrt {$/;"	M
impl_math_float_sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float/sqrte.rs	/^macro_rules! impl_math_float_sqrte {$/;"	M
impl_minimal_iuf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/iuf.rs	/^macro_rules! impl_minimal_iuf {$/;"	M
impl_minimal_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/mask.rs	/^macro_rules! impl_minimal_mask {$/;"	M
impl_minimal_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal/ptr.rs	/^macro_rules! impl_minimal_p {$/;"	M
impl_mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^macro_rules! impl_mul_adde {$/;"	M
impl_mut_p	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_mut_p {$/;"	M
impl_ops_scalar_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_arithmetic.rs	/^macro_rules! impl_ops_scalar_arithmetic {$/;"	M
impl_ops_scalar_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_bitwise.rs	/^macro_rules! impl_ops_scalar_bitwise {$/;"	M
impl_ops_scalar_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_mask_bitwise.rs	/^macro_rules! impl_ops_scalar_mask_bitwise {$/;"	M
impl_ops_scalar_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/scalar_shifts.rs	/^macro_rules! impl_ops_scalar_shifts {$/;"	M
impl_ops_vector_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_arithmetic.rs	/^macro_rules! impl_ops_vector_arithmetic {$/;"	M
impl_ops_vector_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_bitwise.rs	/^macro_rules! impl_ops_vector_bitwise {$/;"	M
impl_ops_vector_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_float_min_max.rs	/^macro_rules! impl_ops_vector_float_min_max {$/;"	M
impl_ops_vector_int_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_int_min_max.rs	/^macro_rules! impl_ops_vector_int_min_max {$/;"	M
impl_ops_vector_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_mask_bitwise.rs	/^macro_rules! impl_ops_vector_mask_bitwise {$/;"	M
impl_ops_vector_neg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_neg.rs	/^macro_rules! impl_ops_vector_neg {$/;"	M
impl_ops_vector_rotates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_rotates.rs	/^macro_rules! impl_ops_vector_rotates {$/;"	M
impl_ops_vector_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops/vector_shifts.rs	/^macro_rules! impl_ops_vector_shifts {$/;"	M
impl_ptr_read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr/gather_scatter.rs	/^macro_rules! impl_ptr_read {$/;"	M
impl_ptr_write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ptr/gather_scatter.rs	/^macro_rules! impl_ptr_write {$/;"	M
impl_reduction_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/bitwise.rs	/^macro_rules! impl_reduction_bitwise {$/;"	M
impl_reduction_float_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/float_arithmetic.rs	/^macro_rules! impl_reduction_float_arithmetic {$/;"	M
impl_reduction_integer_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/integer_arithmetic.rs	/^macro_rules! impl_reduction_integer_arithmetic {$/;"	M
impl_reduction_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/mask.rs	/^macro_rules! impl_reduction_mask {$/;"	M
impl_reduction_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/min_max.rs	/^macro_rules! impl_reduction_min_max {$/;"	M
impl_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/select.rs	/^macro_rules! impl_select {$/;"	M
impl_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn {$/;"	M
impl_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn {$/;"	M
impl_shuffle1_dyn_non_u	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn_non_u {$/;"	M
impl_shuffle1_dyn_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^macro_rules! impl_shuffle1_dyn_ptr {$/;"	M
impl_simd_array	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^macro_rules! impl_simd_array {$/;"	M
impl_simd_ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/vPtr.rs	/^macro_rules! impl_simd_ptr {$/;"	M
impl_slice_from_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice/from_slice.rs	/^macro_rules! impl_slice_from_slice {$/;"	M
impl_slice_write_to_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice/write_to_slice.rs	/^macro_rules! impl_slice_write_to_slice {$/;"	M
impl_swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/swap_bytes.rs	/^macro_rules! impl_swap_bytes {$/;"	M
impl_swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^macro_rules! impl_swap_bytes {$/;"	M
impl_tertiary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_tertiary_ {$/;"	M
impl_tuple_collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^macro_rules! impl_tuple_collect {$/;"	M
impl_tuple_combination	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^macro_rules! impl_tuple_combination {$/;"	M
impl_u	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^macro_rules! impl_u {$/;"	M
impl_unary_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/macros.rs	/^macro_rules! impl_unary_ {$/;"	M
impl_unary_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^macro_rules! impl_unary_t {$/;"	M
impl_zip_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^macro_rules! impl_zip_iter {$/;"	M
in_progress	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn in_progress(&self) -> bool {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn index(&self, key: &Q) -> &V {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    index: usize,$/;"	m	struct:ProbeSeq
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn index<'b>(&'b self, _index: usize) -> &'b I::Item {$/;"	f
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:GroupBy
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: Cell<usize>,$/;"	m	struct:IntoChunks
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Chunk
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:ChunkIndex
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    index: usize,$/;"	m	struct:Group
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    index: usize,$/;"	m	struct:MultiPeek
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    index: usize,$/;"	m	struct:CharIndicesProducer
index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    index: usize,$/;"	m	struct:MatchIndicesProducer
indexable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn indexable() -> bool {$/;"	P	implementation:Unzip
indexable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn indexable() -> bool {$/;"	P	interface:UnzipOp
indexed_range_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^macro_rules! indexed_range_impl {$/;"	M
indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    indices: Vec<usize>,$/;"	m	struct:Combinations
inequality	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    inequality: String,$/;"	m	struct:Comparison
infinite_many	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn infinite_many() {$/;"	f	module:tests
init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            init: INIT,$/;"	m	struct:with_producer::Callback
init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    init: &'f INIT,$/;"	m	struct:MapInitConsumer
init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    init: &'f INIT,$/;"	m	struct:MapInitProducer
init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    init: INIT,$/;"	m	struct:MapInit
init_logging	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^pub fn init_logging() {$/;"	f
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    inner: RefCell<InnerMap>,$/;"	m	struct:Map
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:AccessError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub inner: io::Error,$/;"	m	struct:CopyError
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Keys
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: Iter<'a, K, V>,$/;"	m	struct:Values
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: IterMut<'a, K, V>,$/;"	m	struct:ValuesMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIntoIter<(K, V)>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    inner: RawIter<(K, V)>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<(I, F)>>,$/;"	m	struct:FormatWith
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    inner: RefCell<Option<I>>,$/;"	m	struct:Format
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<K, I, F>>,$/;"	m	struct:GroupBy
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    inner: RefCell<GroupInner<usize, I, ChunkIndex>>,$/;"	m	struct:IntoChunks
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner<T, II, FF>(stop: usize, it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  pub inner: T,$/;"	m	struct:Input
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    inner: vec::IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    inner: vec::IntoIter<T>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^    inner: vec::IntoIter<(&'a K, &'a V)>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^    inner: vec::IntoIter<(&'a K, &'a mut V)>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_map.rs	/^    inner: vec::IntoIter<(K, V)>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^    inner: vec::IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/btree_set.rs	/^    inner: vec::IntoIter<T>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^    inner: vec::IntoIter<(&'a K, &'a V)>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^    inner: vec::IntoIter<(&'a K, &'a mut V)>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_map.rs	/^    inner: vec::IntoIter<(K, V)>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^    inner: vec::IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/hash_set.rs	/^    inner: vec::IntoIter<T>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^    inner: vec::IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^    inner: vec::IntoIter<&'a mut T>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/linked_list.rs	/^    inner: vec::IntoIter<T>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    inner: Chain<slice::Iter<'a, T>, slice::Iter<'a, T>>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    inner: Chain<slice::IterMut<'a, T>, slice::IterMut<'a, T>>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    inner: vec::IntoIter<T>,$/;"	m	struct:IntoIter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    inner: Option<P>,$/;"	m	struct:ChunkSeq
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    inner: Splitter,$/;"	m	struct:LengthSplitter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    inner: IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    inner: IntoIter<&'a mut T>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    inner: option::IntoIter<&'a T>,$/;"	m	struct:Iter
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    inner: option::IntoIter<&'a mut T>,$/;"	m	struct:IterMut
inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    inner: option::IntoIter<T>,$/;"	m	struct:IntoIter
inner0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^        fn inner0<T, II, FF>(it: &mut II, f: &mut FF) -> State<T>$/;"	f	method:Itertools::tree_fold1
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:T
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:str
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:usize
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn input_len(&self) -> usize;$/;"	P	interface:InputLength
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:CompleteByteSlice
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:CompleteStr
input_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn input_len(&self) -> usize {$/;"	P	implementation:Input
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, k: K, v: V) -> Option<V> {$/;"	f
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(&mut self, mut value: V) -> V {$/;"	P	implementation:OccupiedEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn insert(self, value: V) -> &'a mut V {$/;"	P	implementation:VacantEntry
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn insert(&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> Bucket<T> {$/;"	P	implementation:RawTable
insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn insert(&mut self, value: T) -> bool {$/;"	f
insert_head	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^fn insert_head<T, F>(v: &mut [T], is_less: &F)$/;"	f
insertion_sort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn insertion_sort<T, F>(v: &mut [T], is_less: &F)$/;"	f
inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn inspect<OP>(self, inspect_op: OP) -> Inspect<Self, OP>$/;"	P	interface:ParallelIterator
inspect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod inspect;$/;"	n
inspect_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^            inspect_op: F,$/;"	m	struct:with_producer::Callback
inspect_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    inspect_op: &'f F,$/;"	m	struct:InspectConsumer
inspect_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    inspect_op: &'f F,$/;"	m	struct:InspectFolder
inspect_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    inspect_op: &'f F,$/;"	m	struct:InspectProducer
inspect_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    inspect_op: F,$/;"	m	struct:Inspect
integer_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod integer_arithmetic;$/;"	n
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave<I, J>(i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoItera/;"	f
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave<J>(self, other: J) -> Interleave<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    interleave: Interleave<Take<I>, Take<J>>$/;"	m	struct:InterleaveShortest
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn interleave<I>(self, other: I) -> Interleave<Self, I::Iter>$/;"	P	interface:IndexedParallelIterator
interleave	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod interleave;$/;"	n
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn interleave_shortest<I, J>(a: I, b: J) -> InterleaveShortest<I, J>$/;"	f
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn interleave_shortest<J>(self, other: J) -> InterleaveShortest<Self, J::IntoIter>$/;"	P	interface:Itertools
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn interleave_shortest<I>(self, other: I) -> InterleaveShortest<Self, I::Iter>$/;"	P	interface:IndexedParallelIterator
interleave_shortest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod interleave_shortest;$/;"	n
internal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod internal;$/;"	n
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn intersection<'a, 'new>($/;"	f	function:assert_covariance
intersection	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn intersection<'a>(&'a self, other: &'a HashSet<T, S>) -> Intersection<'a, T, S> {$/;"	f
intersects	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    fn intersects(&self, other: &LandClaim) -> bool {$/;"	P	implementation:LandClaim
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^pub fn intersperse<I>(iter: I, elt: I::Item) -> Intersperse<I>$/;"	f
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:Itertools
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod intersperse;$/;"	n
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn intersperse(self, element: Self::Item) -> Intersperse<Self>$/;"	P	interface:ParallelIterator
intersperse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod intersperse;$/;"	n
into	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn into(self) -> Result<R, L> {$/;"	P	implementation:Either
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^crate mod into_bits;$/;"	n
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn into_bits(self) -> T;$/;"	P	interface:IntoBits
into_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^    fn into_bits(self) -> U {$/;"	f
into_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    pub fn into_buffer(self) -> TupleBuffer<T> {$/;"	f
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn into_error_kind(self) -> ::util::ErrorKind<E> {$/;"	P	implementation:Err
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/simple_errors.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:Context
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:ErrorKind
into_error_kind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/verbose_errors.rs	/^  pub fn into_error_kind(self) -> ErrorKind<E> {$/;"	P	implementation:Context
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn into_folder(self) -> CollectFolder<'c, T> {$/;"	P	implementation:CollectConsumer
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn into_folder(self) -> Self {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn into_folder(self) -> Self {$/;"	P	implementation:NoopConsumer
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn into_folder(self) -> Self::Folder;$/;"	P	interface:Consumer
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_folder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn into_folder(self) -> Self::Folder {$/;"	f
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/group_map.rs	/^pub fn into_group_map<I, K, V>(iter: I) -> HashMap<K, Vec<V>>$/;"	f
into_group_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn into_group_map<K, V>(self) -> HashMap<K, Vec<V>>$/;"	P	interface:Itertools
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Either
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:FoldWhile
into_inner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Position
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn into_iter(self) -> Either<L::IntoIter, R::IntoIter>$/;"	P	implementation:Either
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IntoIter<K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> Iter<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter(self) -> IterMut<'a, K, V> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn into_iter(self) -> BitMaskIter {$/;"	P	implementation:BitMask
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn into_iter(self) -> RawIntoIter<T> {$/;"	P	implementation:RawTable
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> IntoIter<T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter(self) -> Iter<'a, T> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn into_iter<'new>(v: IntoIter<&'static str>) -> IntoIter<&'new str> {$/;"	f	function:assert_covariance
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn into_iter(self) -> RcIter<I> {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:EmptyProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn into_iter(self) -> Self::IntoIter;$/;"	P	interface:Producer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:RepeatNProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:ZipProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:OptionProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:ChunksMutProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:ChunksProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:IterMutProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:IterProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:WindowsProducer
into_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn into_iter(mut self) -> Self::IntoIter {$/;"	P	implementation:VecProducer
into_iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_key<'new>(v: IntoIter<&'static str, u8>) -> IntoIter<&'new str, u8> {$/;"	f	function:assert_covariance
into_iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn into_iter_val<'new>(v: IntoIter<u8, &'static str>) -> IntoIter<u8, &'new str> {$/;"	f	function:assert_covariance
into_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_key(self) -> K {$/;"	P	implementation:VacantEntry
into_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn into_mut(self) -> &'a mut V {$/;"	P	implementation:OccupiedEntry
into_option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^    pub fn into_option(self) -> Option<(T,T)> {$/;"	P	implementation:MinMaxResult
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/binary_heap.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:BinaryHeap
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/vec_deque.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:VecDeque
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn into_par_iter(self) -> Self::Iter;$/;"	P	interface:IntoParallelIterator
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn into_par_iter(self) -> T {$/;"	P	implementation:T
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:Option
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	f
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/result.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:Result
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:T
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:Vec
into_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn into_par_iter(self) -> Self::Iter {$/;"	P	implementation:Vec
into_par_vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^macro_rules! into_par_vec {$/;"	M
into_parts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn into_parts(self) -> (Option<I::Item>, I) {$/;"	f
into_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn into_result(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:private::Try
into_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn into_result(self) -> Result<T, ()> { self.ok_or(()) }$/;"	P	implementation:private::Option
into_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^        fn into_result(self) -> Result<T, E> { self }$/;"	P	implementation:private::Result
invert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn invert(self) -> BitMask {$/;"	P	implementation:BitMask
iproduct	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! iproduct {$/;"	M
is_a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn is_a() {$/;"	f	module:tests
is_a	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! is_a ($/;"	M
is_a_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! is_a_s ($/;"	M
is_a_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_a_s_fail() {$/;"	f	module:test
is_a_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_a_s_succeed() {$/;"	f	module:test
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool {$/;"	P	implementation:char
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool {$/;"	P	implementation:u8
is_alpha	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alpha(self) -> bool;$/;"	P	interface:AsChar
is_alphabetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_alphabetic(chr: u8) -> bool {$/;"	f
is_alphabetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  pub fn is_alphabetic(c: char) -> bool {$/;"	f	module:test
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool {$/;"	P	implementation:char
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool {$/;"	P	implementation:u8
is_alphanum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_alphanum(self) -> bool;$/;"	P	interface:AsChar
is_alphanumeric	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_alphanumeric(chr: u8) -> bool {$/;"	f
is_benchmark	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^    fn is_benchmark(entry: &DirEntry) -> bool {$/;"	f	function:list_existing_benchmarks
is_char_boundary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^fn is_char_boundary(b: u8) -> bool {$/;"	f
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool {$/;"	P	implementation:char
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool {$/;"	P	implementation:u8
is_dec_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_dec_digit(self) -> bool;$/;"	P	interface:AsChar
is_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_digit(chr: u8) -> bool {$/;"	f
is_dir	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn is_dir<P>(path: &P) -> bool$/;"	f
is_disjoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_disjoint(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:FoldWhile
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_enabled	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^        pub fn is_enabled(self) -> bool {$/;"	P	implementation:plotting::Plotting
is_full	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_full(ctrl: u8) -> bool {$/;"	f
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_hex_digit(chr: u8) -> bool {$/;"	f
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool {$/;"	P	implementation:char
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool {$/;"	P	implementation:u8
is_hex_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_hex_digit(self) -> bool;$/;"	P	interface:AsChar
is_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn is_incomplete(&self) -> bool {$/;"	P	implementation:Err
is_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn is_indexed<T: IndexedParallelIterator>(_: T) {}$/;"	f
is_known	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn is_known(&self) -> bool {$/;"	P	implementation:Needed
is_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_left(&self) -> bool {$/;"	P	implementation:Either
is_not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn is_not() {$/;"	f	module:tests
is_not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! is_not ($/;"	M
is_not_line_ending_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn is_not_line_ending_bytes() {$/;"	f	module:tests
is_not_line_ending_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn is_not_line_ending_str() {$/;"	f	module:tests
is_not_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! is_not_s ($/;"	M
is_not_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_not_s_fail() {$/;"	f	module:test
is_not_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn is_not_s_succeed() {$/;"	f	module:test
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_oct_digit(chr: u8) -> bool {$/;"	f
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool {$/;"	P	implementation:char
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool {$/;"	P	implementation:u8
is_oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn is_oct_digit(self) -> bool;$/;"	P	interface:AsChar
is_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub is_result: bool,$/;"	m	struct:Generator
is_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn is_right(&self) -> bool {$/;"	P	implementation:Either
is_rls	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn is_rls() -> bool {$/;"	f
is_space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn is_space(chr: u8) -> bool {$/;"	f
is_special	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn is_special(ctrl: u8) -> bool {$/;"	f
is_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn is_str(_: &str) {}$/;"	f	function:deref
is_subset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_subset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
is_suffix_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn is_suffix_of(&self, &str) -> bool;$/;"	P	interface:private::Pattern
is_suffix_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn is_suffix_of(&self, chars: &str) -> bool {$/;"	P	implementation:FN
is_suffix_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn is_suffix_of(&self, chars: &str) -> bool {$/;"	P	implementation:char
is_superset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn is_superset(&self, other: &HashSet<T, S>) -> bool {$/;"	f
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for isize {$/;"	c
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for isize {$/;"	c
isize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for isize {$/;"	c
it	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    it: I,$/;"	m	struct:LazyBuffer
it0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it0: I,$/;"	m	struct:InterleaveShortest
it1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    it1: J,$/;"	m	struct:InterleaveShortest
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    item: Option<T>,$/;"	m	struct:FindFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    item: Option<T>,$/;"	m	struct:FindFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    item: ID,$/;"	m	struct:FoldFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    item: U,$/;"	m	struct:FoldWith
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    item: U,$/;"	m	struct:FoldWithConsumer
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^            item: T,$/;"	m	struct:with_producer::Callback
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    item: I::Item,$/;"	m	struct:Intersperse
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    item: I::Item,$/;"	m	struct:IntersperseIter
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    item: P::Item,$/;"	m	struct:IntersperseProducer
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    item: T,$/;"	m	struct:IntersperseConsumer
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    item: T,$/;"	m	struct:IntersperseFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            item: U,$/;"	m	struct:with_producer::Callback
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    item: T,$/;"	m	struct:MapWith
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    item: U,$/;"	m	struct:MapWithConsumer
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    item: U,$/;"	m	struct:MapWithFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    item: U,$/;"	m	struct:MapWithIter
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    item: U,$/;"	m	struct:MapWithProducer
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    item: T,$/;"	m	struct:Once
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    item: T,$/;"	m	struct:ReduceFolder
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    item: U::Ok,$/;"	m	struct:TryFoldWith
item	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    item: U::Ok,$/;"	m	struct:TryFoldWithConsumer
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawIter
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    items: usize,$/;"	m	struct:RawTable
items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    items: Stealer<Iter::Item>,$/;"	m	struct:IterParallelProducer
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn iter() {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter(&self) -> Iter<K, V> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub(crate) fn iter(&self) -> Iter<K, V> {$/;"	P	implementation:IterMut
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    iter: RawIter<T>,$/;"	m	struct:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawDrain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawIntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn iter(&self) -> RawIter<T> {$/;"	P	implementation:RawTable
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn iter<'a, 'new>(v: Iter<'a, &'static str>) -> Iter<'a, &'new str> {$/;"	f	function:assert_covariance
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Difference<'a, T, S>, Difference<'a, T, S>>,$/;"	m	struct:SymmetricDifference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Chain<Iter<'a, T>, Difference<'a, T, S>>,$/;"	m	struct:Union
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Difference
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Iter<'a, T>,$/;"	m	struct:Intersection
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: Keys<'a, K, ()>,$/;"	m	struct:Iter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::Drain<'a, K, ()>,$/;"	m	struct:Drain
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    iter: map::IntoIter<K, ()>,$/;"	m	struct:IntoIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn iter(&self) -> Iter<T> {$/;"	f
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: &'a mut I,$/;"	m	struct:TakeWhileRef
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Coalesce
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: CoalesceCore<I>,$/;"	m	struct:Dedup
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: Fuse<I>,$/;"	m	struct:Step
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Batching
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:CoalesceCore
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Flatten
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:MapResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Positions
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:PutBack
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Tuple1Combination
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:Update
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: I,$/;"	m	struct:WhileSome
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    iter: T::Combination,$/;"	m	struct:TupleCombinations
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter: I,$/;"	m	struct:MultiProductIter
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs	/^    iter: I,$/;"	m	struct:ConsTuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    iter: I,$/;"	m	struct:GroupInner
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    iter: Fuse<I>,$/;"	m	struct:Intersperse
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:MultiPeek
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    iter: Fuse<I>,$/;"	m	struct:PadUsing
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    iter: &'a mut I,$/;"	m	struct:PeekingTakeWhile
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    iter: I,$/;"	m	struct:ProcessResults
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    iter: I,$/;"	m	struct:PutBackN
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    iter: I,$/;"	m	struct:TeeBuffer
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: Fuse<I>,$/;"	m	struct:Tuples
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    iter: I,$/;"	m	struct:TupleWindows
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: I,$/;"	m	struct:UniqueBy
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    iter: UniqueBy<I, I::Item, ()>,$/;"	m	struct:Unique
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    iter: &'a Mutex<(Iter, Deque<Iter::Item>)>,$/;"	m	struct:IterParallelProducer
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    iter: Iter,$/;"	m	struct:IterBridge
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod iter;$/;"	n
iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    iter: std::slice::IterMut<'data, T>,$/;"	m	struct:SliceDrain
iter_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn iter_count(iterations: u64) -> String {$/;"	f
iter_counts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub iter_counts: &'a Sample<f64>,$/;"	m	struct:MeasurementData
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:str
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:u8
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_elements(&self) -> Self::IterElem;$/;"	P	interface:InputIter
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:CompleteByteSlice
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:CompleteStr
iter_elements	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_elements(&self) -> Self::IterElem {$/;"	P	implementation:Input
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:str
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:u8
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn iter_indices(&self) -> Self::Iter;$/;"	P	interface:InputIter
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:CompleteByteSlice
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:CompleteStr
iter_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn iter_indices(&self) -> Self::Iter {$/;"	P	implementation:Input
iter_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_key<'a, 'new>(v: Iter<'a, &'static str, u8>) -> Iter<'a, &'new str, u8> {$/;"	f	function:assert_covariance
iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut<K, V> {$/;"	f
iter_orig	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    iter_orig: I,$/;"	m	struct:MultiProductIter
iter_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn iter_val<'a, 'new>(v: Iter<'a, u8, &'static str>) -> Iter<'a, u8, &'new str> {$/;"	f	function:assert_covariance
iter_with_large_drop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_drop<O, R>(&mut self, mut routine: R)$/;"	P	implementation:Bencher
iter_with_large_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_large_setup<I, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iter_with_setup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn iter_with_setup<I, O, S, R>(&mut self, mut setup: S, mut routine: R)$/;"	P	implementation:Bencher
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate(&mut self) {$/;"	f
iterate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn iterate<St, F>(initial_value: St, f: F) -> Iterate<St, F>$/;"	f
iterate_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn iterate_last($/;"	f
iterated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iterated: bool,$/;"	m	struct:Bencher
iteration_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    iteration_count: u64,$/;"	m	struct:CsvRow
iters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    iters: u64,$/;"	m	struct:Bencher
iuf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod iuf;$/;"	n
izip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^macro_rules! izip {$/;"	M
j	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            j: J$/;"	m	struct:with_producer::CallbackI
j	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    j: Fuse<J>,$/;"	m	struct:InterleaveSeq
j	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    j: J,$/;"	m	struct:Interleave
j	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    j: J,$/;"	m	struct:InterleaveProducer
j_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            j_len: usize,$/;"	m	struct:with_producer::CallbackI
j_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^            j_len: usize,$/;"	m	struct:with_producer::CallbackJ
j_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    j_len: usize,$/;"	m	struct:InterleaveProducer
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn join<I>(iterable: I, sep: &str) -> String$/;"	f
join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn join(&mut self, sep: &str) -> String$/;"	P	interface:Itertools
kde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod kde;$/;"	n
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: K,$/;"	m	struct:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    key: Option<K>,$/;"	m	struct:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:Entry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:OccupiedEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn key(&self) -> &K {$/;"	P	implementation:VacantEntry
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: F,$/;"	m	struct:GroupInner
key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    key: usize,$/;"	m	struct:ChunkIndex
keys	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn keys(&self) -> Keys<K, V> {$/;"	f
keys_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_key<'a, 'new>(v: Keys<'a, &'static str, u8>) -> Keys<'a, &'new str, u8> {$/;"	f	function:assert_covariance
keys_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn keys_val<'a, 'new>(v: Keys<'a, u8, &'static str>) -> Keys<'a, u8, &'new str> {$/;"	f	function:assert_covariance
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge<I>(iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>$/;"	f
kmerge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge(self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^pub fn kmerge_by<I, F>(iterable: I, mut less_than: F)$/;"	f
kmerge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn kmerge_by<F>(self, first: F)$/;"	P	interface:Itertools
kmerge_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod kmerge_impl;$/;"	n
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    last: Option<I::Item>,$/;"	m	struct:CoalesceCore
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn last(self) -> Option<Self::Item> {$/;"	f
last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    last: Option<T>,$/;"	m	struct:TupleWindows
last_line_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    last_line_len: Cell<usize>,$/;"	m	struct:CliReport
le	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn le<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
le_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_f32(input: &[u8]) -> IResult<&[u8], f32> {$/;"	f
le_f32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_f32_tests() {$/;"	f	module:tests
le_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_f64(input: &[u8]) -> IResult<&[u8], f64> {$/;"	f
le_f64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_f64_tests() {$/;"	f	module:tests
le_i128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i128(i: &[u8]) -> IResult<&[u8], i128> {$/;"	f
le_i128_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i128_tests() {$/;"	f	module:tests
le_i16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i16(i: &[u8]) -> IResult<&[u8], i16> {$/;"	f
le_i16_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i16_tests() {$/;"	f	module:tests
le_i24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i24(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
le_i24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i24_tests() {$/;"	f	module:tests
le_i32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i32(i: &[u8]) -> IResult<&[u8], i32> {$/;"	f
le_i32_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i32_tests() {$/;"	f	module:tests
le_i64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i64(i: &[u8]) -> IResult<&[u8], i64> {$/;"	f
le_i64_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i64_tests() {$/;"	f	module:tests
le_i8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_i8(i: &[u8]) -> IResult<&[u8], i8> {$/;"	f
le_i8_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_i8_tests() {$/;"	f	module:tests
le_u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u128(i: &[u8]) -> IResult<&[u8], u128, u32> {$/;"	f
le_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u16(i: &[u8]) -> IResult<&[u8], u16> {$/;"	f
le_u24	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u24(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
le_u24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn le_u24_tests() {$/;"	f	module:tests
le_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u32(i: &[u8]) -> IResult<&[u8], u32> {$/;"	f
le_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u64(i: &[u8]) -> IResult<&[u8], u64> {$/;"	f
le_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn le_u8(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f
leading_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn leading_zeros(self) -> usize {$/;"	P	implementation:BitMask
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left(self) -> Option<L> {$/;"	P	implementation:Either
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn left(self) -> Option<A> {$/;"	P	implementation:EitherOrBoth
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    left: PutBack<Fuse<I>>,$/;"	m	struct:MergeJoinBy
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    left: CA,$/;"	m	struct:UnzipConsumer
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    left: FA,$/;"	m	struct:UnzipFolder
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    left: RA,$/;"	m	struct:UnzipReducer
left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^            macro_rules! left { () => { l.offset(*start_l as isize) } }$/;"	M	function:partition_in_blocks
left_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn left_and_then<F, S>(self, f: F) -> Either<S, R>$/;"	P	implementation:Either
left_consumer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    left_consumer: CA,$/;"	m	struct:UnzipB
left_end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        left_end: *mut T,$/;"	m	struct:par_merge::State
left_produces_fewer_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn left_produces_fewer_items() {$/;"	f
left_produces_items_with_no_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn left_produces_items_with_no_complete() {$/;"	f
left_produces_too_many_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn left_produces_too_many_items() {$/;"	f
left_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    left_result: &'r mut Option<CA::Result>,$/;"	m	struct:UnzipB
left_shift_push	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn left_shift_push(&mut self, item: Self::Item);$/;"	P	interface:TupleCollect
left_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        left_start: *mut T,$/;"	m	struct:par_merge::State
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IterMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Keys
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Values
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ValuesMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:RawTable
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Drain
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize {$/;"	P	implementation:char
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize {$/;"	P	implementation:u8
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn len(self) -> usize;$/;"	P	interface:AsChar
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^            len: usize,$/;"	m	struct:with_producer::Callback
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    len: usize,$/;"	m	struct:ChunkProducer
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    len: usize,$/;"	m	struct:ChunkSeq
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    len: usize,$/;"	m	struct:Collect
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Empty
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^fn len<T>(list: &LinkedList<Vec<T>>) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^            len: usize,$/;"	m	struct:with_producer::Callback
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    len: usize,$/;"	m	struct:IntersperseProducer
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn len(&self) -> usize;$/;"	P	interface:IndexedParallelIterator
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod len;$/;"	n
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Once
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^        len: usize,$/;"	m	struct:bridge::Callback
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^            len: usize,$/;"	m	struct:with_producer::Callback
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    len: usize,$/;"	m	struct:RevProducer
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    fn len(&self) -> L;$/;"	P	interface:UnindexedRangeLen
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    len: usize,$/;"	m	struct:CopyOnDrop
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    len: usize,$/;"	m	struct:Run
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Chunks
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:ChunksMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Iter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IterMut
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Windows
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:IntoIter
len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:SliceDrain
length	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn length(&self) -> usize {$/;"	f
length	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn length(&self) -> usize;$/;"	P	interface:Fissile
length	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn length(&self) -> usize {$/;"	P	implementation:str
length_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! length_bytes($/;"	M
length_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_count() {$/;"	f	module:tests
length_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_count($/;"	M
length_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_data() {$/;"	f	module:tests
length_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_data($/;"	M
length_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! length_value($/;"	M
length_value_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn length_value_test() {$/;"	f	module:tests
less_than	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    less_than: F,$/;"	m	struct:KMergeBy
levels	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn levels() {$/;"	f	module:tests
lib	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod lib {$/;"	n
lib_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^pub fn lib_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
likely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn likely(b: bool) -> bool {$/;"	f
line_chart	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    line_chart: Option<String>,$/;"	m	struct:SummaryContext
line_comparison	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn line_comparison($/;"	f
line_ending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn line_ending<T>(input: T) -> IResult<T, T>$/;"	f
linked_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod linked_list;$/;"	n
list_existing_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn list_existing_benchmarks<P>(directory: &P) -> Result<Vec<BenchmarkId>>$/;"	f
llvm	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod llvm;$/;"	n
llvm	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^crate mod llvm {$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod ln;$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod ln;$/;"	n
ln	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln(self) -> Self;$/;"	P	interface:Ln
ln_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_f32(x: f32) -> f32;$/;"	f
ln_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_f64(x: f64) -> f64;$/;"	f
ln_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v16f32(x: f32x16) -> f32x16;$/;"	f
ln_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v2f32(x: f32x2) -> f32x2;$/;"	f
ln_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v2f64(x: f64x2) -> f64x2;$/;"	f
ln_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v4f32(x: f32x4) -> f32x4;$/;"	f
ln_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v4f64(x: f64x4) -> f64x4;$/;"	f
ln_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v8f32(x: f32x8) -> f32x8;$/;"	f
ln_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/ln.rs	/^    fn ln_v8f64(x: f64x8) -> f64x8;$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn load<A, P: ?Sized>(path: &P) -> Result<A>$/;"	f
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn load_aligned(ptr: *const u8) -> Group {$/;"	P	implementation:Group
load_summary_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn load_summary_data($/;"	P	implementation:Html
local_writes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    local_writes: usize,$/;"	m	struct:CollectFolder
log_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^pub(crate) fn log_error(e: &Error) {$/;"	f
log_if_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! log_if_err {$/;"	M
lookup_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn lookup_buffer(&mut self, client: usize) -> Option<I::Item> {$/;"	f
lower	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    lower: String,$/;"	m	struct:ConfidenceInterval
lower_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    lower_bound: f64,$/;"	m	struct:ConfidenceInterval
lower_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    lower_bound: Cell<usize>,$/;"	m	struct:FindConsumer
lower_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod lower_hex;$/;"	n
lowest_set_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn lowest_set_bit(self) -> Option<usize> {$/;"	P	implementation:BitMask
lowest_set_bit_nonzero	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub unsafe fn lowest_set_bit_nonzero(self) -> usize {$/;"	P	implementation:BitMask
lt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn lt<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for m128 {$/;"	c
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m128 {$/;"	c
m128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m128 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m16 {$/;"	c
m16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m16 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m32 {$/;"	c
m32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m32 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m64 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m64 {$/;"	c
m64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m64 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for m8 {$/;"	c
m8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for m8 {$/;"	c
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn macros() {$/;"	f
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod macros;$/;"	n
macros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing.rs	/^mod macros;$/;"	n
macros_private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod macros_private;$/;"	n
mad	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mad: ConfidenceInterval,$/;"	m	struct:Context
main_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^pub fn main_impl(input: pm::TokenStream) -> pm::TokenStream {$/;"	f
make_filename_safe	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^fn make_filename_safe(string: &str) -> String {$/;"	f
make_hash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^fn make_hash<K: Hash + ?Sized>(hash_builder: &impl BuildHasher, val: &K) -> u64 {$/;"	f
manual_configurable_endianness_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn manual_configurable_endianness_test() {$/;"	f	module:tests
many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many0() {$/;"	f	module:tests
many0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many0($/;"	M
many0_bench	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many0_bench(b: &mut Bencher) {$/;"	f	module:tests
many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many1() {$/;"	f	module:tests
many1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many1($/;"	M
many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many_m_n() {$/;"	f	module:tests
many_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many_m_n($/;"	M
many_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn many_till() {$/;"	f	module:tests
many_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! many_till($/;"	M
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod map;$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    map: HashMap<T, (), S>,$/;"	m	struct:HashSet
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^  pub fn map<F: FnOnce(usize) -> usize>(self, f: F) -> Needed {$/;"	P	implementation:Needed
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map($/;"	M
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/no_send_par_iter.rs	/^mod map {}$/;"	n
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn map<F, R>(self, map_op: F) -> Map<Self, F>$/;"	P	interface:ParallelIterator
map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod map;$/;"	n
map_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn map_init<F, INIT, T, R>(self, init: INIT, map_op: F) -> MapInit<Self, INIT, F>$/;"	P	interface:ParallelIterator
map_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_key<'new>(v: HashMap<&'static str, u8>) -> HashMap<&'new str, u8> {$/;"	f	function:assert_covariance
map_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_left<F, M>(self, f: F) -> Either<M, R>$/;"	P	implementation:Either
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    map_op: &'f F,$/;"	m	struct:FlatMapConsumer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    map_op: &'f F,$/;"	m	struct:FlatMapFolder
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    map_op: F,$/;"	m	struct:FlatMap
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^            map_op: F,$/;"	m	struct:with_producer::Callback
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    map_op: &'f F,$/;"	m	struct:MapConsumer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    map_op: &'f F,$/;"	m	struct:MapFolder
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    map_op: &'f F,$/;"	m	struct:MapProducer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    map_op: F,$/;"	m	struct:Map
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^            map_op: F,$/;"	m	struct:with_producer::Callback
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapInitConsumer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapInitProducer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapWithConsumer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapWithFolder
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapWithIter
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: &'f F,$/;"	m	struct:MapWithProducer
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: F,$/;"	m	struct:MapInit
map_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    map_op: F,$/;"	m	struct:MapWith
map_opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_opt ($/;"	M
map_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn map_reduce() {$/;"	f
map_reduce_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn map_reduce_with() {$/;"	f
map_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_res ($/;"	M
map_res_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn map_res_err() {$/;"	f	module:tests
map_res_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! map_res_err ($/;"	M
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn map_results<I, F, T, U, E>(iter: I, f: F) -> MapResults<I, F>$/;"	f
map_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn map_results<F, T, U, E>(self, f: F) -> MapResults<Self, F>$/;"	P	interface:Itertools
map_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn map_right<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
map_sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn map_sum() {$/;"	f
map_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn map_val<'new>(v: HashMap<u8, &'static str>) -> HashMap<u8, &'new str> {$/;"	f	function:assert_covariance
map_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn map_with<F, T, R>(self, init: T, map_op: F) -> MapWith<Self, T, F>$/;"	P	interface:ParallelIterator
map_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod map_with;$/;"	n
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            marker: PhantomData<HashMap<K, V, S>>,$/;"	m	struct:deserialize::MapVisitor
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            marker: PhantomData<HashSet<T, S>>,$/;"	m	struct:deserialize::SeqVisitor
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    marker: PhantomData<T>,$/;"	m	struct:Empty
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    marker: PhantomData<U>,$/;"	m	struct:TryFold
marker	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    marker: PhantomData<U>,$/;"	m	struct:TryFoldConsumer
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    mask: usize,$/;"	m	struct:ProbeSeq
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod mask;$/;"	n
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod mask;$/;"	n
mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions.rs	/^crate mod mask;$/;"	n
masks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod masks;$/;"	n
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_byte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_byte(&self, byte: u8) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
match_empty_or_deleted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn match_empty_or_deleted(&self) -> BitMask {$/;"	P	implementation:Group
match_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    match_position: MatchPosition,$/;"	m	struct:FindConsumer
match_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    match_position: MatchPosition,$/;"	m	struct:FindFolder
match_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    match_position: MatchPosition,$/;"	m	struct:FindReducer
math	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod math;$/;"	n
math	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod math;$/;"	n
math	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod math;$/;"	n
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn max<I>(iterable: I) -> Option<I::Item>$/;"	f
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn max(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^            max: usize,$/;"	m	struct:with_producer::Callback
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    max: usize,$/;"	m	struct:MaxLen
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    max: usize,$/;"	m	struct:MaxLenProducer
max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn max(self) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
max_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn max_by<F>(self, f: F) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
max_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn max_by_key<K, F>(self, f: F) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn max_len(&self) -> usize {$/;"	P	interface:Producer
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn max_len(&self) -> usize {$/;"	f
max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn max_len(&self) -> usize {$/;"	P	implementation:ZipProducer
mean	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    mean: ConfidenceInterval,$/;"	m	struct:Context
measure_only	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    measure_only: bool,$/;"	m	struct:Criterion
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn measurement_complete($/;"	P	implementation:FileCsvReport
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn measurement_complete($/;"	P	implementation:Html
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	implementation:Reports
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete($/;"	P	interface:Report
measurement_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_complete(&self, id: &BenchmarkId, _: &ReportContext, meas: &MeasurementData) /;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:CliReport
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	implementation:Reports
measurement_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn measurement_start($/;"	P	interface:Report
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    measurement_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub measurement_time: Duration,$/;"	m	struct:BenchmarkConfig
measurement_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn measurement_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
median	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    median: ConfidenceInterval,$/;"	m	struct:Context
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:Merge
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    merge: MergeCore<I, J>,$/;"	m	struct:MergeBy
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge<I, J>(i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::Into/;"	f
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge<J>(self, other: J) -> Merge<Self, J::IntoIter>$/;"	P	interface:Itertools
merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn merge<T, F>(v: &mut [T], mid: usize, buf: *mut T, is_less: &F)$/;"	f
merge_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_by<J, F>(self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_by_new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn merge_by_new<I, J, F>(a: I, b: J, cmp: F) -> MergeBy<I, J, F>$/;"	f
merge_join	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod merge_join;$/;"	n
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn merge_join_by<J, F>(self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>$/;"	P	interface:Itertools
merge_join_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^pub fn merge_join_by<I, J, F>(left: I, right: J, cmp_fn: F)$/;"	f
mergesort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn mergesort<T, F>(v: &mut [T], buf: *mut T, is_less: &F) -> MergesortResult$/;"	f
mergesort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^mod mergesort;$/;"	n
method	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^macro_rules! method ($/;"	M
methods	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod methods;$/;"	n
midpoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn midpoint(&self, end: usize) -> usize {$/;"	f
midpoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn midpoint(&self, end: usize) -> usize;$/;"	P	interface:Fissile
midpoint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn midpoint(&self, end: usize) -> usize {$/;"	P	implementation:str
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn min<I>(iterable: I) -> Option<I::Item>$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    min: usize,$/;"	m	struct:PadUsing
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn min(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^            min: usize,$/;"	m	struct:with_producer::Callback
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    min: usize,$/;"	m	struct:MinLen
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    min: usize,$/;"	m	struct:MinLenProducer
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn min(self) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    min: usize,$/;"	m	struct:LengthSplitter
min	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    min: usize,$/;"	m	struct:Date
min_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn min_by<F>(self, f: F) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
min_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn min_by_key<K, F>(self, f: F) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn min_len(&self) -> usize {$/;"	P	interface:Producer
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn min_len(&self) -> usize {$/;"	f
min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn min_len(&self) -> usize {$/;"	P	implementation:ZipProducer
min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions.rs	/^mod min_max;$/;"	n
min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn min_max() {$/;"	f
min_max_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn min_max_by() {$/;"	f
min_max_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn min_max_by_key() {$/;"	f
minimal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod minimal;$/;"	n
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax(self) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod minmax;$/;"	n
minmax_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by<F>(self, mut compare: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn minmax_by_key<K, F>(self, key: F) -> MinMaxResult<Self::Item>$/;"	P	interface:Itertools
minmax_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs	/^pub fn minmax_impl<I, K, F, L>(mut it: I, mut key_for: F,$/;"	f
mkdirp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn mkdirp<P>(path: &P) -> Result<()>$/;"	f
mmx	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod mmx;$/;"	n
month	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    month: usize,$/;"	m	struct:Date
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for msize {$/;"	c
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for msize {$/;"	c
msize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for msize {$/;"	c
mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul(a: SizeHint, b: SizeHint) -> SizeHint {$/;"	f
mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^fn mul<T: Product>(left: T, right: T) -> T {$/;"	f
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod mul_add;$/;"	n
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod mul_add;$/;"	n
mul_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_add.rs	/^    fn mul_add(self, y: Self, z: Self) -> Self;$/;"	P	interface:MulAdd
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod mul_adde;$/;"	n
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod mul_adde;$/;"	n
mul_adde	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/mul_adde.rs	/^    fn mul_adde(self, y: Self, z: Self) -> Self;$/;"	P	interface:MulAddE
mul_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn mul_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
multi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod multi;$/;"	n
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^pub fn multi_cartesian_product<H>(iters: H) -> MultiProduct<<H::Item as IntoIterator>::IntoIter>$/;"	f
multi_cartesian_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn multi_cartesian_product(self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>$/;"	P	interface:Itertools
multi_product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^mod multi_product;$/;"	n
multipeek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^pub fn multipeek<I>(iterable: I) -> MultiPeek<I::IntoIter>$/;"	f
multipeek_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod multipeek_impl;$/;"	n
multispace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace<T>(input: T) -> IResult<T, T>$/;"	f
multispace0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace0<T>(input: T) -> IResult<T, T>$/;"	f
multispace1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn multispace1<T>(input: T) -> IResult<T, T>$/;"	f
multizip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^pub fn multizip<T, U>(t: U) -> Zip<T>$/;"	f
must_use	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod must_use;$/;"	n
must_use	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/must_use.rs	/^macro_rules! must_use {$/;"	M
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    n: usize,$/;"	m	struct:Combinations
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    n: usize,$/;"	m	struct:RepeatN
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^            n: usize,$/;"	m	struct:with_producer::Callback
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    n: usize,$/;"	m	struct:Skip
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^            n: usize,$/;"	m	struct:with_producer::Callback
n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    n: usize,$/;"	m	struct:Take
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    name: String,$/;"	m	struct:Generator
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    name: String,$/;"	m	struct:Solver
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndexBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:IndividualBenchmark
name	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    name: String,$/;"	m	struct:Plot
named	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named ($/;"	M
named_args	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named_args {$/;"	M
named_attr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! named_attr ($/;"	M
ne	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn ne<I>(self, other: I) -> bool$/;"	P	interface:IndexedParallelIterator
need_more	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub fn need_more<I: AtEof, O, E>(input: I, needed: Needed) -> IResult<I, O, E> {$/;"	f
need_more_err	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^pub fn need_more_err<I: AtEof, O, E>(input: I, needed: Needed, err: ErrorKind<E>) -> IResult<I, /;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/map.rs	/^    pub(crate) fn new() -> Map {$/;"	P	implementation:Map
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type) -> Solver {$/;"	P	implementation:Solver
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn new(name: &syn::Ident, out_t: &syn::Type, is_result: bool) -> Generator {$/;"	P	implementation:Generator
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F, I>(id: S, f: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new<S, F>(id: S, f: F) -> Benchmark$/;"	P	implementation:Benchmark
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn new(name: &str, url: &str) -> Plot {$/;"	P	implementation:Plot
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    pub fn new() -> Html {$/;"	P	implementation:Html
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn new(distributions: &Distributions, points: &BTreeMap<Statistic, f64>, cl: f64) -> Estimat/;"	P	implementation:Estimate
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn new<F>(name: &str, f: F) -> Fun<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn new(f: F) -> CommandFactory<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new($/;"	P	implementation:CliReport
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn new(reports: Vec<Box<Report>>) -> Reports {$/;"	P	implementation:Reports
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    pub fn new(f: F) -> Function<F, T> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn new() -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn new() -> RawTable<T> {$/;"	P	implementation:RawTable
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn new() -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn new(iter: I) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pub fn new(it: I) -> LazyBuffer<I> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn new(size: usize) -> Self {$/;"	P	implementation:ChunkIndex
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new<K, J, F>(iter: J, f: F) -> GroupBy<K, J::IntoIter, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn new(mut it: I) -> Option<HeadTail<I>> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^pub fn new<I>(iter: I) -> (Tee<I>, Tee<I>)$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn new(buf: T::Buffer) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    pub fn new() -> Parser<'a> {$/;"	P	implementation:tests::Parser
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn new(a: A, b: B) -> ChainSeq<A, B>$/;"	P	implementation:ChainSeq
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn new(a_len: usize, a: A, b: B) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^pub fn new<A, B>(a: A, b: B) -> Chain<A, B>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^pub fn new<I>(i: I, size: usize) -> Chunks<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn new(base: C) -> Self {$/;"	P	implementation:ClonedConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^pub fn new<I>(base: I) -> Cloned<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    pub fn new(writes: &'c AtomicUsize, target: &'c mut [T]) -> CollectConsumer<'c, T> {$/;"	P	implementation:CollectConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    fn new(vec: &'c mut Vec<T>, len: usize) -> Self {$/;"	P	implementation:Collect
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^pub fn new<I>(base: I) -> Enumerate<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn new(base: C, filter_op: &'p P) -> Self {$/;"	P	implementation:FilterConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^pub fn new<I, P>(base: I, filter_op: P) -> Filter<I, P>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn new(base: C, filter_op: &'p P) -> Self {$/;"	P	implementation:FilterMapConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^pub fn new<I, P>(base: I, filter_op: P) -> FilterMap<I, P>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn new(find_op: &'p P, found: &'p AtomicBool) -> Self {$/;"	P	implementation:FindConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn new(find_op: &'p P, match_position: MatchPosition, best_found: &'p AtomicUsize) -> Self {$/;"	P	implementation:FindConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn new(base: C, map_op: &'f F) -> Self {$/;"	P	implementation:FlatMapConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^pub fn new<I, F>(base: I, map_op: F) -> FlatMap<I, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flatten.rs	/^pub fn new<I, PI>(base: I) -> Flatten<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn new(base: C, inspect_op: &'f F) -> Self {$/;"	P	implementation:InspectConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^pub fn new<I, F>(base: I, inspect_op: F) -> Inspect<I, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn new(i: I, j: J, i_len: usize, j_len: usize, i_next: bool) -> InterleaveProducer<I, J> {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^pub fn new<I, J>(i: I, j: J) -> Interleave<I, J>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^pub fn new<I, J>(i: I, j: J) -> InterleaveShortest<I, J>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn new(base: C, item: T) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn new(base: P, item: P::Item, len: usize) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^pub fn new<I>(base: I, item: I::Item) -> Intersperse<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn new(base: C, map_op: &'f F) -> Self {$/;"	P	implementation:MapConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^pub fn new<I, F>(base: I, map_op: F) -> Map<I, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn new(base: C, init: &'f INIT, map_op: &'f F) -> Self {$/;"	P	implementation:MapInitConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn new(base: C, item: U, map_op: &'f F) -> Self {$/;"	P	implementation:MapWithConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^pub fn new<I, T, F>(base: I, item: T, map_op: F) -> MapWith<I, T, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    pub fn new() -> Self {$/;"	P	implementation:NoopConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn new() -> Splitter {$/;"	P	implementation:Splitter
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn new(min: usize, max: usize, len: usize) -> LengthSplitter {$/;"	P	implementation:LengthSplitter
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn new() -> ProductConsumer<P> {$/;"	P	implementation:ProductConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^pub fn new<I>(base: I) -> Rev<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^pub fn new<I>(base: I, n: usize) -> Skip<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn new() -> SumConsumer<S> {$/;"	P	implementation:SumConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^pub fn new<I>(base: I, n: usize) -> Take<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn new(base: C, update_op: &'f F) -> Self {$/;"	P	implementation:UpdateConsumer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^pub fn new<I, F>(base: I, update_op: F) -> Update<I, F>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^pub fn new<I>(base: I) -> WhileSome<I>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^pub fn new<A, B>(a: A, b: B) -> Zip<A, B>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^pub fn new<A, B>(a: A, b: B) -> ZipEq<A, B>$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    pub fn new(data: V, separator: &'p P) -> Self {$/;"	f
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn new(chars: &'ch str, separator: P) -> Self {$/;"	P	implementation:Split
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn new(chars: &'ch str, terminator: &'sep P) -> Self {$/;"	P	implementation:SplitTerminatorProducer
new	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn new(chars: &'ch str, terminator: P) -> Self {$/;"	P	implementation:SplitTerminator
new	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    fn new(id: i32, x: i32, y: i32, width: i32, height: i32) -> LandClaim {$/;"	P	implementation:LandClaim
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> Self::Extender;$/;"	P	interface:ExtendInto
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:char
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:str
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn new_builder(&self) -> Vec<u8> {$/;"	P	implementation:u8
new_builder	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn new_builder(&self) -> String {$/;"	P	implementation:CompleteStr
new_chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^pub fn new_chunks<J>(iter: J, size: usize) -> IntoChunks<J::IntoIter>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S, F, I>(id: S, program: F, parameters: I) -> ParameterizedBenchmark<T>$/;"	f
new_external	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn new_external<S>(id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
new_format	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format<'a, I, F>(iter: I, separator: &'a str, f: F) -> FormatWith<'a, I, F>$/;"	f
new_format_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^pub fn new_format_default<'a, I>(iter: I, separator: &'a str) -> Format<'a, I>$/;"	f
new_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^pub fn new_init<I, INIT, F>(base: I, init: INIT, map_op: F) -> MapInit<I, INIT, F>$/;"	f
new_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^pub fn new_max_len<I>(base: I, max: usize) -> MaxLen<I>$/;"	f
new_min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^pub fn new_min_len<I>(base: I, min: usize) -> MinLen<I>$/;"	f
new_uninitialized	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn new_uninitialized(buckets: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K)> {$/;"	P	implementation:Keys
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a V)> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a K, &'a mut V)> {$/;"	P	implementation:IterMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a V)> {$/;"	P	implementation:Values
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(&'a mut V)> {$/;"	P	implementation:ValuesMut
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn next(&mut self) -> Option<(K, V)> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:BitMaskIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<Bucket<T>> {$/;"	P	implementation:RawIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawDrain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:RawIntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:ProbeSeq
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a K> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<&'a T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:Drain
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn next(&mut self) -> Option<K> {$/;"	P	implementation:IntoIter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<(I::Item, J::Item)> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<B> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Tuple1Combination
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	P	implementation:PutBackN
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<A> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn next(&mut self) -> Option<I::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:WithPosition
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn next(&mut self) -> Option<R> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:Iter
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:SliceDrain
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn next_back(&mut self) -> Option<I::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn next_back(&mut self) -> Option<R> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn next_back(&mut self) -> Option<T> {$/;"	P	implementation:Iter
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	f
next_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:SliceDrain
next_element	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn next_element(&mut self) -> Option<I::Item> {$/;"	f
next_tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn next_tuple<T>(&mut self) -> Option<T>$/;"	P	interface:Itertools
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut f: F) -> Option<I::Item>$/;"	f
next_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn next_with<F>(&mut self, mut less_than: F) -> Option<I::Item>$/;"	f
no_send_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod no_send_par_iter;$/;"	n
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    noise_threshold: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub noise_threshold: f64,$/;"	m	struct:BenchmarkConfig
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn noise_threshold(mut self, threshold: f64) -> Criterion {$/;"	P	implementation:Criterion
noise_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub noise_threshold: f64,$/;"	m	struct:ComparisonData
nom	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod nom;$/;"	n
non_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn non_empty<T>(input: T) -> IResult<T, T>$/;"	f
non_privitive_type	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn non_privitive_type() {$/;"	f	module:tests
none_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn none_of() {$/;"	f	module:tests
none_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! none_of ($/;"	M
noop	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod noop;$/;"	n
not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn not() {$/;"	f	module:tests
not	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! not($/;"	M
not_line_ending	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn not_line_ending<T>(input: T) -> IResult<T, T>$/;"	f
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    nresamples: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub nresamples: usize,$/;"	m	struct:BenchmarkConfig
nresamples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn nresamples(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
nth	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn nth(&mut self, n: usize) -> Option<Self::Item> {$/;"	f
num_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn num_items() -> usize;$/;"	P	interface:TupleCollect
oct_digit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit0<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn oct_digit1<T>(input: T) -> IResult<T, T>$/;"	f
oct_digit_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn oct_digit_test() {$/;"	f	module:tests
octal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod octal;$/;"	n
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    offset: usize,$/;"	m	struct:ProbeSeq
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn offset() {$/;"	f	module:tests
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize {$/;"	P	implementation:str
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize {$/;"	P	implementation:u8
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn offset(&self, second: &Self) -> usize;$/;"	P	interface:Offset
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &CompleteByteSlice<'a>) -> usize {$/;"	P	implementation:CompleteByteSlice
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &CompleteStr<'a>) -> usize {$/;"	P	implementation:CompleteStr
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn offset(&self, second: &Input<T>) -> usize {$/;"	P	implementation:Input
offset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    offset: usize,$/;"	m	struct:EnumerateProducer
oldest_buffered_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    oldest_buffered_group: usize,$/;"	m	struct:GroupInner
once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod once;$/;"	n
once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^pub fn once<T: Send>(item: T) -> Once<T> {$/;"	f
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  macro_rules! one_of ($/;"	M	module:tests
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^  fn one_of() {$/;"	f	module:tests
one_of	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^macro_rules! one_of ($/;"	M
op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    op: &'f F,$/;"	m	struct:ForEachConsumer
op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    op: &'a OP,$/;"	m	struct:UnzipConsumer
op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    op: &'a OP,$/;"	m	struct:UnzipFolder
op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    op: OP,$/;"	m	struct:UnzipA
op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    op: OP,$/;"	m	struct:UnzipB
ops	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod ops;$/;"	n
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn opt() {$/;"	f	module:tests
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! opt($/;"	M
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    opt: Option<T>,$/;"	m	struct:IntoIter
opt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    opt: Option<T>,$/;"	m	struct:OptionProducer
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:Empty
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	interface:ParallelIterator
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:Once
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:IntoIter
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	f
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:Chunks
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:ChunksMut
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:Iter
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:IterMut
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:Windows
opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn opt_len(&self) -> Option<usize> {$/;"	P	implementation:IntoIter
opt_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn opt_res() {$/;"	f	module:tests
opt_res	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! opt_res ($/;"	M
opt_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    opt_result: Option<Result<T::Ok, T::Error>>,$/;"	m	struct:TryReduceWithFolder
option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod option;$/;"	n
or_default	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_default(self) -> &'a mut V {$/;"	P	implementation:Entry
or_insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert(self, default: V) -> &'a mut V {$/;"	P	implementation:Entry
or_insert_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn or_insert_with<F: FnOnce() -> V>(self, default: F) -> &'a mut V {$/;"	P	implementation:Entry
ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod ord;$/;"	n
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Difference
other	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    other: &'a HashSet<T, S>,$/;"	m	struct:Intersection
out	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod out;$/;"	n
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    out_t: String,$/;"	m	struct:Generator
out_t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    out_t: String,$/;"	m	struct:Solver
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn outliers<'a>($/;"	f
outliers	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub fn outliers(&self, sample: &LabeledSample<f64>) {$/;"	P	implementation:CliReport
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    output_directory: String,$/;"	m	struct:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn output_directory(mut self, path: &std::path::Path) -> Criterion {$/;"	P	implementation:Criterion
output_directory	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub output_directory: String,$/;"	m	struct:ReportContext
owner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    owner: bool,$/;"	m	struct:TeeBuffer
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    p_value: String,$/;"	m	struct:Comparison
p_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub p_value: f64,$/;"	m	struct:ComparisonData
pad_tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod pad_tail;$/;"	n
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn pad_using<F>(self, min: usize, f: F) -> PadUsing<Self, F>$/;"	P	interface:Itertools
pad_using	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^pub fn pad_using<I, F>(iter: I, min: usize, filler: F) -> PadUsing<I, F>$/;"	f
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn pair() {$/;"	f	module:tests
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! pair($/;"	M
pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn pair() {$/;"	f	module:tests
pair_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! pair_sep ($/;"	M
par_bridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod par_bridge;$/;"	n
par_bridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn par_bridge(self) -> IterBridge<Self> {$/;"	f
par_bridge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn par_bridge(self) -> IterBridge<Self>;$/;"	P	interface:ParallelBridge
par_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_bytes(&self) -> Bytes {$/;"	P	interface:ParallelString
par_char_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_char_indices(&self) -> CharIndices {$/;"	P	interface:ParallelString
par_chars	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_chars(&self) -> Chars {$/;"	P	interface:ParallelString
par_chunks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_chunks(&self, chunk_size: usize) -> Chunks<T> {$/;"	P	interface:ParallelSlice
par_chunks_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_chunks_mut(&mut self, chunk_size: usize) -> ChunksMut<T> {$/;"	P	interface:ParallelSliceMut
par_either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod par_either;$/;"	n
par_encode_utf16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_encode_utf16(&self) -> EncodeUtf16 {$/;"	P	interface:ParallelString
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    fn par_extend<I>(&mut self, par_iter: I)$/;"	f
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^    fn par_extend<I>(&mut self, par_iter: I)$/;"	P	implementation:String
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^    fn par_extend<I>(&mut self, par_iter: I)$/;"	f
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn par_extend<I>(&mut self, par_iter: I) where I: IntoParallelIterator<Item = T>;$/;"	P	interface:ParallelExtend
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn par_extend<I>(&mut self, pi: I)$/;"	f
par_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn par_extend<I>(&mut self, par_iter: I)$/;"	f
par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn par_iter(&'data self) -> Self::Iter {$/;"	f
par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn par_iter(&'data self) -> Self::Iter;$/;"	P	interface:IntoParallelRefIterator
par_iter_collect	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect() {$/;"	f
par_iter_collect_binaryheap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_binaryheap() {$/;"	f
par_iter_collect_btreemap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_btreemap() {$/;"	f
par_iter_collect_btreeset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_btreeset() {$/;"	f
par_iter_collect_cows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_cows() {$/;"	f
par_iter_collect_hashmap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_hashmap() {$/;"	f
par_iter_collect_hashset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_hashset() {$/;"	f
par_iter_collect_linked_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_linked_list() {$/;"	f
par_iter_collect_linked_list_flat_map_filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_linked_list_flat_map_filter() {$/;"	f
par_iter_collect_option	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_option() {$/;"	f
par_iter_collect_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_result() {$/;"	f
par_iter_collect_vecdeque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_collect_vecdeque() {$/;"	f
par_iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn par_iter_mut(&'data mut self) -> Self::Iter {$/;"	f
par_iter_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn par_iter_mut(&'data mut self) -> Self::Iter;$/;"	P	interface:IntoParallelRefMutIterator
par_iter_unindexed_flat_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^pub fn par_iter_unindexed_flat_map() {$/;"	f
par_lines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_lines(&self) -> Lines {$/;"	P	interface:ParallelString
par_match_indices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_match_indices<P: Pattern>(&self, pattern: P) -> MatchIndices<P> {$/;"	P	interface:ParallelString
par_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_matches<P: Pattern>(&self, pattern: P) -> Matches<P> {$/;"	P	interface:ParallelString
par_merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn par_merge<T, F>(left: &mut [T], right: &mut [T], dest: *mut T, is_less: &F)$/;"	f
par_mergesort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^pub fn par_mergesort<T, F>(v: &mut [T], is_less: F)$/;"	f
par_quicksort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^pub fn par_quicksort<T, F>(v: &mut [T], is_less: F)$/;"	f
par_sort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort(&mut self)$/;"	P	interface:ParallelSliceMut
par_sort_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort_by<F>(&mut self, compare: F)$/;"	P	interface:ParallelSliceMut
par_sort_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort_by_key<B, F>(&mut self, f: F)$/;"	P	interface:ParallelSliceMut
par_sort_unstable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort_unstable(&mut self)$/;"	P	interface:ParallelSliceMut
par_sort_unstable_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort_unstable_by<F>(&mut self, compare: F)$/;"	P	interface:ParallelSliceMut
par_sort_unstable_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_sort_unstable_by_key<B, F>(&mut self, f: F)$/;"	P	interface:ParallelSliceMut
par_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_split<P>(&self, separator: P) -> Split<T, P>$/;"	P	interface:ParallelSlice
par_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_split<P: Pattern>(&self, separator: P) -> Split<P> {$/;"	P	interface:ParallelString
par_split_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_split_mut<P>(&mut self, separator: P) -> SplitMut<T, P>$/;"	P	interface:ParallelSliceMut
par_split_terminator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_split_terminator<P: Pattern>(&self, terminator: P) -> SplitTerminator<P> {$/;"	P	interface:ParallelString
par_split_whitespace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn par_split_whitespace(&self) -> SplitWhitespace {$/;"	P	interface:ParallelString
par_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn par_windows(&self, window_size: usize) -> Windows<T> {$/;"	P	interface:ParallelSlice
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Group
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a GroupBy<K, I, F>,$/;"	m	struct:Groups
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunk
parent	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    parent: &'a IntoChunks<I>,$/;"	m	struct:Chunks
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn parse_input(input: &str) -> Vec<isize> {$/;"	f
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn parse_input(input: &str) -> Vec<LandClaim> {$/;"	f
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^fn parse_input(input: &str) -> Vec<Event> {$/;"	f
parse_input	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^fn parse_input(input: &str) -> Vec<u8> {$/;"	f
parse_lib_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn parse_lib_infos(infos: pm::TokenStream) -> Result<LibInfos, ()> {$/;"	f
parse_main_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn parse_main_infos(infos: pm::TokenStream) -> Result<MainInfos, ()> {$/;"	f
parse_meta	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^fn parse_meta(attrs: &[syn::Attribute]) -> Result<AocMeta, Box<dyn error::Error>> {$/;"	f
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn parse_to() {$/;"	f	module:tests
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! parse_to ($/;"	M
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:str
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:u8
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn parse_to(&self) -> Option<R>;$/;"	P	interface:ParseTo
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:CompleteByteSlice
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:CompleteStr
parse_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn parse_to(&self) -> Option<R> {$/;"	P	implementation:Input
parsers	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^mod parsers {$/;"	n
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part1(input: &[isize]) -> isize {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part1(input: &Vec<LandClaim>) -> usize {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^fn part1(input: &Vec<Event>) -> usize {$/;"	f
part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^fn part1(input: &Vec<u8>) -> usize {$/;"	f
part1_burnt	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^fn part1_burnt(input: &str) -> u32 {$/;"	f
part1_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^    fn part1_example() {$/;"	f	module:tests
part1_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part1_example() {$/;"	f	module:tests
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^fn part2(input: &[isize]) -> isize {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^fn part2(input: &Vec<LandClaim>) -> usize {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^fn part2(input: &Vec<Event>) -> usize {$/;"	f
part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^fn part2(input: &Vec<u8>) -> usize {$/;"	f
part2_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^    fn part2_example() {$/;"	f	module:tests
part2_example	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^    fn part2_example() {$/;"	f	module:tests
part2_simd	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^pub fn part2_simd<'a>(input: &'a str) -> String {$/;"	f
partial_cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn partial_cmp<I>(self, other: I) -> Option<Ordering>$/;"	P	interface:IndexedParallelIterator
partial_cmp	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^        fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	P	implementation:sweepline::SweepEvent
partial_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod partial_eq;$/;"	n
partial_insertion_sort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn partial_insertion_sort<T, F>(v: &mut [T], is_less: &F) -> bool$/;"	f
partial_ord	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod partial_ord;$/;"	n
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub fn partition<'a, A: 'a, I, F>(iter: I, mut pred: F) -> usize$/;"	f
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn partition<A, B, P>(self, predicate: P) -> (A, B)$/;"	P	interface:ParallelIterator
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^pub fn partition<I, A, B, P>(pi: I, predicate: P) -> (A, B)$/;"	f
partition	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn partition<T, F>(v: &mut [T], pivot: usize, is_less: &F) -> (usize, bool)$/;"	f
partition_equal	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn partition_equal<T, F>(v: &mut [T], pivot: usize, is_less: &F) -> usize$/;"	f
partition_in_blocks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn partition_in_blocks<T, F>(v: &mut [T], pivot: &T, is_less: &F) -> usize$/;"	f
partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn partition_map<A, B, F, L, R>(self, predicate: F) -> (A, B)$/;"	P	interface:Itertools
partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn partition_map<A, B, P, L, R>(self, predicate: P) -> (A, B)$/;"	P	interface:ParallelIterator
partition_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^pub fn partition_map<I, A, B, P, L, R>(pi: I, predicate: P) -> (A, B)$/;"	f
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub path: PathBuf,$/;"	m	struct:AccessError
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: Option<String>,$/;"	m	struct:IndexBenchmark
path	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    path: String,$/;"	m	struct:IndividualBenchmark
pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    pattern: &'pat P,$/;"	m	struct:MatchIndicesProducer
pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    pattern: &'pat P,$/;"	m	struct:MatchesProducer
pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    pattern: P,$/;"	m	struct:MatchIndices
pattern	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    pattern: P,$/;"	m	struct:Matches
pdf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf($/;"	f
pdf_small	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn pdf_small(sample: &Sample<f64>, path: String, size: Option<Size>) -> Child {$/;"	f
pdfs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub fn pdfs($/;"	f
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    peek: Option<I::Item>,$/;"	m	struct:Intersperse
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn peek(&mut self) -> Option<&I::Item> {$/;"	P	implementation:MultiPeek
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn peek() {$/;"	f	module:tests
peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! peek($/;"	M
peekable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    peekable: Peekable<Fuse<I>>,$/;"	m	struct:WithPosition
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	P	interface:PeekingNext
peeking_next	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn peeking_next<F>(&mut self, accept: F) -> Option<Self::Item>$/;"	f
peeking_next_by_clone	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^macro_rules! peeking_next_by_clone {$/;"	M
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn peeking_take_while<F>(&mut self, accept: F) -> PeekingTakeWhile<Self, F>$/;"	P	interface:Itertools
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod peeking_take_while;$/;"	n
peeking_take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^pub fn peeking_take_while<I, F>(iter: &mut I, f: F) -> PeekingTakeWhile<I, F>$/;"	f
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn permutation() {$/;"	f	module:tests
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation ($/;"	M
permutation	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn permutation() {$/;"	f	module:tests
permutation_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_init ($/;"	M
permutation_iterator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_iterator ($/;"	M
permutation_iterator_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! permutation_iterator_sep ($/;"	M
permutation_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! permutation_sep ($/;"	M
permutation_unwrap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! permutation_unwrap ($/;"	M
phase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    phase: bool, \/\/ false ==> it0, true ==> it1$/;"	m	struct:InterleaveShortest
plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plot;$/;"	n
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    plot_config: PlotConfiguration,$/;"	m	struct:PartialBenchmarkConfig
plot_config	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plot_config: PlotConfiguration,$/;"	m	struct:ReportContext
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    plotting: Plotting,$/;"	m	struct:Criterion
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod plotting {$/;"	n
plotting	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub plotting: Plotting,$/;"	m	struct:ReportContext
plumbing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^pub mod plumbing;$/;"	n
point	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    point: String,$/;"	m	struct:ConfidenceInterval
point_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    point_estimate: f64,$/;"	m	struct:Estimate
pointer_sized_int	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod pointer_sized_int;$/;"	n
pool	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs	/^    pool: LazyBuffer<I>,$/;"	m	struct:Combinations
pos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    pos: usize,$/;"	m	struct:PadUsing
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:str
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:u8
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	interface:InputIter
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:CompleteByteSlice
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:CompleteStr
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn position<P>(&self, predicate: P) -> Option<usize>$/;"	P	implementation:Input
position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn position<P>(self, predicate: P) -> Option<usize>$/;"	P	interface:IndexedParallelIterator
position_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn position_any<P>(self, predicate: P) -> Option<usize>$/;"	P	interface:IndexedParallelIterator
position_first	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn position_first<P>(self, predicate: P) -> Option<usize>$/;"	P	interface:IndexedParallelIterator
position_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn position_last<P>(self, predicate: P) -> Option<usize>$/;"	P	interface:IndexedParallelIterator
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn positions<I, F>(iter: I, f: F) -> Positions<I, F>$/;"	f
positions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn positions<P>(self, predicate: P) -> Positions<Self, P>$/;"	P	interface:Itertools
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod powf;$/;"	n
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod powf;$/;"	n
powf	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf(self, x: Self) -> Self;$/;"	P	interface:Powf
powf_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_f32(x: f32, y: f32) -> f32;$/;"	f
powf_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_f64(x: f64, y: f64) -> f64;$/;"	f
powf_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v16f32(x: f32x16, y: f32x16) -> f32x16;$/;"	f
powf_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v2f32(x: f32x2, y: f32x2) -> f32x2;$/;"	f
powf_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v2f64(x: f64x2, y: f64x2) -> f64x2;$/;"	f
powf_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v4f32(x: f32x4, y: f32x4) -> f32x4;$/;"	f
powf_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v4f64(x: f64x4, y: f64x4) -> f64x4;$/;"	f
powf_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v8f32(x: f32x8, y: f32x8) -> f32x8;$/;"	f
powf_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/powf.rs	/^    fn powf_v8f64(x: f64x8, y: f64x8) -> f64x8;$/;"	f
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn preceded() {$/;"	f	module:tests
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! preceded($/;"	M
preceded	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn preceded() {$/;"	f	module:tests
preceded_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! preceded_sep ($/;"	M
predicate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    predicate: P,$/;"	m	struct:Partition
predicate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    predicate: P,$/;"	m	struct:PartitionMap
prelude	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^    pub mod prelude {$/;"	n	module:lib::std
prelude	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod prelude;$/;"	n
prepare_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn prepare_errors<O, E: Clone>(input: &[u8], res: IResult<&[u8], O, E>) -> Option<Vec<(Error/;"	f
previous	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    previous: Option<R>,$/;"	m	struct:FlatMapFolder
print	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn print<T: Debug>(input: T) -> IResult<T, ()> {$/;"	f
print_codes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_codes(colors: &HashMap<u32, u8>, names: &HashMap<u32, &str>) -> String {$/;"	f
print_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_error<O, E: Clone>(input: &[u8], res: IResult<&[u8], O, E>) {$/;"	f
print_offsets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn print_offsets<E>(input: &[u8], from: usize, offsets: &[(ErrorKind<E>, usize, usize)]) -> /;"	f
print_overwritable	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn print_overwritable(&self, s: String) {$/;"	P	implementation:CliReport
private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod private {$/;"	n
private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod private;$/;"	n
private	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^mod private {$/;"	n
private_decl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/private.rs	/^macro_rules! private_decl {$/;"	M
private_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/private.rs	/^macro_rules! private_impl {$/;"	M
probe_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn probe_seq(&self, hash: u64) -> ProbeSeq {$/;"	P	implementation:RawTable
process_results	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^pub fn process_results<I, F, T, E, R>(iterable: I, processor: F) -> Result<R, E>$/;"	f
process_results_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod process_results_impl;$/;"	n
produce_fewer_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn produce_fewer_items() {$/;"	f
produce_too_many_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn produce_too_many_items() {$/;"	f
produces_items_with_no_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn produces_items_with_no_complete() {$/;"	f
product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn product<P>(self) -> P$/;"	P	interface:ParallelIterator
product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod product;$/;"	n
product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    product: P,$/;"	m	struct:ProductFolder
product	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^pub fn product<PI, P>(pi: PI) -> P$/;"	f
program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod program;$/;"	n
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    ptr: NonNull<T>,$/;"	m	struct:Bucket
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod ptr;$/;"	n
ptr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/minimal.rs	/^mod ptr;$/;"	n
ptr_vals	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^macro_rules! ptr_vals {$/;"	M
pub_crate_named_mod	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  mod pub_crate_named_mod {$/;"	n	module:tests
pub_crate_named_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn pub_crate_named_test() {$/;"	f	module:tests
pub_named_mod	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  mod pub_named_mod {$/;"	n	module:tests
pub_named_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn pub_named_test() {$/;"	f	module:tests
push_next_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn push_next_group(&mut self, group: Vec<I::Item>) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn put_back<I>(iterable: I) -> PutBack<I::IntoIter>$/;"	f
put_back	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    pub fn put_back(&mut self, x: I::Item) {$/;"	P	implementation:PutBackN
put_back_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^pub fn put_back_n<I>(iterable: I) -> PutBackN<I::IntoIter>$/;"	f
put_back_n_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod put_back_n_impl;$/;"	n
quicksort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^mod quicksort;$/;"	n
r2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    r2: ConfidenceInterval,$/;"	m	struct:Context
range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod range;$/;"	n
range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    range: Range<T>,$/;"	m	struct:Iter
range	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^    range: Range<T>,$/;"	m	struct:IterProducer
raw	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod raw;$/;"	n
rc_par_iter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/compile_fail/mod.rs	/^mod rc_par_iter;$/;"	n
rcbuffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    rcbuffer: Rc<RefCell<TeeBuffer<I::Item, I>>>,$/;"	m	struct:Tee
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    pub rciter: Rc<RefCell<I>>,$/;"	m	struct:RcIter
rciter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^pub fn rciter<I>(iterable: I) -> RcIter<I::IntoIter>$/;"	f
rciter_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod rciter_impl;$/;"	n
re_bytes_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_capture() {$/;"	f	module:tests
re_bytes_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_capture ($/;"	M
re_bytes_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_capture_static() {$/;"	f	module:tests
re_bytes_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_capture_static ($/;"	M
re_bytes_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_captures() {$/;"	f	module:tests
re_bytes_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_captures ($/;"	M
re_bytes_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_captures_static() {$/;"	f	module:tests
re_bytes_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_captures_static ($/;"	M
re_bytes_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_find() {$/;"	f	module:tests
re_bytes_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_find ($/;"	M
re_bytes_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_find_static() {$/;"	f	module:tests
re_bytes_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_find_static ($/;"	M
re_bytes_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_match() {$/;"	f	module:tests
re_bytes_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_match ($/;"	M
re_bytes_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_match_static() {$/;"	f	module:tests
re_bytes_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_match_static ($/;"	M
re_bytes_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_matches() {$/;"	f	module:tests
re_bytes_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_matches ($/;"	M
re_bytes_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_bytes_matches_static() {$/;"	f	module:tests
re_bytes_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_bytes_matches_static ($/;"	M
re_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_capture() {$/;"	f	module:tests
re_capture	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_capture ($/;"	M
re_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_capture_static() {$/;"	f	module:tests
re_capture_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_capture_static ($/;"	M
re_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_captures() {$/;"	f	module:tests
re_captures	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_captures ($/;"	M
re_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_captures_static() {$/;"	f	module:tests
re_captures_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_captures_static ($/;"	M
re_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_find() {$/;"	f	module:tests
re_find	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_find ($/;"	M
re_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_find_static() {$/;"	f	module:tests
re_find_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_find_static ($/;"	M
re_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_match() {$/;"	f	module:tests
re_match	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_match ($/;"	M
re_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_match_static() {$/;"	f	module:tests
re_match_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_match_static ($/;"	M
re_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_matches() {$/;"	f	module:tests
re_matches	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_matches ($/;"	M
re_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^  fn re_matches_static() {$/;"	f	module:tests
re_matches_static	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! re_matches_static ($/;"	M
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn read(&self) -> T {$/;"	P	implementation:Bucket
read_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn read_infos() -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
read_to_end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn read_to_end(&mut self, buf: &mut Vec<u8>) -> io::Result<usize> {$/;"	f
read_write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^fn read_write() {$/;"	f
recognize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! recognize ($/;"	M
recognize_float	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn recognize_float<T>(input: T) -> IResult<T, T, u32>$/;"	f
recognize_is_a_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn recognize_is_a_s() {$/;"	f	module:test
recpre	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod recpre;$/;"	n
recurse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^unsafe fn recurse<T, F>($/;"	f
recurse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn recurse<'a, T, F>(mut v: &'a mut [T], is_less: &F, mut pred: Option<&'a mut T>, mut limit: us/;"	f
recurse_half	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/fallback_impl.rs	/^macro_rules! recurse_half {$/;"	M
recv	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn recv(&mut self) -> &str {$/;"	P	implementation:Program
red	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn red(&self, s: String) -> String {$/;"	P	implementation:CliReport
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn reduce(self, left: Option<T>, right: Option<T>) -> Option<T> {$/;"	P	implementation:FindReducer
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn reduce(self, left: Option<T>, right: Option<T>) -> Option<T> {$/;"	P	implementation:FindReducer
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn reduce<OP, ID>(self, identity: ID, op: OP) -> Self::Item$/;"	P	interface:ParallelIterator
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod reduce;$/;"	n
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn reduce(self, _left: (), _right: ()) {}$/;"	P	implementation:NoopReducer
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn reduce(self, left: Result, right: Result) -> Result;$/;"	P	interface:Reducer
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn reduce(self, left: P, right: P) -> P {$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn reduce(self, left: T, right: T) -> T {$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^pub fn reduce<PI, R, ID, T>(pi: PI, identity: ID, reduce_op: R) -> T$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn reduce(self, left: S, right: S) -> S {$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn reduce(self, left: T, right: T) -> T {$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn reduce(self, left: Option<T>, right: Option<T>) -> Option<T> {$/;"	f
reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn reduce(self, left: (A, B), right: (A, B)) -> (A, B) {$/;"	f
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    reduce_op: &'r R,$/;"	m	struct:ReduceConsumer
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    reduce_op: &'r R,$/;"	m	struct:ReduceFolder
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    reduce_op: &'r R,$/;"	m	struct:TryReduceConsumer
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    reduce_op: &'r R,$/;"	m	struct:TryReduceFolder
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    reduce_op: &'r R,$/;"	m	struct:TryReduceWithConsumer
reduce_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    reduce_op: &'r R,$/;"	m	struct:TryReduceWithFolder
reduce_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn reduce_with<OP>(self, op: OP) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod reductions;$/;"	n
reductions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod reductions;$/;"	n
ref_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! ref_ {$/;"	M
ref_mut_	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! ref_mut_ {$/;"	M
regex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! regex ($/;"	M
regex_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^macro_rules! regex_bytes ($/;"	M
regexp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod regexp;$/;"	n
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^fn regression(data: Data<f64, f64>, config: &BenchmarkConfig) -> (Distribution<f64>, Estimate) {$/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/both.rs	/^pub(crate) fn regression($/;"	f
regression	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn regression($/;"	f
rehash_in_place	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn rehash_in_place(&mut self, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
rel_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub(crate) fn rel_distributions($/;"	f
relative_distributions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_distributions: Distributions,$/;"	m	struct:ComparisonData
relative_estimates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub relative_estimates: Estimates,$/;"	m	struct:ComparisonData
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove(self) -> V {$/;"	P	implementation:OccupiedEntry
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, k: &Q) -> Option<V>$/;"	f
remove	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn remove<Q: ?Sized>(&mut self, value: &Q) -> bool$/;"	f
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry(self) -> (K, V) {$/;"	P	implementation:OccupiedEntry
remove_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn remove_entry<Q: ?Sized>(&mut self, k: &Q) -> Option<(K, V)>$/;"	f
remove_lowest_bit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn remove_lowest_bit(self) -> BitMask {$/;"	P	implementation:BitMask
repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^fn repeat(byte: u8) -> GroupWord {$/;"	f
repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod repeat;$/;"	n
repeat	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^pub fn repeat<T: Clone + Send>(elt: T) -> Repeat<T> {$/;"	f
repeat_call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn repeat_call<F, A>(function: F) -> RepeatCall<F>$/;"	f
repeat_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^pub fn repeat_n<A>(element: A, n: usize) -> RepeatN<A>$/;"	f
repeatn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod repeatn;$/;"	n
repeatn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^pub fn repeatn<T: Clone + Send>(elt: T, n: usize) -> RepeatN<T> {$/;"	f
replace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn replace(&mut self, value: T) -> Option<T> {$/;"	f
replace_entry	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_entry(self, value: V) -> (K, V) {$/;"	P	implementation:OccupiedEntry
replace_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn replace_key(self) -> K {$/;"	P	implementation:OccupiedEntry
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    report: Box<Report>,$/;"	m	struct:Criterion
report	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod report;$/;"	n
reports	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    reports: Vec<Box<Report>>,$/;"	m	struct:Reports
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn reserve(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reserve	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve_rehash	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn reserve_rehash(&mut self, additional: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
reset	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn reset(&mut self) {$/;"	f
reset_color	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn reset_color(v: &mut Vec<u8>) {$/;"	f
reset_peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    pub fn reset_peek(&mut self) {$/;"	f
resize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn resize(&mut self, capacity: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
rest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest<T>(input: T) -> IResult<T, T>$/;"	f
rest_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest_len<T>(input: T) -> IResult<T, usize>$/;"	f
rest_len_on_slices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_len_on_slices() {$/;"	f	module:tests
rest_on_slices	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_on_slices() {$/;"	f	module:tests
rest_on_strs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn rest_on_strs() {$/;"	f	module:tests
rest_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn rest_s(input: &str) -> IResult<&str, &str> {$/;"	f
result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    result: Result<U::Ok, U::Error>,$/;"	m	struct:TryFoldFolder
result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    result: Result<T::Ok, T::Error>,$/;"	m	struct:TryReduceFolder
result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod result;$/;"	n
ret_int1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    fn ret_int1(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn ret_int1(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^    fn ret_int2(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
ret_int2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn ret_int2(i: &[u8]) -> IResult<&[u8], u8> {$/;"	f	function:tests::do_parse
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn retain<F>(&mut self, mut f: F)$/;"	f
retain_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn retain_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
return_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! return_error ($/;"	M
rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn rev<I>(iterable: I) -> iter::Rev<I::IntoIter>$/;"	f
rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn rev(self) -> Rev<Self> {$/;"	P	interface:IndexedParallelIterator
rev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod rev;$/;"	n
rfind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn rfind(&self, separator: &P, end: usize) -> Option<usize> {$/;"	f
rfind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn rfind(&self, separator: &P, end: usize) -> Option<usize>;$/;"	P	interface:Fissile
rfind	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn rfind(&self, separator: &P, end: usize) -> Option<usize> {$/;"	P	implementation:str
rfind_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^        fn rfind_in(&self, &str) -> Option<usize>;$/;"	P	interface:private::Pattern
rfind_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn rfind_in(&self, chars: &str) -> Option<usize> {$/;"	P	implementation:FN
rfind_in	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn rfind_in(&self, chars: &str) -> Option<usize> {$/;"	P	implementation:char
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right(self) -> Option<R> {$/;"	P	implementation:Either
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs	/^    pub fn right(self) -> Option<B> {$/;"	P	implementation:EitherOrBoth
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    right: PutBack<Fuse<J>>,$/;"	m	struct:MergeJoinBy
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    right: CB,$/;"	m	struct:UnzipConsumer
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    right: FB,$/;"	m	struct:UnzipFolder
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    right: RB,$/;"	m	struct:UnzipReducer
right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^            macro_rules! right { () => { r.offset(-(*start_r as isize) - 1) } }$/;"	M	function:partition_in_blocks
right_and_then	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    pub fn right_and_then<F, S>(self, f: F) -> Either<L, S>$/;"	P	implementation:Either
right_end	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        right_end: *mut T,$/;"	m	struct:par_merge::State
right_produces_fewer_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn right_produces_fewer_items() {$/;"	f
right_produces_items_with_no_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn right_produces_items_with_no_complete() {$/;"	f
right_produces_too_many_items	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/test.rs	/^fn right_produces_too_many_items() {$/;"	f
right_start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        right_start: *mut T,$/;"	m	struct:par_merge::State
routine	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^mod routine;$/;"	n
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<()>>,$/;"	m	struct:Benchmark
routines	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    routines: Vec<NamedRoutine<T>>,$/;"	m	struct:ParameterizedBenchmark
rsqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod rsqrte;$/;"	n
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn run(&self) -> Box<dyn Display>;$/;"	P	interface:Runner
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	P	implementation:Benchmark
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion) {$/;"	f
run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn run(self, group_id: &str, c: &Criterion);$/;"	P	interface:BenchmarkDefinition
run_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            run_result: Option<bool>,$/;"	m	struct:AocMeta::build::Builder
run_result	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    run_result: bool,$/;"	m	struct:AocMeta
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^            runner: Option<syn::Ident>,$/;"	m	struct:AocMeta::build::Builder
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/derive.rs	/^    runner: syn::Ident,$/;"	m	struct:AocMeta
runner	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod runner;$/;"	n
runner_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/runner.rs	/^pub fn runner_impl(args: pm::TokenStream, input: pm::TokenStream) -> pm::TokenStream {$/;"	f
same_range_first_consumers_return_correct_answer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/test.rs	/^fn same_range_first_consumers_return_correct_answer() {$/;"	f
same_range_last_consumers_return_correct_answer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/test.rs	/^fn same_range_last_consumers_return_correct_answer() {$/;"	f
sample	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn sample($/;"	P	interface:Routine
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub sample_size: usize,$/;"	m	struct:BenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    sample_size: Option<usize>,$/;"	m	struct:PartialBenchmarkConfig
sample_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn sample_size(mut self, n: usize) -> Criterion {$/;"	P	implementation:Criterion
sample_time_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    sample_time_nanos: f64,$/;"	m	struct:CsvRow
sample_times	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub sample_times: &'a Sample<f64>,$/;"	m	struct:MeasurementData
save	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save<D, P>(data: &D, path: &P) -> Result<()>$/;"	f
save_baseline	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn save_baseline(mut self, baseline: String) -> Criterion {$/;"	P	implementation:Criterion
save_string	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/fs.rs	/^pub fn save_string<P>(data: &str, path: &P) -> Result<()>$/;"	f
scalar_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_arithmetic;$/;"	n
scalar_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_bitwise;$/;"	n
scalar_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_mask_bitwise;$/;"	n
scalar_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod scalar_shifts;$/;"	n
scale_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^fn scale_time(ns: f64) -> (f64, &'static str) {$/;"	f
scope_mix	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn scope_mix() {$/;"	f
sealed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod sealed;$/;"	n
seeded_rng	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/test.rs	/^fn seeded_rng() -> XorShiftRng {$/;"	f
select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod select;$/;"	n
send	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn send<T>(&mut self, line: T) -> &mut Program$/;"	P	implementation:Program
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:Format
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs	/^    sep: &'a str,$/;"	m	struct:FormatWith
sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! sep ($/;"	M
separated_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_list() {$/;"	f	module:tests
separated_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_list($/;"	M
separated_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_list_complete() {$/;"	f	module:tests
separated_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_list_complete {$/;"	M
separated_list_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! separated_list_sep ($/;"	M
separated_nonempty_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_nonempty_list() {$/;"	f	module:tests
separated_nonempty_list	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_nonempty_list($/;"	M
separated_nonempty_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  fn separated_nonempty_list_complete() {$/;"	f	module:tests
separated_nonempty_list_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^macro_rules! separated_nonempty_list_complete {$/;"	M
separated_pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn separated_pair() {$/;"	f	module:tests
separated_pair	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! separated_pair($/;"	M
separated_pair_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! separated_pair_sep ($/;"	M
separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    separator: P,$/;"	m	struct:Split
separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    separator: P,$/;"	m	struct:SplitMut
separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    separator: &'p P,$/;"	m	struct:SplitProducer
separator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    separator: P,$/;"	m	struct:Split
sequence	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod sequence;$/;"	n
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod set;$/;"	n
set	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn set<'new>(v: HashSet<&'static str>) -> HashSet<&'new str> {$/;"	f	function:assert_covariance
set_ctrl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    unsafe fn set_ctrl(&self, index: usize, ctrl: u8) {$/;"	P	implementation:RawTable
set_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn set_from<'a, A: 'a, J>(&mut self, from: J) -> usize$/;"	P	interface:Itertools
shift_head	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn shift_head<T, F>(v: &mut [T], is_less: &F)$/;"	f
shift_tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^fn shift_tail<T, F>(v: &mut [T], is_less: &F)$/;"	f
shl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn shl(self, shift: usize) -> FakeUint {$/;"	P	implementation:tests::FakeUint
short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn short(n: f64) -> String {$/;"	f
short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn short_max_len() {$/;"	f	module:test
shr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^    fn shr(self, shift: usize) -> FakeUint {$/;"	P	implementation:tests::FakeUint
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn shrink_to(&mut self, min_size: usize, hasher: impl Fn(&T) -> u64) {$/;"	P	implementation:RawTable
shrink_to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to(&mut self, min_capacity: usize) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
shrink_to_fit	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn shrink_to_fit(&mut self) {$/;"	f
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod shuffle;$/;"	n
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle.rs	/^macro_rules! shuffle {$/;"	M
shuffle	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod shuffle;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod shuffle1_dyn;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod shuffle1_dyn;$/;"	n
shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle1_dyn.rs	/^    fn shuffle1_dyn(self, _: Self::Indices) -> Self;$/;"	P	interface:Shuffle1Dyn
sift_down	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^fn sift_down<T, S>(heap: &mut [T], index: usize, mut less_than: S)$/;"	f
signed_short	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^fn signed_short(n: f64) -> String {$/;"	f
signed_short_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^    fn signed_short_max_len() {$/;"	f	module:test
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub significance_level: f64,$/;"	m	struct:BenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    significance_level: Option<f64>,$/;"	m	struct:PartialBenchmarkConfig
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    significance_level: String,$/;"	m	struct:Comparison
significance_level	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn significance_level(mut self, sl: f64) -> Criterion {$/;"	P	implementation:Criterion
significance_threshold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub significance_threshold: f64,$/;"	m	struct:ComparisonData
simd_add	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_add<T>(x: T, y: T) -> T;$/;"	f
simd_and	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_and<T>(x: T, y: T) -> T;$/;"	f
simd_cast	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_cast<T, U>(x: T) -> U;$/;"	f
simd_div	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_div<T>(x: T, y: T) -> T;$/;"	f
simd_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_eq<T, U>(x: T, y: T) -> U;$/;"	f
simd_extract	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_extract<T, U>(x: T, idx: u32) -> U;$/;"	f
simd_fma	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fma<T>(a: T, b: T, c: T) -> T;$/;"	f
simd_fmax	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fmax<T>(a: T, b: T) -> T;$/;"	f
simd_fmin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fmin<T>(a: T, b: T) -> T;$/;"	f
simd_fsqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_fsqrt<T>(a: T) -> T;$/;"	f
simd_gather	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_gather<T, P, M>(value: T, pointers: P, mask: M) -> T;$/;"	f
simd_ge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_ge<T, U>(x: T, y: T) -> U;$/;"	f
simd_gt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_gt<T, U>(x: T, y: T) -> U;$/;"	f
simd_insert	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;$/;"	f
simd_le	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_le<T, U>(x: T, y: T) -> U;$/;"	f
simd_lt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_lt<T, U>(x: T, y: T) -> U;$/;"	f
simd_mul	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_mul<T>(x: T, y: T) -> T;$/;"	f
simd_ne	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_ne<T, U>(x: T, y: T) -> U;$/;"	f
simd_or	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_or<T>(x: T, y: T) -> T;$/;"	f
simd_reduce_add_ordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_add_ordered<T, U>(x: T, acc: U) -> U;$/;"	f
simd_reduce_add_unordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_add_unordered<T, U>(x: T) -> U;$/;"	f
simd_reduce_all	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_all<T>(x: T) -> bool;$/;"	f
simd_reduce_and	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_and<T, U>(x: T) -> U;$/;"	f
simd_reduce_any	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_any<T>(x: T) -> bool;$/;"	f
simd_reduce_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_max<T, U>(x: T) -> U;$/;"	f
simd_reduce_max_nanless	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_max_nanless<T, U>(x: T) -> U;$/;"	f
simd_reduce_min	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_min<T, U>(x: T) -> U;$/;"	f
simd_reduce_min_nanless	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_min_nanless<T, U>(x: T) -> U;$/;"	f
simd_reduce_mul_ordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_mul_ordered<T, U>(x: T, acc: U) -> U;$/;"	f
simd_reduce_mul_unordered	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_mul_unordered<T, U>(x: T) -> U;$/;"	f
simd_reduce_or	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_or<T, U>(x: T) -> U;$/;"	f
simd_reduce_xor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_reduce_xor<T, U>(x: T) -> U;$/;"	f
simd_rem	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_rem<T>(x: T, y: T) -> T;$/;"	f
simd_scatter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_scatter<T, P, M>(value: T, pointers: P, mask: M);$/;"	f
simd_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_select<M, T>(m: M, a: T, b: T) -> T;$/;"	f
simd_shl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_shl<T>(x: T, y: T) -> T;$/;"	f
simd_shr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_shr<T>(x: T, y: T) -> T;$/;"	f
simd_sub	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_sub<T>(x: T, y: T) -> T;$/;"	f
simd_xor	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/llvm.rs	/^    crate fn simd_xor<T>(x: T, y: T) -> T;$/;"	f
simple_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod simple_errors;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sin;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin;$/;"	n
sin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin(self) -> Self;$/;"	P	interface:Sin
sin_cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin_cos_pi;$/;"	n
sin_cos_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_cos_pi.rs	/^    fn sin_cos_pi(self) -> Self::Output;$/;"	P	interface:SinCosPi
sin_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_f32(x: f32) -> f32;$/;"	f
sin_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_f64(x: f64) -> f64;$/;"	f
sin_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sin_pi;$/;"	n
sin_pi	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin_pi.rs	/^    fn sin_pi(self) -> Self;$/;"	P	interface:SinPi
sin_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v16f32(x: f32x16) -> f32x16;$/;"	f
sin_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v2f32(x: f32x2) -> f32x2;$/;"	f
sin_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v2f64(x: f64x2) -> f64x2;$/;"	f
sin_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v4f32(x: f32x4) -> f32x4;$/;"	f
sin_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v4f64(x: f64x4) -> f64x4;$/;"	f
sin_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v8f32(x: f32x8) -> f32x8;$/;"	f
sin_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sin.rs	/^    fn sin_v8f64(x: f64x8) -> f64x8;$/;"	f
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    size: usize,$/;"	m	struct:ChunkIndex
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^            size: usize,$/;"	m	struct:with_producer::Callback
size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    size: usize,$/;"	m	struct:Chunks
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/lib.rs	/^mod size_hint {$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Keys
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ValuesMut
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawDrain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:RawIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Drain
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod size_hint;$/;"	n
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:PutBackN
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:WithPosition
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:SliceDrain
sized_buffer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn sized_buffer(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f
skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    skip: usize,$/;"	m	struct:Step
skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn skip(self, n: usize) -> Skip<Self> {$/;"	P	interface:IndexedParallelIterator
skip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod skip;$/;"	n
skip_last	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    skip_last: bool,$/;"	m	struct:SplitTerminatorProducer
slept	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    slept: usize,$/;"	m	struct:Guard
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice(&self, range: R) -> Self;$/;"	P	interface:Slice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: Range<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFrom<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeFull) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:CompleteByteSlice
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:CompleteStr
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice(&self, range: RangeTo<usize>) -> Self {$/;"	P	implementation:Input
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod slice;$/;"	n
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod slice;$/;"	n
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:Chunks
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:ChunksProducer
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:Iter
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:IterProducer
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:Split
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:Windows
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data [T],$/;"	m	struct:WindowsProducer
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data mut [T],$/;"	m	struct:ChunksMut
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data mut [T],$/;"	m	struct:ChunksMutProducer
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data mut [T],$/;"	m	struct:IterMut
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data mut [T],$/;"	m	struct:IterMutProducer
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    slice: &'data mut [T],$/;"	m	struct:SplitMut
slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    slice: &'data mut [T],$/;"	m	struct:VecProducer
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:str
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:u8
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn slice_index(&self, count: usize) -> Option<usize>;$/;"	P	interface:InputIter
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:CompleteByteSlice
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:CompleteStr
slice_index	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn slice_index(&self, count: usize) -> Option<usize> {$/;"	P	implementation:Input
slice_range_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! slice_range_impl {$/;"	M
slice_ranges_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^macro_rules! slice_ranges_impl {$/;"	M
slice_to_offsets	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn slice_to_offsets(input: &[u8], s: &[u8]) -> (usize, usize) {$/;"	f
slope	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    slope: ConfidenceInterval,$/;"	m	struct:Context
solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub solver: Option<Solver>,$/;"	m	struct:Runner
sort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/test.rs	/^macro_rules! sort {$/;"	M
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn sorted<I>(iterable: I) -> Vec<I::Item>$/;"	f
sorted	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted(self) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by<F>(self, cmp: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sorted_by_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn sorted_by_key<K, F>(self, f: F) -> Vec<Self::Item>$/;"	P	interface:Itertools
sources	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod sources;$/;"	n
sp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^pub fn sp<'a, T>(input: T) -> IResult<T, T>$/;"	f
spaaaaace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn spaaaaace() {$/;"	f	module:tests
space	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space<T>(input: T) -> IResult<T, T>$/;"	f
space0	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space0<T>(input: T) -> IResult<T, T>$/;"	f
space1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn space1<T>(input: T) -> IResult<T, T>$/;"	f
spawn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    pub fn spawn(cmd: &mut Command) -> Program {$/;"	P	implementation:Program
special_extend	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^fn special_extend<I, T>(pi: I, len: usize, v: &mut Vec<T>)$/;"	f
special_is_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn special_is_empty(ctrl: u8) -> bool {$/;"	f
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	f
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn split(self) -> (Self, Option<Self>);$/;"	P	interface:UnindexedProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:RepeatProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    fn split(mut self) -> (Self, Option<Self>) {$/;"	f
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^pub fn split<D, S>(data: D, splitter: S) -> Split<D, S>$/;"	f
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	f
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(mut self) -> (Self, Option<Self>) {$/;"	P	implementation:SplitTerminatorProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:BytesProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:CharIndicesProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:CharsProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:EncodeUtf16Producer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:MatchIndicesProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split(self) -> (Self, Option<Self>) {$/;"	P	implementation:MatchesProducer
split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^fn split(chars: &str) -> Option<(&str, &str)> {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn split_at(self, index: usize) -> (Self, Self, NoopReducer) {$/;"	P	implementation:CollectConsumer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:EmptyProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn split_at(self, index: usize) -> (Self, Self, C::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn split_at(self, index: usize) -> (Self, Self, C::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, NoopReducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn split_at(mut self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, NoopReducer) {$/;"	P	implementation:NoopConsumer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self);$/;"	P	interface:Producer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer);$/;"	P	interface:Consumer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:RepeatNProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn split_at(self, _index: usize) -> (Self, Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn split_at(self, index: usize) -> (Self, Self, Self::Reducer) {$/;"	f
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:ZipProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:OptionProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:ChunksMutProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:ChunksProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:IterMutProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:IterProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_at(self, index: usize) -> (Self, Self) {$/;"	P	implementation:WindowsProducer
split_at	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn split_at(mut self, index: usize) -> (Self, Self) {$/;"	P	implementation:VecProducer
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteByteSlice
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteStr
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:T
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:str
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	implementation:u8
split_at_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position<P>(&self, predicate: P) -> IResult<Self, Self, u32>$/;"	P	interface:InputTakeAtPosition
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteByteSlice
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:CompleteStr
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:T
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:str
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	implementation:u8
split_at_position1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn split_at_position1<P>(&self, predicate: P, e: ErrorKind<u32>) -> IResult<Self, Self, u32>$/;"	P	interface:InputTakeAtPosition
split_count	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/par_bridge.rs	/^    split_count: &'a AtomicUsize,$/;"	m	struct:IterParallelProducer
split_for_merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^fn split_for_merge<T, F>(left: &[T], right: &[T], is_less: &F) -> (usize, usize)$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn split_off_left(&self) -> Self {$/;"	P	implementation:CollectConsumer
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn split_off_left(&self) -> Self {$/;"	P	implementation:NoopConsumer
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn split_off_left(&self) -> Self;$/;"	P	interface:UnindexedConsumer
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_off_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn split_off_left(&self) -> Self {$/;"	f
split_once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn split_once(self, index: usize) -> (Self, Self) {$/;"	f
split_once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    fn split_once(self, index: usize) -> (Self, Self);$/;"	P	interface:Fissile
split_once	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    fn split_once(self, index: usize) -> (Self, Self) {$/;"	P	implementation:str
split_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^mod split_producer;$/;"	n
splits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    splits: usize,$/;"	m	struct:Splitter
splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod splitter;$/;"	n
splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    splitter: &'a S,$/;"	m	struct:SplitProducer
splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/splitter.rs	/^    splitter: S,$/;"	m	struct:Split
splitter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    splitter: SplitProducer<'sep, P, &'ch str>,$/;"	m	struct:SplitTerminatorProducer
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sqrt;$/;"	n
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sqrt;$/;"	n
sqrt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt(self) -> Self;$/;"	P	interface:Sqrt
sqrt_f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_f32(x: f32) -> f32;$/;"	f
sqrt_f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_f64(x: f64) -> f64;$/;"	f
sqrt_v16f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v16f32(x: f32x16) -> f32x16;$/;"	f
sqrt_v2f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v2f32(x: f32x2) -> f32x2;$/;"	f
sqrt_v2f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v2f64(x: f64x2) -> f64x2;$/;"	f
sqrt_v4f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v4f32(x: f32x4) -> f32x4;$/;"	f
sqrt_v4f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v4f64(x: f64x4) -> f64x4;$/;"	f
sqrt_v8f32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v8f32(x: f32x8) -> f32x8;$/;"	f
sqrt_v8f64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrt.rs	/^    fn sqrt_v8f64(x: f64x8) -> f64x8;$/;"	f
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/math/float.rs	/^mod sqrte;$/;"	n
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float.rs	/^crate mod sqrte;$/;"	n
sqrte	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/math/float/sqrte.rs	/^    fn sqrte(self) -> Self;$/;"	P	interface:Sqrte
src	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        src: *mut T,$/;"	m	struct:insert_head::InsertionHole
src	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    src: *mut T,$/;"	m	struct:CopyOnDrop
src	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    src: *mut T,$/;"	m	struct:CopyOnDrop
sse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod sse;$/;"	n
sse2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^mod sse2;$/;"	n
standard_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    standard_error: f64,$/;"	m	struct:Estimate
star	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^fn star(r_u8: &u8) -> u8 {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, _: &()) -> Option<Program> {$/;"	P	implementation:Command
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, _: &T) -> Option<Program> {$/;"	f
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn start(&mut self, parameter: &T) -> Option<Program>;$/;"	P	interface:Routine
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        start: *mut T,$/;"	m	struct:merge::MergeHole
start	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    start: usize,$/;"	m	struct:Run
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    pub state: St,$/;"	m	struct:Unfold
state	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^    state: St,$/;"	m	struct:Iterate
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
static_empty	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub fn static_empty() -> &'static [u8] {$/;"	P	implementation:Group
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^    fn stats(a: &Sample<f64>, b: &Sample<f64>) -> (f64, f64) {$/;"	f	function:estimates
stats	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/mod.rs	/^    fn stats(sample: &Sample<f64>) -> (f64, f64, f64, f64) {$/;"	f	function:estimates
std	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^  pub mod std {$/;"	n	module:lib
std_dev	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    std_dev: ConfidenceInterval,$/;"	m	struct:Context
stderr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stderr: ChildStderr,$/;"	m	struct:Program
stdin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdin: ChildStdin,$/;"	m	struct:Program
stdout	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    stdout: BufReader<ChildStdout>,$/;"	m	struct:Program
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn step<I>(iter: I, step: usize) -> Step<I>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item> {$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step(&self, client: usize) -> Option<I::Item>$/;"	f
step	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn step(self, n: usize) -> Step<Self>$/;"	P	interface:Itertools
step_buffering	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_buffering(&mut self, client: usize) -> Option<I::Item> {$/;"	f
step_current	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    fn step_current(&mut self) -> Option<I::Item> {$/;"	f
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/generic.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
store_aligned	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/sse2.rs	/^    pub unsafe fn store_aligned(&self, ptr: *mut u8) {$/;"	P	implementation:Group
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^static DEFAULT_FONT: &'static str = "Helvetica";$/;"	v
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod str;$/;"	n
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsBytes for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl Offset for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b str> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b str> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindToken<&'a u8> for &'b str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, R: FromStr> ParseTo<R> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsBytes for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AtEof for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<char> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<u8> for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputIter for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputLength for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTake for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> Offset for &'a str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl HexDisplay for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod str;$/;"	n
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl ParallelString for str {$/;"	c
str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^impl<'ch, P: Pattern> Fissile<P> for &'ch str {$/;"	c
str_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/extend.rs	/^fn str_len<T>(list: &LinkedList<Vec<T>>) -> usize$/;"	f
str_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn str_test() {$/;"	f	module:tests
structs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^pub mod structs {$/;"	n
sub	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn sub(self, rhs: &HashSet<T, S>) -> HashSet<T, S> {$/;"	f
sub_benchmarks	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    sub_benchmarks: Vec<IndexBenchmark>,$/;"	m	struct:IndexBenchmark
sub_scalar	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/size_hint.rs	/^pub fn sub_scalar(sh: SizeHint, x: usize) -> SizeHint {$/;"	f
succ	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! succ ($/;"	M
sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn sum<S>(self) -> S$/;"	P	interface:ParallelIterator
sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod sum;$/;"	n
sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    sum: S,$/;"	m	struct:SumFolder
sum	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^pub fn sum<PI, S>(pi: PI) -> S$/;"	f
sum2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn sum2(a: u8, b: u8) -> u8 {$/;"	f	function:tests::apply_test
sum3	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn sum3(a: u8, b: u8, c: u8) -> u8 {$/;"	f	function:tests::apply_test
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Html
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, _context: &ReportContext, _all_ids: &[BenchmarkId]) {}$/;"	P	interface:Report
summarize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn summarize(&self, context: &ReportContext, all_ids: &[BenchmarkId]) {$/;"	P	implementation:Reports
summary	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub mod summary;$/;"	n
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn summary_scale(mut self, new_scale: AxisScale) -> PlotConfiguration {$/;"	P	implementation:PlotConfiguration
summary_scale	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    summary_scale: AxisScale,$/;"	m	struct:PlotConfiguration
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api.rs	/^mod swap_bytes;$/;"	n
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod swap_bytes;$/;"	n
swap_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/swap_bytes.rs	/^    fn swap_bytes(self) -> Self;$/;"	P	interface:SwapBytes
sweep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep($/;"	f
sweep_and_estimate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/kde.rs	/^pub fn sweep_and_estimate($/;"	f
sweepline	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^mod sweepline {$/;"	n
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  fn switch() {$/;"	f	module:tests
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^macro_rules! switch ($/;"	M
switch	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn switch() {$/;"	f	module:tests
switch_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! switch_sep ($/;"	M
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn symmetric_difference<'a, 'new>($/;"	f	function:assert_covariance
symmetric_difference	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn symmetric_difference<'a>($/;"	f
t	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs	/^    t: T,$/;"	m	struct:Zip
t_distribution	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_distribution: Distribution<f64>,$/;"	m	struct:ComparisonData
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/analysis/compare.rs	/^fn t_test($/;"	f
t_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/mod.rs	/^pub fn t_test($/;"	f
t_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub t_value: f64,$/;"	m	struct:ComparisonData
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:OccupiedEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: &'a mut HashMap<K, V, S>,$/;"	m	struct:VacantEntry
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    table: RawTable<(K, V)>,$/;"	m	struct:HashMap
table	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    table: NonNull<RawTable<T>>,$/;"	m	struct:RawDrain
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! tag ($/;"	M
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! tag ($/;"	M	module:tests
tag	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn tag() {$/;"	f	module:tests
tag_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn tag_bits() {$/;"	f	module:tests
tag_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! tag_bits ($/;"	M
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_bytes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! tag_bytes ($/;"	M	module:tests
tag_cl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^pub fn tag_cl<'a, 'b>(rec: &'a [u8]) -> Box<Fn(&'b [u8]) -> IResult<&'b [u8], &'b [u8]> + 'a> {$/;"	f
tag_closure	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn tag_closure() {$/;"	f	module:tests
tag_no_case	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! tag_no_case ($/;"	M
tag_no_case_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! tag_no_case_s ($/;"	M
tag_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  macro_rules! tag_s ($/;"	M	module:tests
tag_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! tag_s ($/;"	M
tag_str_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_error() {$/;"	f	module:test
tag_str_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_incomplete() {$/;"	f	module:test
tag_str_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn tag_str_succeed() {$/;"	f	module:test
tag_stuff	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^    fn tag_stuff(mut self: Parser<'a>, input: &'a str, something: &'a str) -> (Parser<'a>, ::IRe/;"	P	implementation:tests::Parser
tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs	/^    tail: I,$/;"	m	struct:HeadTail
tail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/split_producer.rs	/^    tail: usize,$/;"	m	struct:SplitProducer
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn take<Q: ?Sized>(&mut self, value: &Q) -> Option<T>$/;"	f
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^  macro_rules! take($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take ($/;"	M
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  macro_rules! take($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^  macro_rules! take ($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  macro_rules! take ($/;"	M	module:tests
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:str
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:u8
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take(&self, count: usize) -> Self;$/;"	P	interface:InputTake
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:CompleteByteSlice
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:CompleteStr
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take(&self, count: usize) -> Self {$/;"	P	implementation:Input
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn take(self, n: usize) -> Take<Self> {$/;"	P	interface:IndexedParallelIterator
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod take;$/;"	n
take	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    pub fn take(self, n: usize) -> RepeatN<T> {$/;"	f
take_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^  fn take_bits() {$/;"	f	module:tests
take_bits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^macro_rules! take_bits ($/;"	M
take_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  macro_rules! take_s ($/;"	M	module:tests
take_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_s ($/;"	M
take_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_s_incomplete() {$/;"	f	module:test
take_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_s_succeed() {$/;"	f	module:test
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:str
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:u8
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn take_split(&self, count: usize) -> (Self, Self);$/;"	P	interface:InputTake
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:CompleteByteSlice
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:CompleteStr
take_split	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn take_split(&self, count: usize) -> (Self, Self) {$/;"	P	implementation:Input
take_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_str ($/;"	M
take_till	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_till ($/;"	M
take_till1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_till1 ($/;"	M
take_till1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_till1_s ($/;"	M
take_till_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_till_s ($/;"	M
take_till_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_till_s_succeed() {$/;"	f	module:test
take_until	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until ($/;"	M
take_until1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until1 ($/;"	M
take_until_and_consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_and_consume ($/;"	M
take_until_and_consume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_and_consume1 ($/;"	M
take_until_and_consume_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_until_and_consume_s ($/;"	M
take_until_and_consume_s_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_error() {$/;"	f	module:test
take_until_and_consume_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_incomplete() {$/;"	f	module:test
take_until_and_consume_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_and_consume_s_succeed() {$/;"	f	module:test
take_until_either	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either ($/;"	M
take_until_either1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either1 ($/;"	M
take_until_either_and_consume	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either_and_consume ($/;"	M
take_until_either_and_consume1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_until_either_and_consume1 ($/;"	M
take_until_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_until_s ($/;"	M
take_until_s_error	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_error() {$/;"	f	module:test
take_until_s_incomplete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_incomplete() {$/;"	f	module:test
take_until_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_until_s_succeed() {$/;"	f	module:test
take_while	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while ($/;"	M
take_while1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while1 ($/;"	M
take_while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s() {$/;"	f	module:test
take_while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_while1_s ($/;"	M
take_while1_s_fail	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s_fail() {$/;"	f	module:test
take_while1_s_succeed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while1_s_succeed() {$/;"	f	module:test
take_while_m_n	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^macro_rules! take_while_m_n ($/;"	M
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn take_while_ref<I, F>(iter: &mut I, f: F) -> TakeWhileRef<I, F>$/;"	f
take_while_ref	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn take_while_ref<F>(&mut self, accept: F) -> TakeWhileRef<Self, F>$/;"	P	interface:Itertools
take_while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s() {$/;"	f	module:test
take_while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^macro_rules! take_while_s ($/;"	M
take_while_s_succeed_none	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s_succeed_none() {$/;"	f	module:test
take_while_s_succeed_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn take_while_s_succeed_some() {$/;"	f	module:test
tap	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! tap ($/;"	M
target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    target: &'c mut [T],$/;"	m	struct:CollectConsumer
target	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    target: slice::IterMut<'c, T>,$/;"	m	struct:CollectFolder
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tee(self) -> (Tee<Self>, Tee<Self>)$/;"	P	interface:Itertools
tee	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tee;$/;"	n
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, _id: &BenchmarkId, _context: &ReportContext) {}$/;"	P	interface:Report
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, context: &ReportContext) {$/;"	P	implementation:Reports
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn terminated(&self, id: &BenchmarkId, ctx: &ReportContext) {$/;"	P	implementation:CliReport
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn terminated() {$/;"	f	module:tests
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! terminated($/;"	M
terminated	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn terminated() {$/;"	f	module:tests
terminated_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! terminated_sep ($/;"	M
terminator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/str.rs	/^    terminator: P,$/;"	m	struct:SplitTerminator
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn test(&mut self, parameter: &T) {$/;"	P	interface:Routine
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_a_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_a_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_not_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::is_not_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::tag_str_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_till_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while1_s_fail
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while1_s_succeed
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while_s_succeed_none
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn test(input: &str) -> IResult<&str, &str> {$/;"	f	function:test::take_while_s_succeed_some
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^mod test {$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/sealed.rs	/^    fn test(&self) -> bool;$/;"	P	interface:Mask
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^mod test;$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^mod test;$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod test;$/;"	n
test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^mod test;$/;"	n
test	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^mod test {$/;"	n
test	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^mod test {$/;"	n
test	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^mod test {$/;"	n
test_apply_m	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_apply_m() {$/;"	f	module:tests
test_benchmark_id_make_directory_name_unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_benchmark_id_make_directory_name_unique() {$/;"	f	module:test
test_cmp	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_cmp<T>($/;"	f
test_cmp_partial_ord_int	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! test_cmp_partial_ord_int {$/;"	M
test_cmp_partial_ord_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp/partial_ord.rs	/^macro_rules! test_cmp_partial_ord_mask {$/;"	M
test_heapsort	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    fn test_heapsort() {$/;"	f	module:tests
test_i128_len_doesnt_overflow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^fn test_i128_len_doesnt_overflow() {$/;"	f
test_if	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/macros.rs	/^macro_rules! test_if {$/;"	M
test_le	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_le<T>($/;"	f
test_lt	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing/utils.rs	/^pub fn test_lt<T>($/;"	f
test_make_filename_safe_replaces_characters	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_replaces_characters() {$/;"	f	module:test
test_make_filename_safe_respects_character_boundaries	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_respects_character_boundaries() {$/;"	f	module:test
test_make_filename_safe_truncates_long_strings	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn test_make_filename_safe_truncates_long_strings() {$/;"	f	module:test
test_method_call_abc	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_abc() {$/;"	f	module:tests
test_method_call_bcd	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_bcd() {$/;"	f	module:tests
test_method_call_chain	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_chain() {$/;"	f	module:tests
test_method_call_hij	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_hij() {$/;"	f	module:tests
test_method_call_ijk	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_ijk() {$/;"	f	module:tests
test_method_call_peek	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_call_peek() {$/;"	f	module:tests
test_method_simple_call	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^  fn test_method_simple_call() {$/;"	f	module:tests
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    test_mode: bool,$/;"	m	struct:Criterion
test_mode	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub test_mode: bool,$/;"	m	struct:ReportContext
test_offset_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn test_offset_str() {$/;"	f	module:tests
test_offset_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^  fn test_offset_u8() {$/;"	f	module:tests
test_par_sort_stability	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/test.rs	/^fn test_par_sort_stability() {$/;"	f
test_part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    fn test_part1() {$/;"	f	module:test
test_part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    fn test_part1() {$/;"	f	module:test
test_part1	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^    fn test_part1() {$/;"	f	module:test
test_part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    fn test_part2() {$/;"	f	module:test
test_part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    fn test_part2() {$/;"	f	module:test
test_part2	/home/atraii/Downloads/tmp/advent2018-rs/src/day05/mod.rs	/^    fn test_part2() {$/;"	f	module:test
test_reduction_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/reductions/min_max.rs	/^macro_rules! test_reduction_float_min_max {$/;"	M
test_select	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/select.rs	/^macro_rules! test_select {$/;"	M
test_shuffle1_dyn	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! test_shuffle1_dyn {$/;"	M
test_shuffle1_dyn_mask	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/shuffle1_dyn.rs	/^macro_rules! test_shuffle1_dyn_mask {$/;"	M
test_split_for_merge	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^    fn test_split_for_merge() {$/;"	f	module:tests
test_u128_opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^fn test_u128_opt_len() {$/;"	f
test_u64_opt_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^fn test_u64_opt_len() {$/;"	f
test_usize_i64_overflow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^fn test_usize_i64_overflow() {$/;"	f
testing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod testing;$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bits.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/character.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/internal.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/methods.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/regexp.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/math.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^mod tests {$/;"	n
tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^mod tests {$/;"	n
tests	/home/atraii/Downloads/tmp/advent2018-rs/src/day01/mod.rs	/^mod tests {$/;"	n
tests	/home/atraii/Downloads/tmp/advent2018-rs/src/day02/mod.rs	/^mod tests {$/;"	n
text_overwrite	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn text_overwrite(&self) {$/;"	P	implementation:CliReport
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput(mut self, throughput: Throughput) -> Benchmark {$/;"	P	implementation:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn throughput<F>(mut self, throughput: F) -> ParameterizedBenchmark<T>$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Box<Fn(&T) -> Throughput>>,$/;"	m	struct:ParameterizedBenchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    throughput: Option<Throughput>,$/;"	m	struct:Benchmark
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn throughput(throughput: &Throughput, ns: f64) -> String {$/;"	f
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    throughput: Option<ConfidenceInterval>,$/;"	m	struct:Context
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:BenchmarkId
throughput	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub throughput: Option<Throughput>,$/;"	m	struct:MeasurementData
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:Context
thumbnail_height	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_height: usize,$/;"	m	struct:SummaryContext
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:Context
thumbnail_width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    thumbnail_width: usize,$/;"	m	struct:SummaryContext
till_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn till_s(c: char) -> bool {$/;"	f	function:test::take_till_s_succeed
time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/format.rs	/^pub fn time(ns: f64) -> String {$/;"	f
time_interval	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn time_interval(est: &Estimate) -> ConfidenceInterval {$/;"	f	method:Html::measurement_complete
title	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    title: String,$/;"	m	struct:Context
to	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/error.rs	/^    pub to: PathBuf,$/;"	m	struct:CopyError
to_camelcase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn to_camelcase(dp: &DayPart) -> syn::Ident {$/;"	f
to_complete	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    fn to_complete(&self, defaults: &BenchmarkConfig) -> BenchmarkConfig {$/;"	P	implementation:PartialBenchmarkConfig
to_components	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^        fn to_components(id: &BenchmarkId) -> Vec<&str> {$/;"	f	method:Html::final_summary
to_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^    fn to_gnuplot(self) -> Scale {$/;"	P	implementation:AxisScale
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:CompleteByteSlice
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:str
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String {$/;"	P	implementation:u8
to_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex(&self, chunk_size: usize) -> String;$/;"	P	interface:HexDisplay
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/types.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:CompleteByteSlice
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:str
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String {$/;"	P	implementation:u8
to_hex_from	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^  fn to_hex_from(&self, chunk_size: usize, from: usize) -> String;$/;"	P	interface:HexDisplay
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64 {$/;"	P	implementation:Duration
to_nanos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    fn to_nanos(&self) -> u64;$/;"	P	interface:DurationExt
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	P	implementation:CollectConsumer
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/filter_map.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/flat_map.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/fold.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/for_each.rs	/^    fn to_reducer(&self) -> NoopReducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/noop.rs	/^    fn to_reducer(&self) -> NoopReducer {$/;"	P	implementation:NoopConsumer
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn to_reducer(&self) -> Self::Reducer;$/;"	P	interface:UnindexedConsumer
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/product.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/reduce.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/sum.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_reducer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/while_some.rs	/^    fn to_reducer(&self) -> Self::Reducer {$/;"	f
to_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/bytes.rs	/^  fn to_s(i: Vec<u8>) -> String {$/;"	f	module:tests
to_snakecase	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/utils.rs	/^pub(crate) fn to_snakecase(dp: &DayPart) -> syn::Ident {$/;"	f
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    top: Option<I::Item>,$/;"	m	struct:PutBack
top	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs	/^    top: Vec<I::Item>,$/;"	m	struct:PutBackN
top_group	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs	/^    top_group: usize,$/;"	m	struct:GroupInner
trailing_zeros	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/bitmask.rs	/^    pub fn trailing_zeros(self) -> usize {$/;"	P	implementation:BitMask
traits	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod traits;$/;"	n
tree_fold1	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tree_fold1<F>(mut self, mut f: F) -> Option<Self::Item>$/;"	P	interface:Itertools
try	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn try(&mut self, len: usize, stolen: bool) -> bool {$/;"	P	implementation:LengthSplitter
try	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/plumbing/mod.rs	/^    fn try(&mut self, stolen: bool) -> bool {$/;"	P	implementation:Splitter
try_else_return	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/macros_private.rs	/^macro_rules! try_else_return {$/;"	M
try_fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_fold<T, R, ID, F>(self, identity: ID, fold_op: F) -> TryFold<Self, R, ID, F>$/;"	P	interface:ParallelIterator
try_fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod try_fold;$/;"	n
try_fold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^pub fn try_fold<U, I, ID, F>(base: I, identity: ID, fold_op: F) -> TryFold<I, U, ID, F>$/;"	f
try_fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_fold_with<F, T, R>(self, init: T, fold_op: F) -> TryFoldWith<Self, R, F>$/;"	P	interface:ParallelIterator
try_fold_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_fold.rs	/^pub fn try_fold_with<U, I, F>(base: I, item: U::Ok, fold_op: F) -> TryFoldWith<I, U, F>$/;"	f
try_for_each	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_for_each<OP, R>(self, op: OP) -> R$/;"	P	interface:ParallelIterator
try_for_each_init	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_for_each_init<OP, INIT, T, R>(self, init: INIT, op: OP) -> R$/;"	P	interface:ParallelIterator
try_for_each_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_for_each_with<OP, T, R>(self, init: T, op: OP) -> R$/;"	P	interface:ParallelIterator
try_gen	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn try_gen(input: ArcStr) -> Result<Self, Box<dyn Error>> where Self: Sized {$/;"	P	interface:Runner
try_left	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_left {$/;"	M
try_parse	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! try_parse ($/;"	M
try_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_reduce<T, OP, ID>(self, identity: ID, op: OP) -> Self::Item$/;"	P	interface:ParallelIterator
try_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod try_reduce;$/;"	n
try_reduce	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce.rs	/^pub fn try_reduce<PI, R, ID, T>(pi: PI, identity: ID, reduce_op: R) -> T$/;"	f
try_reduce_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn try_reduce_with<T, OP>(self, op: OP) -> Option<Self::Item>$/;"	P	interface:ParallelIterator
try_reduce_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod try_reduce_with;$/;"	n
try_reduce_with	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/try_reduce_with.rs	/^pub fn try_reduce_with<PI, R, T>(pi: PI, reduce_op: R) -> Option<T>$/;"	f
try_right	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^macro_rules! try_right {$/;"	M
try_run	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-0.2.0-alpha1/src/lib.rs	/^    fn try_run(&self) -> Result<Box<dyn Display>, Box<dyn Error>> {$/;"	P	interface:Runner
tst	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/multi.rs	/^    fn tst(input: &[u8]) -> IResult<&[u8], &[u8]> {$/;"	f	function:tests::infinite_many
tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! tuple ($/;"	M
tuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^  fn tuple() {$/;"	f	module:tests
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn tuple_combinations<T, I>(iter: I) -> TupleCombinations<I, T>$/;"	f
tuple_combinations	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_combinations<T>(self) -> TupleCombinations<Self, T>$/;"	P	interface:Itertools
tuple_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod tuple_impl;$/;"	n
tuple_parser	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^macro_rules! tuple_parser ($/;"	M
tuple_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! tuple_sep ($/;"	M
tuple_test	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/sequence.rs	/^  fn tuple_test() {$/;"	f	module:tests
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuple_windows<T>(self) -> TupleWindows<Self, T>$/;"	P	interface:Itertools
tuple_windows	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuple_windows<I, T>(mut iter: I) -> TupleWindows<I, T>$/;"	f
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn tuples<T>(self) -> Tuples<Self, T>$/;"	P	interface:Itertools
tuples	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs	/^pub fn tuples<I, T>(iter: I) -> Tuples<I, T>$/;"	f
types	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod types;$/;"	n
types	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod types;$/;"	n
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u128 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u128(/;"	M
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 1]> for u128 {$/;"	c
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u128 {$/;"	c
u128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u128 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u16 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u16($i/;"	M
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u16 {$/;"	c
u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u16 {$/;"	c
u24_tests	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^  fn u24_tests() {$/;"	f	module:tests
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u32 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u32($i/;"	M
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u32 {$/;"	c
u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u32 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/nom.rs	/^macro_rules! u64 ( ($i:expr, $e:expr) => ( {if $crate::Endianness::Big == $e { $crate::be_u64($i/;"	M
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u64 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u64 {$/;"	c
u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u64 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsBytes for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl AsChar for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl ExtendInto for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl Offset for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b [u8]> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> Compare<&'b str> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b [u8]> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindSubstring<&'b str> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, 'b> FindToken<&'a u8> for &'b [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a, R: FromStr> ParseTo<R> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsBytes for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> AsChar for &'a u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<char> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> FindToken<u8> for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputIter for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTake for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputTakeAtPosition for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> Offset for &'a [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^impl HexDisplay for [u8] {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 16]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 32]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 64]> for u8 {$/;"	c
u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for u8 {$/;"	c
unfold	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs	/^pub fn unfold<A, St, F>(initial_state: St, f: F) -> Unfold<St, F>$/;"	f
unindexed_range_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/range.rs	/^macro_rules! unindexed_range_impl {$/;"	M
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    fn union<'a, 'new>($/;"	f	function:assert_covariance
union	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn union<'a>(&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S> {$/;"	f
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique(self) -> Unique<Self>$/;"	P	interface:Itertools
unique	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique<I>(iter: I) -> Unique<I>$/;"	f
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn unique_by<V, F>(self, f: F) -> UniqueBy<Self, V, F>$/;"	P	interface:Itertools
unique_by	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^pub fn unique_by<I, V, F>(iter: I, f: F) -> UniqueBy<I, V, F>$/;"	f
unique_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod unique_impl;$/;"	n
unlikely	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^fn unlikely(b: bool) -> bool {$/;"	f
unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn unzip<A, B, FromA, FromB>(self) -> (FromA, FromB)$/;"	P	interface:ParallelIterator
unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod unzip;$/;"	n
unzip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^pub fn unzip<I, A, B, FromA, FromB>(pi: I) -> (FromA, FromB)$/;"	f
unzip_indexed	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/unzip.rs	/^pub fn unzip_indexed<I, A, B, CA, CB>(pi: I, left: CA, right: CB) -> (CA::Result, CB::Result)$/;"	f
unzip_into_vecs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^pub fn unzip_into_vecs<I, A, B>(pi: I, left: &mut Vec<A>, right: &mut Vec<B>)$/;"	f
unzip_into_vecs	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn unzip_into_vecs<A, B>(self, left: &mut Vec<A>, right: &mut Vec<B>)$/;"	P	interface:IndexedParallelIterator
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn update<I, F>(iter: I, f: F) -> Update<I, F>$/;"	f
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn update<F>(self, updater: F) -> Update<Self, F>$/;"	P	interface:Itertools
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn update<F>(self, update_op: F) -> Update<Self, F>$/;"	P	interface:ParallelIterator
update	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod update;$/;"	n
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^            update_op: F,$/;"	m	struct:with_producer::Callback
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    update_op: &'f F,$/;"	m	struct:UpdateConsumer
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    update_op: &'f F,$/;"	m	struct:UpdateFolder
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    update_op: &'f F,$/;"	m	struct:UpdateProducer
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    update_op: F,$/;"	m	struct:Update
update_op	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    update_op: F,$/;"	m	struct:UpdateSeq
upper	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    upper: String,$/;"	m	struct:ConfidenceInterval
upper_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    upper_bound: f64,$/;"	m	struct:ConfidenceInterval
upper_bound	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/find_first_last/mod.rs	/^    upper_bound: usize,$/;"	m	struct:FindConsumer
upper_hex	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/fmt.rs	/^mod upper_hex;$/;"	n
url	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    url: String,$/;"	m	struct:Plot
used	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs	/^    used: HashMap<V, ()>,$/;"	m	struct:UniqueBy
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/traits.rs	/^impl<'a> InputLength for (&'a [u8], usize) {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 2]> for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 4]> for usize {$/;"	c
usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/shuffle.rs	/^impl Shuffle<[u32; 8]> for usize {$/;"	c
utf8_indexing	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^  fn utf8_indexing() {$/;"	f	module:test
util	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^mod util;$/;"	n
utils	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/lib.rs	/^mod utils;$/;"	n
utils	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/testing.rs	/^crate mod utils;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v128;$/;"	n
v128	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v128;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v16;$/;"	n
v16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v16;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v256;$/;"	n
v256	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v256;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v32;$/;"	n
v32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v32;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v512;$/;"	n
v512	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v512;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cast.rs	/^mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/into_bits.rs	/^mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod v64;$/;"	n
v64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod v64;$/;"	n
vPtr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod vPtr;$/;"	n
vPtr	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod vPtr;$/;"	n
vSize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen.rs	/^crate mod vSize;$/;"	n
vSize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/lib.rs	/^mod vSize;$/;"	n
validate	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^    fn validate(value: u8) -> Result<ValidValue, ParseError> {$/;"	f	function:tests::map_res_err
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    value: Option<&'a str>,$/;"	m	struct:CsvRow
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! value ($/;"	M
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mergesort.rs	/^        value: Option<T>,$/;"	m	struct:insert_head::NoDrop
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    value: Option<T>,$/;"	m	struct:NoDrop
value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    value: Option<T>,$/;"	m	struct:WriteOnDrop
value_str	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub value_str: Option<String>,$/;"	m	struct:BenchmarkId
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    values: Vec<T>,$/;"	m	struct:ParameterizedBenchmark
values	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values(&self) -> Values<K, V> {$/;"	f
values_key	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_key<'a, 'new>(v: Values<'a, &'static str, u8>) -> Values<'a, &'new str, u8> {$/;"	f	function:assert_covariance
values_mut	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut<K, V> {$/;"	f
values_val	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    fn values_val<'a, 'new>(v: Values<'a, u8, &'static str>) -> Values<'a, u8, &'new str> {$/;"	f	function:assert_covariance
vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    vec: &'c mut Vec<T>,$/;"	m	struct:Collect
vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/lib.rs	/^pub mod vec;$/;"	n
vec	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    vec: Vec<T>,$/;"	m	struct:IntoIter
vec_deque	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/collections/mod.rs	/^pub mod vec_deque;$/;"	n
vector_arithmetic	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_arithmetic;$/;"	n
vector_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_bitwise;$/;"	n
vector_float_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_float_min_max;$/;"	n
vector_int_min_max	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_int_min_max;$/;"	n
vector_mask_bitwise	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_mask_bitwise;$/;"	n
vector_neg	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_neg;$/;"	n
vector_rotates	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_rotates;$/;"	n
vector_shifts	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/ops.rs	/^mod vector_shifts;$/;"	n
verbose	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    pub verbose: bool,$/;"	m	struct:CliReport
verbose_errors	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod verbose_errors;$/;"	n
verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^  fn verify() {$/;"	f	module:tests
verify	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/macros.rs	/^macro_rules! verify ($/;"	M
vertical	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/cmp.rs	/^mod vertical;$/;"	n
violin	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/plot/summary.rs	/^pub fn violin($/;"	f
violin_plot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^    violin_plot: Option<String>,$/;"	m	struct:SummaryContext
visit_map	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
wait_on_gnuplot	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/html/mod.rs	/^fn wait_on_gnuplot(children: Vec<Child>) {$/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	P	implementation:Command
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/program.rs	/^    fn warm_up(&mut self, how_long_ns: Duration) -> (u64, u64) {$/;"	P	implementation:Program
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up($/;"	f
warm_up	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/routine.rs	/^    fn warm_up(&mut self, m: &mut Option<Program>, how_long: Duration, parameter: &T)$/;"	P	interface:Routine
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub warm_up_time: Duration,$/;"	m	struct:BenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    warm_up_time: Option<Duration>,$/;"	m	struct:PartialBenchmarkConfig
warm_up_time	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn warm_up_time(mut self, dur: Duration) -> Criterion {$/;"	P	implementation:Criterion
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, _id: &BenchmarkId, _context: &ReportContext, _warmup_ns: f64) {}$/;"	P	interface:Report
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, _: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:CliReport
warmup	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn warmup(&self, id: &BenchmarkId, context: &ReportContext, warmup_ns: f64) {$/;"	P	implementation:Reports
while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while1_s(c: char) -> bool {$/;"	f	function:test::take_while1_s_fail
while1_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while1_s(c: char) -> bool {$/;"	f	function:test::take_while1_s_succeed
while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while_s(c: char) -> bool {$/;"	f	function:test::take_while_s_succeed_none
while_s	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/str.rs	/^    fn while_s(c: char) -> bool {$/;"	f	function:test::take_while_s_succeed_some
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^pub fn while_some<I>(iter: I) -> WhileSome<I> {$/;"	f
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn while_some<A>(self) -> WhileSome<Self>$/;"	P	interface:Itertools
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn while_some<T>(self) -> WhileSome<Self>$/;"	P	interface:ParallelIterator
while_some	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod while_some;$/;"	n
whitespace	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/lib.rs	/^pub mod whitespace;$/;"	n
width	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/quicksort.rs	/^    fn width<T>(l: *mut T, r: *mut T) -> usize {$/;"	f	function:partition_in_blocks
width	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    width: i32,$/;"	m	struct:LandClaim
window_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    window_size: usize,$/;"	m	struct:Windows
window_size	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    window_size: usize,$/;"	m	struct:WindowsProducer
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> HashMap<K, V, DefaultHashBuilder> {$/;"	P	implementation:HashMap
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub fn with_capacity(capacity: usize) -> RawTable<T> {$/;"	P	implementation:RawTable
with_capacity	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity(capacity: usize) -> HashSet<T, DefaultHashBuilder> {$/;"	P	implementation:HashSet
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_capacity_and_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {$/;"	f
with_filter	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_filter<S: Into<String>>(mut self, filter: S) -> Criterion {$/;"	P	implementation:Criterion
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, f: F) -> ParameterizedBenchmark<T>$/;"	f
with_function	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_function<S, F>(mut self, id: S, mut f: F) -> Benchmark$/;"	P	implementation:Benchmark
with_functions	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub(crate) fn with_functions($/;"	f
with_generator	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn with_generator(&mut self, generator: Generator) {$/;"	P	implementation:Runner
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/map.rs	/^    pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {$/;"	f
with_hasher	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/set.rs	/^    pub fn with_hasher(hasher: S) -> HashSet<T, S> {$/;"	f
with_max_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn with_max_len(self, max: usize) -> MaxLen<Self> {$/;"	P	interface:IndexedParallelIterator
with_min_len	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn with_min_len(self, min: usize) -> MinLen<Self> {$/;"	P	interface:IndexedParallelIterator
with_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn with_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn with_position(self) -> WithPosition<Self>$/;"	P	interface:Itertools
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod with_position;$/;"	n
with_position	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs	/^pub fn with_position<I>(iter: I) -> WithPosition<I>$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chain.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/chunks.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/cloned.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/empty.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:Empty
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/enumerate.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/inspect.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/interleave_shortest.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/intersperse.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/len.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/map_with.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn with_producer<CB: ProducerCallback<Self::Item>>(self, callback: CB) -> CB::Output;$/;"	P	interface:IndexedParallelIterator
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/once.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:Once
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/rev.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/skip.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/take.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/update.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/option.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:IntoIter
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/par_either.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	f
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:Chunks
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:ChunksMut
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:Iter
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:IterMut
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/slice/mod.rs	/^    fn with_producer<CB>(self, callback: CB) -> CB::Output$/;"	P	implementation:Windows
with_producer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/vec.rs	/^    fn with_producer<CB>(mut self, callback: CB) -> CB::Output$/;"	P	implementation:IntoIter
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S, F>(mut self, id: S, program: F) -> ParameterizedBenchmark<T>$/;"	f
with_program	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/benchmark.rs	/^    pub fn with_program<S>(mut self, id: S, program: Command) -> Benchmark$/;"	P	implementation:Benchmark
with_solver	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/types.rs	/^    pub fn with_solver(&mut self, solver: Solver) {$/;"	P	implementation:Runner
with_value	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs	/^    pub fn with_value(mut self, value: I::Item) -> Self {$/;"	f
without_plots	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/lib.rs	/^    pub fn without_plots(mut self) -> Criterion {$/;"	P	implementation:Criterion
work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn work(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/branch.rs	/^    fn work2(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
work2	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^    fn work2(input: &[u8]) -> IResult<&[u8], &[u8], ErrorStr> {$/;"	f	function:tests::alt
wrap_sep	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! wrap_sep ($/;"	M
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/either-1.5.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write(&mut self, mut bytes: &[u8]) {$/;"	P	implementation:FxHasher
write	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/raw/mod.rs	/^    pub unsafe fn write(&self, val: T) {$/;"	P	implementation:Bucket
write_color	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/util.rs	/^pub fn write_color(v: &mut Vec<u8>, color: u8) {$/;"	f
write_data	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_data(&mut self, id: &BenchmarkId, data: &MeasurementData) -> Result<()> {$/;"	P	implementation:CsvReportWriter
write_file	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    fn write_file($/;"	P	implementation:FileCsvReport
write_infos	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^fn write_infos(map: &InnerMap, year: u32) -> Result<DayParts, Box<dyn error::Error>> {$/;"	f
write_to_slice	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/api/slice.rs	/^mod write_to_slice;$/;"	n
write_u16	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u16(&mut self, i: u16) {$/;"	P	implementation:FxHasher
write_u32	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u32(&mut self, i: u32) {$/;"	P	implementation:FxHasher
write_u64	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u64(&mut self, i: u64) {$/;"	P	implementation:FxHasher
write_u8	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_u8(&mut self, i: u8) {$/;"	P	implementation:FxHasher
write_usize	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.1.6/src/fx.rs	/^    fn write_usize(&mut self, i: usize) {$/;"	P	implementation:FxHasher
writer	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/csv_report.rs	/^    writer: Writer<W>,$/;"	m	struct:CsvReportWriter
writes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/consumer.rs	/^    writes: &'c AtomicUsize,$/;"	m	struct:CollectConsumer
writes	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/collect/mod.rs	/^    writes: AtomicUsize,$/;"	m	struct:Collect
ws	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-4.1.1/src/whitespace.rs	/^macro_rules! ws ($/;"	M
x	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    x: i32,$/;"	m	struct:LandClaim
x86_intr_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_intr_impl {$/;"	M
x86_m32x4_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m32x4_impl {$/;"	M
x86_m32x4_sse_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse.rs	/^macro_rules! x86_m32x4_sse_impl {$/;"	M
x86_m32x8_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m32x8_avx_impl {$/;"	M
x86_m32x8_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m32x8_impl {$/;"	M
x86_m64x2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m64x2_impl {$/;"	M
x86_m64x2_sse2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse2.rs	/^macro_rules! x86_m64x2_sse2_impl {$/;"	M
x86_m64x4_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m64x4_avx_impl {$/;"	M
x86_m64x4_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m64x4_impl {$/;"	M
x86_m8x16_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x16_impl {$/;"	M
x86_m8x16_sse2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/sse2.rs	/^macro_rules! x86_m8x16_sse2_impl {$/;"	M
x86_m8x32_avx2_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx2.rs	/^macro_rules! x86_m8x32_avx2_impl {$/;"	M
x86_m8x32_avx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/avx.rs	/^macro_rules! x86_m8x32_avx_impl {$/;"	M
x86_m8x32_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x32_impl {$/;"	M
x86_m8x8_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86.rs	/^macro_rules! x86_m8x8_impl {$/;"	M
x86_m8x8_mmx_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/packed_simd-0.3.1/src/codegen/reductions/mask/x86/mmx.rs	/^macro_rules! x86_m8x8_mmx_impl {$/;"	M
y	/home/atraii/Downloads/tmp/advent2018-rs/src/day03/mod.rs	/^    y: i32,$/;"	m	struct:LandClaim
year	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/aoc-runner-derive-0.2.0-alpha1/src/out.rs	/^    year: u32,$/;"	m	struct:LibInfos
year	/home/atraii/Downloads/tmp/advent2018-rs/src/day04/mod.rs	/^    year: usize,$/;"	m	struct:Date
yellow	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.2.5/src/report.rs	/^    fn yellow(&self, s: String) -> String {$/;"	P	implementation:CliReport
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs	/^pub fn zip<I, J>(i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>$/;"	f
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn zip<Z>(self, zip_op: Z) -> Zip<Self, Z::Iter>$/;"	P	interface:IndexedParallelIterator
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod zip;$/;"	n
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/repeat.rs	/^    pub fn zip<Z>(self, zip_op: Z) -> Zip<RepeatN<T>, Z::Iter>$/;"	f
zip	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/zip_eq.rs	/^    zip: Zip<A, B>$/;"	m	struct:ZipEq
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_eq<J>(self, other: J) -> ZipEq<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs	/^pub fn zip_eq<I, J>(i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>$/;"	f
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^    fn zip_eq<Z>(self, zip_op: Z) -> ZipEq<Self, Z::Iter>$/;"	P	interface:IndexedParallelIterator
zip_eq	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.0.3/src/iter/mod.rs	/^mod zip_eq;$/;"	n
zip_eq_impl	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_eq_impl;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^    fn zip_longest<J>(self, other: J) -> ZipLongest<Self, J::IntoIter>$/;"	P	interface:Itertools
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod zip_longest;$/;"	n
zip_longest	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs	/^pub fn zip_longest<T, U>(a: T, b: U) -> ZipLongest<T, U> $/;"	f
ziptuple	/home/atraii/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs	/^mod ziptuple;$/;"	n
